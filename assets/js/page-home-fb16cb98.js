import {
    F as U,
    X as a,
    Y as t,
    ar as jo,
    W as n,
    r as f,
    G as pt,
    K as gt,
    V as W,
    a0 as V,
    a2 as G,
    a3 as B,
    a7 as M,
    D as s,
    _ as e,
    ac as Q,
    a5 as D,
    a4 as N,
    B as oe,
    $ as S,
    a1 as zt,
    a8 as et,
    Z as Jt,
    ai as be,
    w as ht,
    E as Et,
    a6 as E,
    as as Uo,
    at as ba,
    z as Ii,
    a9 as $e,
    C as Ot,
    x as ie,
    au as Ko,
    I as Ke,
    aj as Vt,
    av as _a,
    y as Ce,
    aw as Xo,
    ax as Jo,
    am as gn,
    ah as me,
    ay as va,
    M as ii,
    az as Qo,
    ad as wt,
    ae as Lt,
    m as de,
    aA as Yo,
    aB as Zo,
    aa as ha,
    k as qt,
    J as bn,
    aq as Te,
    ak as _n,
    aC as se,
    aD as ni,
    ap as vn,
    aE as ts,
    aF as es,
    aG as ka,
    aH as is,
    aI as ns,
    aJ as fa,
    aK as as,
    aL as os,
    aM as ss,
    T as ls,
    an as ya,
    ao as $a,
    P as Ai
} from "./modules-fbc96342.js";
import {
    G as le,
    S as ne,
    l as ea,
    h as cs,
    g as ut,
    s as rs,
    i as us,
    j as ds,
    k as zi,
    _ as H,
    m as _e,
    n as jt,
    A as rt,
    o as ps,
    a as Xe,
    p as Oi,
    L as Ta,
    q as gs,
    r as ms,
    t as bs,
    v as mn,
    w as _s,
    x as xe,
    y as Se,
    z as Ca,
    B as wa,
    C as xt,
    E as hn,
    F as vs,
    H as hs,
    I as ks,
    J as fs,
    K as ys,
    M as $s,
    O as Ts,
    P as Cs,
    Q as ws,
    D as Me,
    R as Ue,
    T as ve,
    U as Je,
    V as ae,
    W as Ls,
    X as La,
    Y as Na,
    Z as kn,
    $ as Ns,
    a0 as Ia,
    a1 as Is,
    a2 as zs,
    a3 as xs,
    a4 as za,
    a5 as xa,
    a6 as fn,
    a7 as yn,
    a8 as Ss,
    a9 as Li,
    aa as xi,
    ab as Rs,
    ac as Sa,
    ad as Ra,
    ae as Gs,
    af as $n,
    ag as Ms,
    ah as Bs,
    ai as Ds,
    aj as Ga,
    ak as Ps,
    al as Ma,
    am as As,
    an as Os,
    ao as Ba,
    ap as Da,
    aq as Ws,
    ar as qs,
    as as Es,
    at as Hs,
    au as Fs,
    av as Bi,
    aw as Ie,
    ax as ze,
    ay as ia,
    az as na,
    aA as Vs,
    aB as Pa,
    aC as Aa,
    aD as js,
    aE as Us,
    aF as Ks,
    aG as Oa,
    aH as Xs,
    aI as Js,
    aJ as Qs,
    aK as Wa,
    aL as Ys,
    aM as Zs,
    aN as tl,
    aO as el,
    u as il,
    aP as Ni,
    aQ as nl,
    aR as al,
    aS as Tn,
    aT as ol,
    aU as qa,
    aV as _i,
    aW as sl,
    aX as ll,
    aY as Cn,
    aZ as cl,
    a_ as wn,
    a$ as Ea,
    b0 as rl,
    b1 as Ha,
    b2 as Fa,
    b3 as ul,
    b4 as dl
} from "./page-activity-8d7959ff.js";
const pl = ["xlink:href"],
    gl = {
        __name: "svgIcons",
        props: {
            name: {
                type: String,
                required: !0
            },
            color: {
                type: String,
                default: ""
            }
        },
        setup(l) {
            const i = l,
                o = U(() => `#icon-${i.name}`),
                u = U(() => i.name ? `svg-icon icon-${i.name}` : "svg-icon");
            return (m, g) => (n(), a("svg", jo({
                class: u.value
            }, m.$attrs, {
                style: {
                    color: l.color
                }
            }), [t("use", {
                "xlink:href": o.value
            }, null, 8, pl)], 16))
        }
    },
    aa = f(!1);

function Va() {
    const {
        locale: l
    } = pt(), i = le(), o = gt();
    async function u(c, p) {
        rs(c), l.value = c, i.updateLanguage(c), await us(c), ds(zi.global.t), localStorage.setItem("needUpd", "1"), p === 1 ? m() : aa.value = !1
    }
    const m = () => {
            o.back()
        },
        g = U(() => {
            let c = 0;
            const p = ne().getLanguage,
                r = [];
            if (p) {
                const _ = p == null ? void 0 : p.replace("th", "tha").split("|");
                _ == null || _.forEach(b => {
                    ea.forEach(y => {
                        (b.toLowerCase().indexOf(y.key.toLowerCase()) !== -1 || y.key.toLowerCase().indexOf(b.toLowerCase()) !== -1) && (r.push(y), c++)
                    })
                })
            }
            return i.getLanguage || i.updateLanguage(cs()), c == 0 ? ea : r
        });
    return {
        onClick: u,
        languagesList: g,
        getIcons: ut,
        locale: l,
        goBack: m,
        getLangName: c => {
            const p = g.value.find(r => r.key === c);
            return p ? p.key.toLocaleUpperCase() : i.getLanguage
        },
        show: aa
    }
}
const ml = ["onClick"],
    bl = {
        class: "item-title"
    },
    _l = ["src"],
    vl = {
        key: 0
    },
    hl = {
        key: 1
    },
    kl = W({
        __name: "index",
        props: {
            type: {
                type: Number,
                default: 1
            }
        },
        setup(l) {
            const {
                onClick: i,
                getIcons: o,
                languagesList: u,
                locale: m
            } = Va();
            return (g, d) => {
                const c = V("van-radio"),
                    p = V("van-radio-group");
                return n(), a("div", {
                    class: M(l.type === 2 ? "list info" : "list")
                }, [(n(!0), a(G, null, B(s(u), (r, _) => (n(), a("div", {
                    class: M(["item ar-1px-b", r.key == s(m) ? "checked" : ""]),
                    key: _,
                    onClick: b => s(i)(r.key, l.type)
                }, [t("div", bl, [t("img", {
                    src: s(o)("languages", r.key)
                }, null, 8, _l), l.type === 2 ? (n(), a("span", vl, e(r.key.toLocaleUpperCase()), 1)) : (n(), a("span", hl, e(r.name), 1))]), r.key == s(m) ? (n(), Q(p, {
                    key: 0,
                    modelValue: s(m),
                    "onUpdate:modelValue": d[0] || (d[0] = b => oe(m) ? m.value = b : null)
                }, {
                    default: D(() => [N(c, {
                        "checked-color": "#FAE59F",
                        name: r.key
                    }, null, 8, ["name"])]),
                    _: 2
                }, 1032, ["modelValue"])) : S("", !0)], 10, ml))), 128))], 2)
            }
        }
    });
const fl = H(kl, [
        ["__scopeId", "data-v-34d9d2f0"]
    ]),
    yl = {
        class: "img"
    },
    $l = {
        class: "lang-text"
    },
    Tl = W({
        __name: "LangPopup",
        setup(l) {
            const {
                getLangName: i,
                getIcons: o,
                locale: u,
                show: m
            } = Va(), g = ne(), d = U(() => g.getLoginChangeLanguage == "1");
            return (c, p) => {
                const r = V("van-popup"),
                    _ = zt("lazy");
                return n(), a("div", null, [d.value ? (n(), a("div", {
                    key: 0,
                    class: "right",
                    onClick: p[0] || (p[0] = b => m.value = !0)
                }, [t("div", yl, [et(t("img", null, null, 512), [
                    [_, s(o)("languages", s(u))]
                ])]), t("span", $l, e(s(i)(s(u))), 1)])) : S("", !0), N(r, {
                    show: s(m),
                    "onUpdate:show": p[1] || (p[1] = b => oe(m) ? m.value = b : null),
                    class: "popup",
                    position: "bottom",
                    teleport: "body"
                }, {
                    default: D(() => [N(fl, {
                        type: 2
                    })]),
                    _: 1
                }, 8, ["show"])])
            }
        }
    });
const ja = H(Tl, [
        ["__scopeId", "data-v-187d09fa"]
    ]),
    Cl = {
        moneyup: /^(?!0+$)(?!0*\.0*$)\d{1,11}(\.\d{1,2})?$/,
        redNum: /^([1-9]\d{0,2}|1000)$/,
        requiredNum: /^.{0,20}$/,
        passReg2: /^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?![0-9\W_]+$)[a-zA-Z0-9\W_]{8,30}$/,
        passReg3: /^(?=.*[a-zA-Z])(?=.*\d)[a-zA-Z\d]{8,30}$/,
        outmoneypwd: /^\d{6}$/,
        name: /^[^~`!@#$%^&*+-/=/_()|<\{\}\[\],.:'"//\?\\/>》《]{1,30}$/,
        tuiName: /^[a-zA-Z\s\u4e00-\u9fa50-9][a-zA-Z0-9\s\u4e00-\u9fa5]{1,23}$/,
        yaoma: /^[A-Za-z0-9|A-Za-z|0-9]{6}$/,
        httpCheck: /^((ht|f)tps?):\/\/([\w-]+(\.[\w-]+)*\/?)+(\?([\w\-\.,@?^=%&:\/~\+#]*)+)?$/,
        password: /^[A-Za-z0-9~`!@#$%^&*()_+-='",;.?/|]{6,12}$/,
        account: /^(?![a-zA-Z]+$)[a-zA-Z0-9|0-9]{7,11}$/,
        email: /^[0-9A-Za-zd]+([-_.][0-9A-Za-zd]+)*@([0-9A-Za-zd]+[-.]{0,1})[A-Za-zd]{1,5}$/,
        email1: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/,
        length1: /^.{6,30}$/,
        phone: /\+(9[976]\d|8[987530]\d|6[987]\d|5[90]\d|42\d|3[875]\d|2[98654321]\d|9[8543210]|8[6421]|6[6543210]|5[87654321]|4[987654310]|3[9643210]|2[70]|7|1)\d{1,14}$/,
        phone1: /^(9[976]\d|8[987530]\d|6[987]\d|5[90]\d|42\d|3[875]\d|2[98654321]\d|9[8543210]|8[6421]|6[6543210]|5[87654321]|4[987654310]|3[9643210]|2[70]|7|1)\d{1,14}$/,
        moneys2: /^(-?)\d{1,9}(\.\d{1,2})?$/,
        moneys21: /^\d{1,4}(\.\d{1,2})?$/,
        ip: /^(?:(?:1[0-9][0-9]\.)|(?:2[0-4][0-9]\.)|(?:25[0-5]\.)|(?:[1-9][0-9]\.)|(?:[0-9]\.)){3}(?:(?:1[0-9][0-9])|(?:2[0-4][0-9])|(?:25[0-5])|(?:[1-9][0-9])|(?:[0-9]))$/,
        int: /^[1-9]\d*$/,
        verifyname: /[^a-zA-Z\s+$]/g,
        inputrule: /^[0-9,|]+$/
    },
    wl = {
        moneyup: "validateDesc1",
        redNum: "validateDesc2",
        requiredNum: "validateDesc3",
        passReg2: "pswRequirements",
        outmoneypwd: "validateDesc5",
        name: "validateDesc6",
        tuiName: "validateDesc7",
        endSpace: "validateDesc8",
        yaoma: "validateDesc9",
        httpCheck: "validateDesc10",
        password: "validateDesc11",
        account: "validateDesc13",
        email: "validateDesc14",
        length1: "validateDesc15",
        phone: "validateDesc16",
        moneys2: "validateDesc17",
        moneys21: "validateDesc18",
        ip: "validateDesc19",
        int: "validateDesc20",
        verifyname: "validateDesc21",
        inputtip: "validateDesc22"
    },
    Ll = {
        key: 0,
        class: "title"
    },
    Nl = {
        class: "list"
    },
    Il = ["onClick"],
    zl = {
        class: "item"
    },
    xl = ["src", "data-img"],
    Sl = {
        key: 0,
        class: "win-odds"
    },
    Rl = W({
        __name: "HotGameItem",
        props: {
            gameList: {},
            isAll: {
                type: Boolean
            }
        },
        emits: ["onItemClick"],
        setup(l, {
            emit: i
        }) {
            const o = be(() => _e(() => import("./noticeBarHot-ab6af50b.js"), ["assets/js/noticeBarHot-ab6af50b.js", "assets/js/page-activity-8d7959ff.js", "assets/js/modules-fbc96342.js", "assets/css/modules-66401e0a.css", "assets/js/native/index-08561a08.js", "assets/js/en-bab51ca4.js", "assets/js/rus-ecb14220.js", "assets/js/vi-82b0febd.js", "assets/js/id-16b6cb52.js", "assets/js/hd-c5b1d7e8.js", "assets/js/tha-330057b2.js", "assets/js/md-e8a5e3b0.js", "assets/js/bra-6692a9a5.js", "assets/js/my-32fb9d60.js", "assets/js/bdt-d8f19d0c.js", "assets/js/zh-7d334abd.js", "assets/js/pak-cdc12211.js", "assets/js/ar-1c9ff85b.js", "assets/css/page-activity-9df3b495.css"])),
                u = ne(),
                m = g => {
                    i("onItemClick", g)
                };
            return (g, d) => (n(), a("div", {
                class: M(["hot_container", {
                    hot_all: g.isAll
                }])
            }, [g.gameList.length > 0 ? (n(), a("div", {
                key: 0,
                class: M(["popular", {
                    pupularAll: g.isAll
                }])
            }, [g.isAll ? S("", !0) : (n(), a("div", Ll, [N(s(o), {
                class: "hotGames"
            }), t("span", null, e(g.$t("hot")), 1)])), t("div", Nl, [(n(!0), a(G, null, B(g.gameList, c => (n(), a("div", {
                key: c.vendorId,
                onClick: p => m(c)
            }, [t("div", zl, [t("img", {
                src: c.imgUrl,
                alt: "",
                "data-img": s(ut)("images", "avatar")
            }, null, 8, xl)]), s(u).isShowHotGameWinOdds ? (n(), a("div", Sl, [t("span", null, e(g.$t("winOdds")), 1), t("span", null, e(c.winOdds) + "%", 1), t("div", {
                class: "win-p",
                style: Jt({
                    width: `${Math.min(c.winOdds,100)}%`
                })
            }, null, 4)])) : S("", !0)], 8, Il))), 128))])], 2)) : S("", !0)], 2))
        }
    });
const Gl = H(Rl, [
        ["__scopeId", "data-v-4aa8ca0c"]
    ]),
    Ml = ["onClick"],
    Bl = W({
        __name: "OnlineGamesItem",
        props: {
            gameData: {},
            isAll: {
                type: Boolean
            },
            gameType: {}
        },
        emits: ["onItemClick"],
        setup(l, {
            emit: i
        }) {
            const o = l,
                u = U(() => o.isAll ? o.gameData.gameList : o.gameData.gameList.length > 8 ? o.gameData.gameList.slice(0, 8) : o.gameData.gameList),
                m = g => {
                    i("onItemClick", g)
                };
            return ht(() => {}), (g, d) => {
                const c = zt("lazy");
                return n(), a("div", {
                    class: M(["minGame_container", {
                        all_game: g.isAll
                    }])
                }, [(n(!0), a(G, null, B(u.value, p => (n(), a("div", {
                    class: "onlineGamesItem",
                    key: p.gameID,
                    onClick: r => m(p)
                }, [et((n(), a("img", {
                    class: M(g.gameType === "fish" ? "fish_img" : "min_game_img"),
                    key: p.gameID
                }, null, 2)), [
                    [c, p.img]
                ])], 8, Ml))), 128))], 2)
            }
        }
    });
const Dl = H(Bl, [
        ["__scopeId", "data-v-fc2b8246"]
    ]),
    Pl = {
        class: "lottery_container"
    },
    Al = {
        class: "lottery_container-tab"
    },
    Ol = {
        class: "lottery_container-tab-wrap"
    },
    Wl = ["onClick"],
    ql = {
        class: "lottery_container-list"
    },
    El = ["onClick"],
    Hl = {
        class: "lotterySlotItem_img"
    },
    Fl = W({
        __name: "LotterySlotItem",
        props: {
            gameData: {},
            isAll: {
                type: Boolean
            }
        },
        setup(l) {
            const i = l,
                {
                    t: o
                } = pt(),
                u = gt(),
                m = U(() => i.gameData.gameList.filter($ => $.state === 1)),
                g = U(() => m.value.map($ => $.categoryCode));

            function d($) {
                return $.reduce((T, C) => Array.isArray(C) ? T.concat(d(C)) : T.concat(C), [])
            }
            const c = $ => {
                    if ($) {
                        let T = $;
                        switch (T) {
                            case "Trx Win Go":
                                T = "Trx Win";
                                break;
                            case "FXOSO":
                                T = o("FXOSO");
                            default:
                                T = T
                        }
                        return T
                    }
                    return ""
                },
                p = U(() => {
                    const $ = {};
                    return i.gameData.gameList.forEach(T => {
                        $[T.categoryCode] = T.categoryImg
                    }), $
                }),
                r = f("all");
            let _ = Et({
                all: [],
                "4D": [{
                    categoryCode: "4D",
                    title: "4D",
                    path: "4D"
                }],
                Bingo18: [{
                    categoryCode: "Bingo18",
                    title: "Bingo18",
                    path: "Binguo"
                }],
                XOSO: [{
                    categoryCode: "XOSO",
                    title: "XOSO",
                    path: "XoSo"
                }],
                FXOSO: [{
                    categoryCode: "FXOSO",
                    title: "FXOSO",
                    path: "XoSo"
                }],
                "Win Go": [{
                    typeId: 1,
                    categoryCode: "Win Go",
                    title: "Win Go 1Min",
                    path: "WinGo"
                }, {
                    typeId: 2,
                    categoryCode: "Win Go",
                    title: "Win Go 3Min",
                    path: "WinGo"
                }, {
                    typeId: 3,
                    categoryCode: "Win Go",
                    title: "Win Go 5Min",
                    path: "WinGo"
                }, {
                    typeId: 4,
                    categoryCode: "Win Go",
                    title: "Win Go 10Min",
                    path: "WinGo"
                }],
                "5D": [{
                    typeId: 5,
                    categoryCode: "5D",
                    title: "5D 1Min",
                    path: "5D"
                }, {
                    typeId: 6,
                    categoryCode: "5D",
                    title: "5D 3Min",
                    path: "5D"
                }, {
                    typeId: 7,
                    categoryCode: "5D",
                    title: "5D 5Min",
                    path: "5D"
                }, {
                    typeId: 8,
                    categoryCode: "5D",
                    title: "5D 10Min",
                    path: "5D"
                }],
                K3: [{
                    typeId: 9,
                    categoryCode: "K3",
                    title: "K3 1Min",
                    path: "K3"
                }, {
                    typeId: 10,
                    categoryCode: "K3",
                    title: "K3 3Min",
                    path: "K3"
                }, {
                    typeId: 11,
                    categoryCode: "K3",
                    title: "K3 5Min",
                    path: "K3"
                }, {
                    typeId: 12,
                    categoryCode: "K3",
                    title: "K3 10Min",
                    path: "K3"
                }],
                "Trx Win Go": [{
                    typeId: 13,
                    categoryCode: "Trx Win Go",
                    title: "Trx Win Go 1Min",
                    path: "WinTrx"
                }, {
                    typeId: 14,
                    categoryCode: "Trx Win Go",
                    title: "Trx Win Go 3Min",
                    path: "WinTrx"
                }, {
                    typeId: 15,
                    categoryCode: "Trx Win Go",
                    title: "Trx Win Go 5Min",
                    path: "WinTrx"
                }, {
                    typeId: 16,
                    categoryCode: "Trx Win Go",
                    title: "Trx Win Go 10Min",
                    path: "WinTrx"
                }]
            });
            const b = U(() => _[r.value] || []),
                y = [{
                    value: 1,
                    path: "WinGo"
                }, {
                    value: 3,
                    path: "5D"
                }, {
                    value: 2,
                    path: "K3"
                }, {
                    value: 4,
                    path: "WinTrx"
                }, {
                    value: 5,
                    path: "XoSo"
                }, {
                    value: 6,
                    path: "XoSo"
                }, {
                    value: 7,
                    path: "Binguo"
                }, {
                    value: 8,
                    path: "4D"
                }],
                v = $ => {
                    var C;
                    let T = (C = y.find(h => h.path === $.path)) == null ? void 0 : C.value;
                    $.categoryCode == "FXOSO" && (T = 6), u.push({
                        name: "AllLotteryGames-" + $.path,
                        query: {
                            typeId: $.typeId || "",
                            id: T
                        }
                    })
                };
            return ht(() => {
                const $ = d(Object.values(_));
                _.all = $.filter(T => g.value.includes(T.categoryCode))
            }), ($, T) => {
                const C = zt("lazy");
                return n(), a("div", Pl, [t("div", Al, [t("ul", Ol, [t("li", {
                    class: M({
                        active: r.value === "all"
                    }),
                    onClick: T[0] || (T[0] = h => r.value = "all")
                }, e($.$t("all")), 3), (n(!0), a(G, null, B(m.value, h => (n(), a("li", {
                    onClick: k => r.value = h.categoryCode,
                    class: M({
                        active: h.categoryCode === r.value
                    })
                }, e(c(h.categoryCode)), 11, Wl))), 256))])]), t("div", ql, [(n(!0), a(G, null, B(b.value, h => (n(), a("div", {
                    class: "lotterySlotItem",
                    key: h.id,
                    onClick: k => v(h)
                }, [t("div", Hl, [et(t("img", null, null, 512), [
                    [C, p.value[h.categoryCode]]
                ])]), t("span", null, e(h.title), 1)], 8, El))), 128))])])
            }
        }
    });
const Vl = H(Fl, [
        ["__scopeId", "data-v-62553981"]
    ]),
    jl = {
        class: "lotterySlotItem__container"
    },
    Ul = {
        class: "game_img"
    },
    Kl = {
        class: "game_text"
    },
    Xl = W({
        __name: "OtherGameItem",
        props: {
            info: {},
            title: {}
        },
        setup(l) {
            return pt(), (i, o) => {
                const u = zt("lazy");
                return n(), a("div", jl, [et(t("img", Ul, null, 512), [
                    [u, i.info.vendorImg]
                ]), t("span", Kl, e(i.title), 1)])
            }
        }
    });
const Jl = H(Xl, [
        ["__scopeId", "data-v-62892d7e"]
    ]),
    Ql = ["onClick"],
    Yl = {
        class: "gameImg"
    },
    Zl = W({
        __name: "ElectronicItem",
        props: {
            gameData: {
                type: Object,
                default: () => ({})
            },
            isAll: {
                type: Boolean,
                default: !1
            }
        },
        emits: ["handleOpenGame"],
        setup(l, {
            emit: i
        }) {
            const o = l,
                u = U(() => {
                    var g;
                    return o.isAll ? o.gameData.gameList : (g = o.gameData) == null ? void 0 : g.gameList.slice(0, 6)
                }),
                m = g => {
                    i("handleOpenGame", g, "slot")
                };
            return ht(() => {}), (g, d) => {
                const c = zt("lazy");
                return n(), a("div", {
                    class: M(["onlineGamesItem__container", {
                        allGame: l.isAll
                    }])
                }, [(n(!0), a(G, null, B(u.value, p => (n(), a("div", {
                    key: p.slotsTypeID,
                    class: "item",
                    onClick: r => m(p)
                }, [et(t("img", Yl, null, 512), [
                    [c, p.vendorImg]
                ])], 8, Ql))), 128))], 2)
            }
        }
    });
const tc = H(Zl, [
        ["__scopeId", "data-v-553bd516"]
    ]),
    ec = {
        alt: ""
    },
    ic = W({
        __name: "ElectronicWinRate",
        setup(l) {
            const i = ne(),
                o = U(() => i.winRate.electronicWinRateImgUrl || ""),
                u = U(() => !!(i.winRate.isShowElectronicWinRateExternalLink && o.value)),
                m = () => {
                    i.winRate.electronicWinRateExternalLink && window.open(i.winRate.electronicWinRateExternalLink)
                };
            return (g, d) => {
                const c = zt("lazy");
                return u.value ? (n(), a("div", {
                    key: 0,
                    class: "WinRate",
                    onClick: m
                }, [et(t("img", ec, null, 512), [
                    [c, o.value]
                ])])) : S("", !0)
            }
        }
    });
const Ua = H(ic, [
        ["__scopeId", "data-v-4ae5529e"]
    ]),
    nc = ["src"],
    ac = W({
        __name: "GameListGrid",
        props: {
            currentGame: {
                type: Object,
                default: () => {}
            },
            isAll: {
                type: Boolean,
                default: !1
            }
        },
        setup(l) {
            const i = l,
                o = gt(),
                u = f(!0),
                {
                    onItemClick: m,
                    getAllGame: g,
                    homeState: d
                } = jt(),
                c = U(() => d.allGameList),
                p = U(() => i.currentGame.gameType === "popular" ? 1 : ["sport", "chess", "video"].includes(i.currentGame.gameType) ? 2 : i.currentGame.gameType === "lottery" ? 3 : i.currentGame.gameType === "slot" ? 4 : i.currentGame.gameType === "flash" || i.currentGame.gameType === "fish" ? 5 : -1),
                r = async () => {
                    var y, v;
                    await g();
                    let b = c.value;
                    b.popular = [(y = c.value) == null ? void 0 : y.popular.platformList, (v = c.value) == null ? void 0 : v.popular.clicksTopList], sessionStorage.setItem("gameData", JSON.stringify(b)), u.value = !1
                }, _ = () => {
                    o.push({
                        name: "AllGames",
                        query: {
                            type: i.currentGame.gameType
                        }
                    })
                };
            return r(), (b, y) => (n(), a("div", {
                class: M(["gameListGrid__container", {
                    all_container: l.isAll
                }])
            }, [p.value === 1 ? (n(), Q(Gl, {
                key: 0,
                gameList: l.currentGame.gameList,
                onOnItemClick: s(m),
                isAll: l.isAll
            }, null, 8, ["gameList", "onOnItemClick", "isAll"])) : S("", !0), p.value === 2 ? (n(), a("div", {
                key: 1,
                class: M(["otherGame", {
                    all_other: l.isAll
                }])
            }, [(n(!0), a(G, null, B(l.currentGame.gameList, (v, $) => (n(), Q(Jl, {
                key: $,
                info: v,
                title: l.currentGame.title,
                onClick: T => s(m)({
                    item: v,
                    key: l.currentGame.gameType
                })
            }, null, 8, ["info", "title", "onClick"]))), 128))], 2)) : S("", !0), p.value === 4 ? (n(), Q(Ua, {
                key: 2
            })) : S("", !0), p.value === 4 ? (n(), Q(tc, {
                key: 3,
                gameData: l.currentGame,
                isAll: l.isAll,
                onOnItemClick: s(m)
            }, null, 8, ["gameData", "isAll", "onOnItemClick"])) : S("", !0), p.value === 3 ? (n(), Q(Vl, {
                key: 4,
                gameData: l.currentGame,
                isAll: l.isAll
            }, null, 8, ["gameData", "isAll"])) : S("", !0), p.value === 5 ? (n(), Q(Dl, {
                key: 5,
                gameType: l.currentGame.gameType,
                gameData: l.currentGame,
                isAll: l.isAll,
                onOnItemClick: s(m)
            }, null, 8, ["gameType", "gameData", "isAll", "onOnItemClick"])) : S("", !0), l.isAll ? S("", !0) : (n(), a("button", {
                key: 6,
                onClick: _,
                class: "look_all"
            }, [t("img", {
                src: s(ut)("home", "all"),
                alt: ""
            }, null, 8, nc), E(" " + e(b.$t("viewAll")), 1)]))], 2))
        }
    });
const Ka = H(ac, [
        ["__scopeId", "data-v-921fc0c4"]
    ]),
    oc = {
        class: "gamesList__container",
        id: "gameList"
    },
    sc = {
        key: 0,
        class: "gamesList__container-title"
    },
    lc = W({
        __name: "GameList",
        props: {
            gameData: {}
        },
        setup(l) {
            return (i, o) => (n(), a("div", oc, [i.gameData.gameList.length > 0 && i.gameData.isShow ? (n(), a("div", sc, e(i.gameData.title), 1)) : S("", !0), i.gameData.isShow ? (n(), Q(Ka, {
                key: 1,
                currentGame: i.gameData,
                isAll: !0
            }, null, 8, ["currentGame"])) : S("", !0)]))
        }
    });
const cc = H(lc, [
        ["__scopeId", "data-v-ee80deb1"]
    ]),
    Xa = Symbol();
var Ja = (l, i) => {
    const o = l.__vccOpts || l;
    for (const [u, m] of i) o[u] = m;
    return o
};
const rc = W({
        name: "FunTabItem",
        props: {
            title: String,
            name: [String, Number],
            badge: [String, Number]
        },
        setup(l) {
            const i = Uo(Xa),
                o = f(),
                u = U(() => (i == null ? void 0 : i.activeValue.value) === l.name ? {
                    color: i == null ? void 0 : i.activeColor.value
                } : {}),
                m = () => {
                    i == null || i.setActiveValue(l.name)
                },
                g = {
                    name: ba(l, "name"),
                    el: o
                };
            return ht(() => {
                var d;
                (d = i.addItem) == null || d.call(i, g)
            }), Ii(() => {
                var d;
                (d = i.removeItem) == null || d.call(i, g)
            }), {
                el: o,
                style: u,
                handleClick: m
            }
        }
    }),
    uc = {
        class: "fun-tab-item__wrap"
    },
    dc = {
        class: "fun-tab-item__label"
    },
    pc = {
        key: 0,
        class: "fun-tab-item__badge"
    };

function gc(l, i, o, u, m, g) {
    return n(), a("div", {
        ref: "el",
        style: Jt(l.style),
        class: "fun-tab-item",
        onClick: i[0] || (i[0] = (...d) => l.handleClick && l.handleClick(...d))
    }, [t("div", uc, [$e(l.$slots, "icon"), t("div", dc, [$e(l.$slots, "default", {}, () => [E(e(l.title), 1)])]), l.badge ? (n(), a("div", pc, e(l.badge), 1)) : S("v-if", !0)])], 4)
}
var Qa = Ja(rc, [
    ["render", gc],
    ["__file", "/Users/scoutyin/Documents/ScoutYin/fun-tab/src/tab-item.vue"]
]);
const sn = window;

function mc() {
    let l = 0;
    const i = ["webkit", "moz"];
    for (let o = 0; o < i.length && !window.requestAnimationFrame; ++o) window.requestAnimationFrame = sn[i[o] + "RequestAnimationFrame"], window.cancelAnimationFrame = sn[i[o] + "CancelAnimationFrame"] || sn[i[o] + "CancelRequestAnimationFrame"];
    window.requestAnimationFrame || (window.requestAnimationFrame = function(o) {
        const u = Date.now(),
            m = u - l,
            g = Math.max(0, 16.7 - m),
            d = window.setTimeout(function() {
                o(m)
            }, g);
        return l = u + g, d
    }), window.cancelAnimationFrame || (window.cancelAnimationFrame = function(o) {
        clearTimeout(o)
    })
}
const bc = W({
        name: "FunTabs",
        props: {
            modelValue: {
                type: [String, Number],
                default: ""
            },
            lineWidth: {
                type: [Number, String],
                default: 30
            },
            lineHeight: {
                type: Number,
                default: 3
            },
            activeColor: {
                type: String,
                default: "#1677ff"
            },
            additionalX: {
                type: Number,
                default: 50
            },
            reBoundExponent: {
                type: Number,
                default: 10,
                validator(l) {
                    return l > 0
                }
            },
            inertialDuration: {
                type: Number,
                default: 1e3,
                validator(l) {
                    return l > 0
                }
            },
            reBoundingDuration: {
                type: Number,
                default: 360
            }
        },
        emits: ["update:modelValue", "change"],
        setup(l, {
            emit: i,
            expose: o
        }) {
            let u = null;
            const m = [],
                g = f(),
                d = f(),
                c = f(l.modelValue),
                p = f(0),
                r = f(0),
                _ = f(0),
                b = f(0),
                y = f(0),
                v = f(!1),
                $ = f(!1),
                T = f(0),
                C = f(0),
                h = f(0),
                k = f(0),
                w = f(0),
                L = f(0),
                z = f(16.7),
                I = f(0),
                x = f(0),
                R = f(0),
                O = f(.001),
                P = f(.001),
                K = U(() => {
                    const A = $.value && !v.value ? l.reBoundingDuration : 0;
                    return {
                        transitionTimingFunction: $.value ? "cubic-bezier(0.25, 0.46, 0.45, 0.94)" : "cubic-bezier(0.1, 0.57, 0.1, 1)",
                        transitionDuration: `${A}ms`,
                        transform: `translate3d(${T.value}px, 0px, 0px)`
                    }
                }),
                X = U(() => ({
                    transition: "all 300ms",
                    width: `${r.value}px`,
                    height: `${l.lineHeight}px`,
                    transform: `translate3d(${p.value}px, 0, 0)`,
                    backgroundColor: l.activeColor
                })),
                at = U(() => k.value <= C.value);
            Ot(() => l.modelValue, A => {
                c.value = A, ct()
            });
            const ct = () => {
                    u || (u = new Promise(A => {
                        ie(() => {
                            Rt(), A(), u = null
                        })
                    }))
                },
                ot = A => {
                    c.value = A, i("update:modelValue", A), i("change", A)
                },
                J = A => {
                    m.push(A), ct()
                },
                Z = A => {
                    const st = m.findIndex(Tt => Tt.name === A.name);
                    st !== -1 && (m.splice(st, 1), ct())
                },
                lt = {
                    activeValue: c,
                    activeColor: ba(l, "activeColor"),
                    addItem: J,
                    removeItem: Z,
                    setActiveValue: ot
                };
            Ko(Xa, lt);
            const Rt = () => {
                    var A, st;
                    _.value = ((A = g.value) == null ? void 0 : A.offsetWidth) || 0, b.value = ((st = d.value) == null ? void 0 : st.offsetWidth) - _.value, It(), $t()
                },
                Nt = () => ($.value = !1, T.value > 0 ? ($.value = !0, T.value = 0) : T.value < -b.value && ($.value = !0, T.value = -b.value), $.value),
                _t = () => {
                    at.value ? T.value <= 0 && T.value + b.value > 0 || T.value > 0 ? T.value += k.value - h.value : T.value + b.value <= 0 && (T.value += l.additionalX * (k.value - h.value) / (_.value + Math.abs(T.value + b.value))) : T.value >= 0 ? T.value += l.additionalX * (k.value - h.value) / (_.value + T.value) : (T.value <= 0 && T.value + b.value >= 0 || T.value + b.value <= 0) && (T.value += k.value - h.value), h.value = k.value
                },
                Ht = () => {
                    if (x.value = Date.now(), z.value = x.value - I.value, at.value ? T.value <= -b.value ? (P.value *= (l.reBoundExponent + Math.abs(T.value + b.value)) / l.reBoundExponent, y.value = Math.min(y.value - P.value, 0)) : y.value = Math.min(y.value - P.value * z.value, 0) : T.value >= 0 ? (P.value *= (l.reBoundExponent + T.value) / l.reBoundExponent, y.value = Math.max(y.value - P.value, 0)) : y.value = Math.max(y.value - P.value * z.value, 0), T.value += y.value * z.value / 2, Math.abs(y.value) <= O.value) {
                        Nt();
                        return
                    }
                    I.value = x.value, R.value = requestAnimationFrame(Ht)
                },
                Kt = () => {
                    if (!m.length) return;
                    const A = m.find(st => st.name.value === c.value);
                    return A && A.el.value
                },
                $t = () => {
                    const A = Kt();
                    if (!A) return;
                    const st = A.offsetWidth,
                        Tt = A.offsetLeft,
                        {
                            lineWidth: At
                        } = l;
                    At === "auto" ? r.value = st : At < 1 ? r.value = st * At : r.value = At, p.value = Tt + (st - r.value) / 2
                },
                It = () => {
                    const A = Kt();
                    if (!A) return;
                    const st = A.offsetLeft,
                        Tt = (_.value - A.offsetWidth) / 2;
                    let At = 0;
                    const fe = Math.abs(T.value);
                    st <= fe + Tt ? At = Tt - (st + T.value) : At = -(st - fe - Tt);
                    let ce = At + T.value;
                    ce > 0 && (ce = 0), ce < -b.value && (ce = -b.value), $.value = !0, T.value = ce
                },
                St = A => {
                    A.stopPropagation(), cancelAnimationFrame(R.value), h.value = A.touches[0].clientX
                },
                Ct = A => {
                    b.value <= 0 || (A.preventDefault(), A.stopPropagation(), v.value = !0, w.value = L.value, C.value = h.value, k.value = A.touches[0].clientX, _t(), L.value = A.timeStamp)
                },
                dt = A => {
                    if (v.value = !1, Nt()) cancelAnimationFrame(R.value);
                    else {
                        let st = A.timeStamp - L.value,
                            Tt = L.value - w.value;
                        if (Tt = Tt > 0 ? Tt : 8, st > 100) return;
                        y.value = (h.value - C.value) / Tt, P.value = y.value / l.inertialDuration, I.value = Date.now(), R.value = requestAnimationFrame(Ht)
                    }
                },
                tt = () => {
                    const A = g.value;
                    A.addEventListener("touchstart", St, !1), A.addEventListener("touchmove", Ct, !1), A.addEventListener("touchend", dt, !1)
                },
                nt = () => {
                    const A = g.value;
                    A.removeEventListener("touchstart", St), A.removeEventListener("touchmove", Ct), A.removeEventListener("touchend", dt)
                };
            return ht(() => {
                mc(), tt(), ct()
            }), Ke(() => {
                nt()
            }), o({
                resize: Rt
            }), {
                viewAreaRef: g,
                listRef: d,
                activeValue: c,
                lineOffset: p,
                activeLineWidth: r,
                viewAreaWidth: _,
                offsetX: b,
                speed: y,
                touching: v,
                reBounding: $,
                translateX: T,
                startX: C,
                lastX: h,
                currentX: k,
                startMoveTime: w,
                endMoveTime: L,
                frameTime: z,
                frameStartTime: I,
                frameEndTime: x,
                inertiaFrame: R,
                zeroSpeed: O,
                acceleration: P,
                listStyle: K,
                activeBarStyle: X,
                isMoveLeft: at
            }
        }
    }),
    _c = {
        ref: "viewAreaRef",
        class: "fun-tabs"
    };

function vc(l, i, o, u, m, g) {
    return n(), a("div", _c, [t("div", {
        ref: "listRef",
        style: Jt(l.listStyle),
        class: "fun-tabs__tab-list"
    }, [$e(l.$slots, "default"), t("div", {
        style: Jt(l.activeBarStyle),
        class: "fun-tabs__active-line"
    }, null, 4)], 4)], 512)
}
var Ya = Ja(bc, [
    ["render", vc],
    ["__file", "/Users/scoutyin/Documents/ScoutYin/fun-tab/src/tabs.vue"]
]);
const ei = W({
        __name: "NavBar",
        props: {
            list: {},
            tabClassName: {},
            active: {
                default: 0
            },
            tabItemClassName: {}
        },
        emits: ["update:active", "onClickTab"],
        setup(l, {
            expose: i,
            emit: o
        }) {
            const u = l,
                m = f(),
                g = f(0),
                d = (c, p) => {
                    o("update:active", g.value), o("onClickTab", {
                        item: c,
                        index: p
                    })
                };
            return Ot(() => u.active, c => {
                g.value = c
            }), i({
                funtabRef: m
            }), (c, p) => (n(), Q(s(Ya), {
                modelValue: g.value,
                "onUpdate:modelValue": p[0] || (p[0] = r => g.value = r),
                class: M(c.tabClassName),
                lineWidth: "0",
                ref_key: "funtabRef",
                ref: m
            }, {
                default: D(() => [(n(!0), a(G, null, B(c.list, (r, _) => et((n(), Q(s(Qa), {
                    name: _,
                    key: _,
                    class: M([c.tabItemClassName, {
                        activeClassName: c.active === _
                    }]),
                    onClick: b => d(r, _)
                }, {
                    default: D(() => [$e(c.$slots, "default", {
                        item: r,
                        index: _
                    })]),
                    _: 2
                }, 1032, ["name", "class", "onClick"])), [
                    [Vt, r.isShow !== void 0 ? r.isShow : !0]
                ])), 128))]),
                _: 3
            }, 8, ["modelValue", "class"]))
        }
    }),
    hc = {
        class: "allGames__container"
    },
    oa = 92 + 140,
    sa = 16 + 28,
    kc = W({
        __name: "index",
        setup(l) {
            const {
                homeState: i,
                getGameType: o
            } = jt(), u = f(0), m = f(null), g = f(), d = gt(), {
                t: c
            } = pt(), p = f([]), r = f({});

            function _() {
                d.go(-1)
            }
            const b = f(null),
                {
                    direction: y
                } = _a(m, {
                    onSwipeStart: () => {
                        clearInterval(b.value), v()
                    },
                    onSwipe: v,
                    onSwipeEnd: () => {
                        v();
                        let h = 0;
                        b.value = setInterval(() => {
                            h++, h > 10 && clearInterval(b.value), v()
                        }, 100)
                    }
                });

            function v() {
                const h = document.getElementById(`gamesList-${u.value}`);
                if (h) {
                    const {
                        top: k,
                        bottom: w
                    } = h.getBoundingClientRect();
                    w - oa - sa < 0 ? y.value === "UP" && (u.value = u.value + 1) : k - oa - sa > 0 && y.value === "DOWN" && (u.value = u.value - 1)
                }
            }
            const $ = U(() => p.value[u.value]);
            ht(() => {
                T()
            }), Ce(() => {
                T()
            });
            const T = async () => {
                !i.gameTypeList.length && await o(), i.gameTypeList.forEach(k => {
                    k.categoryCode === "BigAward" || k.state !== 1 || p.value.push({
                        isShow: k.state === 1,
                        title: c("code" + k.typeNameCode),
                        img: k.categoryImg,
                        key: k.categoryCode.toLocaleLowerCase()
                    })
                }), r.value = JSON.parse(sessionStorage.getItem("gameData"));
                const h = d.currentRoute.value.query.type || "";
                u.value = p.value.findIndex(k => k.key + "" === h) || 0
            };

            function C() {}
            return (h, k) => {
                const w = V("NavBar"),
                    L = V("van-sticky"),
                    z = zt("lazy");
                return n(), a("div", hc, [N(w, {
                    title: h.$t("all"),
                    "left-arrow": "",
                    onClickLeft: _
                }, null, 8, ["title"]), N(L, {
                    class: "alGames__container-sticky"
                }, {
                    default: D(() => [N(ei, {
                        list: p.value,
                        active: u.value,
                        "onUpdate:active": k[0] || (k[0] = I => u.value = I),
                        tabClassName: "tabs",
                        onOnClickTab: C,
                        activeClassName: "tab_active",
                        ref_key: "tabRefs",
                        ref: g,
                        tabItemClassName: "funtab_item"
                    }, {
                        default: D(({
                            item: I,
                            index: x
                        }) => [I.isShow ? (n(), a("div", {
                            key: 0,
                            class: M(["tab_item", {
                                tab_active: x === u.value
                            }])
                        }, [et(t("img", null, null, 512), [
                            [z, I.img]
                        ]), t("span", null, e(I.title), 1)], 2)) : S("", !0)]),
                        _: 1
                    }, 8, ["list", "active"])]),
                    _: 1
                }), t("div", {
                    class: "allGames__container-list",
                    ref_key: "allGamesContainer",
                    ref: m
                }, [p.value.length > 0 ? (n(), Q(cc, {
                    key: 0,
                    gameType: $.value.key,
                    title: $.value.title,
                    gameData: r.value[$.value.key]
                }, null, 8, ["gameType", "title", "gameData"])) : S("", !0)], 512)])
            }
        }
    });
const fc = H(kc, [
        ["__scopeId", "data-v-a2bba868"]
    ]),
    RD = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: fc
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    yc = {
        class: "lotteryGamesList__container"
    },
    $c = {
        alt: ""
    },
    Tc = {
        class: "lotteryGamesList__container-item__time"
    },
    Cc = W({
        __name: "index",
        props: {
            gamesList: {
                type: Object,
                default: () => {}
            }
        },
        setup(l) {
            const i = gt();

            function o() {
                i.push({
                    name: "AllLotteryGames-VietnamLottery"
                })
            }
            return (u, m) => {
                const g = zt("lazy");
                return n(), a("div", yc, [t("div", {
                    class: "lotteryGamesList__container-item",
                    onClick: o
                }, [et(t("img", $c, null, 512), [
                    [g, s(ut)("home/AllLotteryGames", "cover")]
                ]), t("span", Tc, e(l.gamesList.title), 1)])])
            }
        }
    });
const wc = H(Cc, [
        ["__scopeId", "data-v-01da4a9c"]
    ]),
    Lc = {
        class: "lotteryGames__container"
    },
    ln = 46 + 90 + 35 + 16,
    la = 16 + 28,
    Nc = W({
        __name: "index",
        setup(l) {
            const {
                t: i
            } = pt(), o = gt(), u = f(0), m = f(0), g = f(null), d = [{
                title: i("all"),
                value: "all"
            }, {
                title: "Win Go",
                value: "winGo"
            }, {
                title: i("Lotre4d"),
                value: "4DLottery"
            }, {
                title: "Lottery",
                value: "lottery"
            }, {
                title: "Xổ số",
                value: "lotteryVi"
            }, {
                title: "Xổ số",
                value: "lotteryVi"
            }], c = [{
                title: i("all"),
                value: "all"
            }, {
                title: i("minites1"),
                value: "60"
            }, {
                title: i("minites3"),
                value: "180"
            }, {
                title: i("minites5"),
                value: "300"
            }, {
                title: i("minites10"),
                value: "600"
            }, {
                title: i("minitesLong"),
                value: "long"
            }];

            function p() {
                o.go(-1)
            }

            function r($) {
                return $ === u.value ? u.value : -1
            }
            const {
                direction: _
            } = _a(g, {
                onSwipeStart: () => {
                    b()
                },
                onSwipe: b,
                onSwipeEnd: () => {
                    b()
                }
            });

            function b() {
                const $ = document.getElementById(`gamesList-${u.value}`);
                if ($) {
                    const {
                        top: T,
                        bottom: C
                    } = $.getBoundingClientRect();
                    C - ln - la < 0 ? _.value === "UP" && (u.value = u.value + 1) : T - ln - la > 0 && _.value === "DOWN" && (u.value = u.value - 1)
                }
            }

            function y() {
                v()
            }

            function v() {
                const $ = document.getElementById(`gamesList-${u.value}`);
                $ && g.value.scrollTo({
                    top: $.offsetTop - ln,
                    behavior: "smooth"
                })
            }
            return ($, T) => {
                const C = V("NavBar"),
                    h = V("van-tab"),
                    k = V("van-tabs");
                return n(), a("div", Lc, [N(C, {
                    "left-arrow": "",
                    title: $.$t("lottery"),
                    onClickLeft: p
                }, null, 8, ["title"]), N(k, {
                    class: "lotteryGames__container-tabBar mgt10",
                    active: u.value,
                    "onUpdate:active": T[0] || (T[0] = w => u.value = w),
                    onClickTab: y,
                    type: "card",
                    color: "transparent",
                    background: "transparent"
                }, {
                    default: D(() => [(n(), a(G, null, B(d, (w, L) => N(h, {
                        name: L,
                        key: L,
                        title: w.title
                    }, null, 8, ["name", "title"])), 64))]),
                    _: 1
                }, 8, ["active"]), N(k, {
                    class: "lotteryGames__container-timeTab",
                    active: m.value,
                    "onUpdate:active": T[1] || (T[1] = w => m.value = w),
                    color: "#ff7172",
                    background: "#fff"
                }, {
                    default: D(() => [(n(), a(G, null, B(c, (w, L) => N(h, {
                        name: L,
                        key: L,
                        title: w.title
                    }, null, 8, ["name", "title"])), 64))]),
                    _: 1
                }, 8, ["active"]), t("div", {
                    class: "lotteryGames__container-list",
                    ref_key: "allGamesContainer",
                    ref: g
                }, [(n(), a(G, null, B(c, (w, L) => N(wc, {
                    "games-list": w,
                    active: r(L),
                    key: L,
                    id: `gamesList-${L}`
                }, null, 8, ["games-list", "active", "id"])), 64))], 512)])
            }
        }
    });
const Ic = H(Nc, [
        ["__scopeId", "data-v-ac2332a7"]
    ]),
    GD = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: Ic
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    zc = {
        class: "onlineGames__container"
    },
    xc = ["placeholder"],
    Sc = ["src"],
    Rc = {
        class: "onlineGames__container-list"
    },
    Gc = ["onClick"],
    Mc = {
        key: 1
    },
    Bc = {
        class: "onlineGames__container-list miniGames"
    },
    Dc = ["onClick"],
    Pc = W({
        __name: "index",
        setup(l) {
            const {
                onItemClick: i
            } = jt(), o = f(), u = f(0), m = f([]), g = f(0);
            Ot(u, w => {
                const L = b.value[w];
                y.value = [], g.value = 0, k(L.slotsTypeID)
            });
            const d = f(!1);
            Ot(d, w => {
                w ? setTimeout(() => {
                    r.value.focus()
                }, 0) : p.value = ""
            });
            const c = w => w.indexOf("_") === -1 ? w : w.split("_")[0].toUpperCase(),
                p = f("");
            Xo(p, w => {
                if (_.value)
                    if (_.value.key === "fish" || _.value.key === "flash") b.value = b.value.filter(L => L.gameNameEn.toLowerCase().includes(w)), w.length === 0 && (b.value = sessionStorage.getItem("slotGamesList") ? JSON.parse(sessionStorage.getItem("slotGamesList")) : null);
                    else {
                        const L = b.value[u.value];
                        k(L.slotsTypeID, w)
                    }
            }, {
                debounce: 300
            });
            const r = f(null),
                _ = f(),
                b = f([]),
                y = f([]),
                v = gt(),
                $ = Jo(y, w => d.value ? w.gameNameEn.toLowerCase().includes(p.value.toLowerCase()) : w.customGameType === g.value);

            function T(w) {
                return w ? w.split(/(?=[A-Z])/).join(" ") : ""
            }

            function C() {
                v.go(-1)
            }

            function h(w) {
                d.value = w
            }
            async function k(w, L = "") {
                const z = await rt(ps({
                    type: w,
                    gameNameEn: L
                }));
                if (z) {
                    if (y.value = z.data.gameLists || [], m.value = z.data.gameCustomTypeLists || [], !m.value.length) return;
                    g.value = m.value[0].customGameType
                }
            }
            return ht(() => {
                _.value = sessionStorage.getItem("gameType") ? JSON.parse(sessionStorage.getItem("gameType")) : null, b.value = sessionStorage.getItem("slotGamesList") ? JSON.parse(sessionStorage.getItem("slotGamesList")) : null;
                const w = JSON.parse(sessionStorage.getItem("clickedItem"));
                w && (u.value = b.value.findIndex(z => z.slotsTypeID === w.slotsTypeID)), o.value && o.value.scrollTo(u.value);
                const L = b.value[u.value];
                k(L.slotsTypeID)
            }), (w, L) => {
                var P, K;
                const z = V("van-icon"),
                    I = V("NavBar"),
                    x = V("van-tab"),
                    R = V("van-tabs"),
                    O = zt("lazy");
                return n(), a("div", zc, [N(I, {
                    "left-arrow": "",
                    onClickLeft: C
                }, {
                    center: D(() => {
                        var X;
                        return [t("span", {
                            class: M({
                                active: d.value
                            })
                        }, e((X = _.value) == null ? void 0 : X.title) + e(w.$t("game")), 3), et(t("input", {
                            type: "text",
                            placeholder: w.$t("searchGame"),
                            class: M({
                                active: d.value
                            }),
                            "onUpdate:modelValue": L[0] || (L[0] = at => p.value = at),
                            ref_key: "searchBarRef",
                            ref: r
                        }, null, 10, xc), [
                            [gn, p.value]
                        ])]
                    }),
                    right: D(() => [N(z, {
                        name: s(ut)("searchBarIcons", "searchIcon"),
                        onClick: L[1] || (L[1] = X => h(!0)),
                        class: M({
                            active: d.value
                        })
                    }, null, 8, ["name", "class"]), t("span", {
                        class: M({
                            active: d.value
                        }),
                        onClick: L[2] || (L[2] = X => h(!1))
                    }, e(w.$t("cancel")), 3)]),
                    _: 1
                }), ((P = _.value) == null ? void 0 : P.key) !== "fish" && ((K = _.value) == null ? void 0 : K.key) !== "flash" ? (n(), Q(R, {
                    key: 0,
                    class: "onlineGames__container-tabBar",
                    active: u.value,
                    "onUpdate:active": L[4] || (L[4] = X => u.value = X),
                    type: "card",
                    color: "transparent",
                    background: "transparent",
                    ref_key: "tabsRef",
                    ref: o
                }, {
                    default: D(() => [(n(!0), a(G, null, B(b.value, (X, at) => (n(), Q(x, {
                        key: at
                    }, {
                        title: D(() => [t("img", {
                            src: s(ut)("home/AllOnlineGames/svg", `${at===u.value?c(X.slotsName)+"Active":c(X.slotsName)}`)
                        }, null, 8, Sc), t("span", null, e(X.slotsName), 1)]),
                        _: 2
                    }, 1024))), 128)), !d.value || m.value.length === 0 ? (n(), Q(s(Ya), {
                        key: 0,
                        modelValue: g.value,
                        "onUpdate:modelValue": L[3] || (L[3] = X => g.value = X),
                        lineWidth: 0
                    }, {
                        default: D(() => [(n(!0), a(G, null, B(m.value, (X, at) => (n(), Q(s(Qa), {
                            name: at,
                            key: at,
                            class: M([{
                                activeClassName: g.value === X.customGameType
                            }]),
                            onClick: ct => g.value = X.customGameType
                        }, {
                            default: D(() => [t("span", null, e(X.customGameTypeName), 1)]),
                            _: 2
                        }, 1032, ["name", "class", "onClick"]))), 128))]),
                        _: 1
                    }, 8, ["modelValue"])) : S("", !0), t("div", Rc, [(n(!0), a(G, null, B(s($), (X, at) => (n(), a("div", {
                        class: "onlineGames__container-list__item",
                        key: at,
                        onClick: ct => s(i)(X)
                    }, [et(t("img", null, null, 512), [
                        [O, X.img]
                    ]), t("span", null, e(T(X.gameNameEn)), 1)], 8, Gc))), 128))])]),
                    _: 1
                }, 8, ["active"])) : (n(), a("div", Mc, [t("div", Bc, [(n(!0), a(G, null, B(b.value, (X, at) => (n(), a("div", {
                    class: "onlineGames__container-list__item",
                    key: at,
                    onClick: ct => s(i)(X)
                }, [E(e(X) + " ", 1), et(t("img", null, null, 512), [
                    [O, X.img]
                ]), t("span", null, e(X.gameNameEn), 1)], 8, Dc))), 128))])]))])
            }
        }
    });
const Ac = H(Pc, [
        ["__scopeId", "data-v-3c086749"]
    ]),
    MD = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: Ac
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    Oc = {
        class: "sysMessage__container"
    },
    Wc = {
        class: "sysMessage__container-msgWrapper__item-title"
    },
    qc = {
        class: "sysMessage__container-msgWrapper__item-time"
    },
    Ec = {
        class: "sysMessage__container-msgWrapper__item-content"
    },
    Hc = W({
        __name: "index",
        setup(l) {
            const {
                t: i
            } = pt(), {
                setLoading: o
            } = Xe(), u = f(), m = le(), g = gt(), d = f(!1), c = f([]), p = Oi(), r = f({
                pageSize: 25
            }), _ = {
                readAllIcon: be(() => _e(() => import("./messageReadAll-aab4bf47.js"), ["assets/js/messageReadAll-aab4bf47.js", "assets/js/page-activity-8d7959ff.js", "assets/js/modules-fbc96342.js", "assets/css/modules-66401e0a.css", "assets/js/native/index-08561a08.js", "assets/js/en-bab51ca4.js", "assets/js/rus-ecb14220.js", "assets/js/vi-82b0febd.js", "assets/js/id-16b6cb52.js", "assets/js/hd-c5b1d7e8.js", "assets/js/tha-330057b2.js", "assets/js/md-e8a5e3b0.js", "assets/js/bra-6692a9a5.js", "assets/js/my-32fb9d60.js", "assets/js/bdt-d8f19d0c.js", "assets/js/zh-7d334abd.js", "assets/js/pak-cdc12211.js", "assets/js/ar-1c9ff85b.js", "assets/css/page-activity-9df3b495.css"])),
                messageIconRed: be(() => _e(() => import("./messageIconRed-0ccfa3d9.js"), ["assets/js/messageIconRed-0ccfa3d9.js", "assets/js/page-activity-8d7959ff.js", "assets/js/modules-fbc96342.js", "assets/css/modules-66401e0a.css", "assets/js/native/index-08561a08.js", "assets/js/en-bab51ca4.js", "assets/js/rus-ecb14220.js", "assets/js/vi-82b0febd.js", "assets/js/id-16b6cb52.js", "assets/js/hd-c5b1d7e8.js", "assets/js/tha-330057b2.js", "assets/js/md-e8a5e3b0.js", "assets/js/bra-6692a9a5.js", "assets/js/my-32fb9d60.js", "assets/js/bdt-d8f19d0c.js", "assets/js/zh-7d334abd.js", "assets/js/pak-cdc12211.js", "assets/js/ar-1c9ff85b.js", "assets/css/page-activity-9df3b495.css"])),
                messageIconIsRead: be(() => _e(() => import("./messageIconIsRead-67fa2960.js"), ["assets/js/messageIconIsRead-67fa2960.js", "assets/js/page-activity-8d7959ff.js", "assets/js/modules-fbc96342.js", "assets/css/modules-66401e0a.css", "assets/js/native/index-08561a08.js", "assets/js/en-bab51ca4.js", "assets/js/rus-ecb14220.js", "assets/js/vi-82b0febd.js", "assets/js/id-16b6cb52.js", "assets/js/hd-c5b1d7e8.js", "assets/js/tha-330057b2.js", "assets/js/md-e8a5e3b0.js", "assets/js/bra-6692a9a5.js", "assets/js/my-32fb9d60.js", "assets/js/bdt-d8f19d0c.js", "assets/js/zh-7d334abd.js", "assets/js/pak-cdc12211.js", "assets/js/ar-1c9ff85b.js", "assets/css/page-activity-9df3b495.css"])),
                messageGarbage: be(() => _e(() => import("./messageGarbage-a45e3411.js"), ["assets/js/messageGarbage-a45e3411.js", "assets/js/page-activity-8d7959ff.js", "assets/js/modules-fbc96342.js", "assets/css/modules-66401e0a.css", "assets/js/native/index-08561a08.js", "assets/js/en-bab51ca4.js", "assets/js/rus-ecb14220.js", "assets/js/vi-82b0febd.js", "assets/js/id-16b6cb52.js", "assets/js/hd-c5b1d7e8.js", "assets/js/tha-330057b2.js", "assets/js/md-e8a5e3b0.js", "assets/js/bra-6692a9a5.js", "assets/js/my-32fb9d60.js", "assets/js/bdt-d8f19d0c.js", "assets/js/zh-7d334abd.js", "assets/js/pak-cdc12211.js", "assets/js/ar-1c9ff85b.js", "assets/css/page-activity-9df3b495.css"]))
            };

            function b() {
                g.back()
            }
            async function y() {
                const T = Oi();
                await gs({
                    state: 1
                }).then(C => {
                    C && T.setReadState(!0)
                }).catch(C => {})
            }

            function v(T) {
                va({
                    title: i("warning"),
                    message: i("warningTxt1")
                }).then(async () => {
                    if (await rt(mn({
                            messageID: T.messageID,
                            state: 2
                        }))) {
                        let h = c.value;
                        c.value = h.filter(k => k.messageID !== T.messageID)
                    }
                })
            }
            const $ = m.getUserInfo;
            return ht(async () => {
                o(!0), await y(), o(!1), u.value.resetRefresh(), $.unRead = 0, m.setUserInfo({
                    ...$
                }), p.setReadState(!0)
            }), (T, C) => {
                const h = V("NavBar");
                return n(), a("div", Oc, [N(h, {
                    title: s(i)("notifications"),
                    "left-arrow": "",
                    onClickLeft: b
                }, null, 8, ["title"]), N(Ta, {
                    ref_key: "msgWrapperRef",
                    ref: u,
                    list: c.value,
                    "onUpdate:list": C[0] || (C[0] = k => c.value = k),
                    "page-query": r.value,
                    "onUpdate:pageQuery": C[1] || (C[1] = k => r.value = k),
                    api: s(bs),
                    distance: 100,
                    isAutoLoad: d.value
                }, {
                    content: D(() => [(n(!0), a(G, null, B(c.value, k => (n(), a("div", {
                        class: M(["sysMessage__container-msgWrapper__item", {
                            opacity: k.state !== 0
                        }]),
                        key: k.messageID
                    }, [t("div", Wc, [(n(), Q(me(k.state === 0 ? _.messageIconRed : _.messageIconIsRead))), t("span", null, e(s(ms)(k.title, 20)), 1), (n(), Q(me(_.messageGarbage), {
                        onClick: w => {
                            w.stopPropagation(), v(k)
                        }
                    }, null, 8, ["onClick"]))]), t("div", qc, e(k.addTime), 1), t("div", Ec, e(k.messages), 1)], 2))), 128))]),
                    _: 1
                }, 8, ["list", "page-query", "api", "isAutoLoad"])])
            }
        }
    });
const Fc = H(Hc, [
        ["__scopeId", "data-v-332fcc4a"]
    ]),
    BD = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: Fc
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    Vc = "/assets/png/close-32ada670.png",
    jc = l => (wt("data-v-21a65021"), l = l(), Lt(), l),
    Uc = {
        class: "game-iframe"
    },
    Kc = ["src"],
    Xc = jc(() => t("img", {
        src: Vc,
        alt: ""
    }, null, -1)),
    Jc = [Xc],
    Qc = W({
        __name: "index",
        setup(l) {
            const i = ii(),
                o = f(null),
                u = f(!1),
                {
                    x: m,
                    y: g,
                    style: d
                } = Qo(o, {
                    initialValue: {
                        x: 30,
                        y: 30
                    },
                    preventDefault: !0,
                    onMove: () => {
                        u.value = !0
                    },
                    onEnd: () => {
                        setTimeout(() => u.value = !1)
                    }
                }),
                c = U(() => {
                    const _ = i.query.url;
                    if (!_) return "";
                    const b = _s(_ || "");
                    return b.startsWith("https:") ? b : `data:text/html;charset=utf-8,${encodeURIComponent(b)}`
                }),
                p = gt(),
                r = () => {
                    u.value || p.push({
                        name: "home"
                    })
                };
            return (_, b) => (n(), a("div", Uc, [c.value ? (n(), a("iframe", {
                key: 0,
                src: c.value
            }, null, 8, Kc)) : S("", !0), t("div", {
                class: "close",
                ref_key: "el",
                ref: o,
                style: Jt(s(d)),
                onClick: r
            }, Jc, 4)]))
        }
    });
const Yc = H(Qc, [
        ["__scopeId", "data-v-21a65021"]
    ]),
    DD = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: Yc
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    Zc = [{
        typeID: 13,
        typeName: "Trx Win Go<br />1Min",
        tabName: "Trx 1Min",
        intervalM: 1,
        scope: "1000|10000|100000|1000000",
        sort: 1,
        gamePresentation: '<p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Giá trị băm là gì?</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Bất kỳ ai biết những điều cơ bản về Bitcoin sẽ được tiếp xúc với một khái niệm, một giá trị băm. Tiêu đề khối của Bitcoin có một hàm băm của khối trước đó dùng để chỉ đến khối trước đó.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Hash là phiên âm của Hash trong tiếng Anh, chúng ta cũng có thể dịch nó thành băm, vì vậy còn được gọi là giá trị băm. Giá trị băm là một giá trị được tính bằng hàm băm (hoặc hàm băm / thuật toán băm). Để hiểu các giá trị băm, Cần phải hiểu các thuộc tính của hàm băm. Một hàm băm có thể biến đổi một cách tính toán đầu vào có độ dài tùy ý thành đầu ra có độ dài cố định.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Mỗi hàm băm có các thuộc tính sau: Nếu giá trị nhập vào giống nhau, Giá trị băm chuyển ra giống nhau,Nếu giá trị nhập vào khác,thì giá trị băm chuyển ra thường khác. Nhưng khả năng xảy ra xung đột băm là cực kỳ nhỏ. Nếu trong lúc nhập vào có sự thay đổi xung đột băm sẽ được giải trừ , sau đó xuất ra một giá trị băm hoàn toàn không liên quan. Vì hàm băm là không thể thay đổi và dễ dàng xác minh, Hầu như không thể đảo ngược giá trị nhập vào từ giá trị từ giá trị băm chuyển ra , Nếu có giá trị nhập vào, giá trị băm tương ứng có thể được xác minh ngay lập tức.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Do đó, giá trị băm của mỗi khối là duy nhất, ngẫu nhiên, không thể phá vỡ, không thể làm giả, giá trị băm của khối được tự động xác định và bản ghi không thể bị giả mạo.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Có bao nhiêu loại USDT?</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">1.&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Omni-USDT dựa trên mạng Bitcoin, địa chỉ nạp tiền là địa chỉ BTC, gửi và rút tiền thông qua mạng BTC;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">2.&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">ERC20-USDT dựa trên giao thức Ethereum ERC20, địa chỉ nạp tiền là địa chỉ ETH, gửi và rút tiền thông qua mạng ETH;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">3.&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">TRC20-USDT dựa trên giao thức TRON TRC20 và mạng TRX (TRON), địa chỉ gửi tiền là địa chỉ TRON, và việc gửi và rút tiền đi qua mạng TRON.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; color: rgb(255, 0, 0); letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span><span style="font-family: 等线; color: rgb(255, 0, 0); letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; color: rgb(255, 0, 0); letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">TrxHash là một mã băm khối của TRC20-USDT dựa trên giao thức TRON TRC20 và mạng TRX (TRON). Số cuối cùng được sử dụng làm kết quả để xác định xem bạn có trúng thưởng hay không (nhấp vào Chiều cao khối để chuyển đến chuỗi công khai để truy vấn hàm băm Khối duy nhất-Block hash)</span><span style="font-family: 等线; color: rgb(255, 0, 0); letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span><span style="font-family: 微软雅黑; letter-spacing: 0pt; font-size: 8pt;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Luật chơi như sau :</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="p" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">1.&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;<font face="等线">1 phút mở thưởng 1 lần, 55 giây đặt cươc, Không thể cược trong vòng 5 giây cuối cùng .</font></span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">2 .&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Sau khi đóng , băm khối của khối được tạo mới được sử dụng làm kết quả&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">mở thưởng.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin-top: 0pt; margin-right: 0pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">3 .&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Tổng số lượt mở thưởng trong một ngày là 1440 lượt.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><br></span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">4. Nếu bạn thực hiện một giao dịch cược là 100, sẽ có khoản khấu trừ phí là 2%, do đó khoản đặt cược thực tế của bạn sẽ là 98.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">5 . 3 phút , 5 phút , 10 phút luật chơi giống 1 phút, chỉ có thời gian mở thưởng không giống nhau.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 21pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">6.&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Chữ số cuối cùng của</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;<font face="等线">giá trị băm (</font></span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Block hash</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">)</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;được sử dụng làm kết quả&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">:</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 21pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Ví dụ:</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 21pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Giá trị băm (</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Block hash</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">)</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">**b569</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;&nbsp;<font face="等线">Kết quả mở thưởng là 9.</font></span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 21pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Giá trị băm (</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Block hash</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">)&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">**d14c</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;&nbsp;<font face="等线">Kết quả mở thưởng là 4.</font></span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 21pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="p" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="p" style="margin: 0pt 0pt 6pt 10.5pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-indent: -21pt;"><span style="font-family: 微软雅黑; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><font face="等线">. Ch</font><font face="微软雅黑">ọ</font><font face="等线">n màu xanh: N</font><font face="微软雅黑">ế</font><font face="等线">u k</font><font face="微软雅黑">ế</font><font face="等线">t qu</font><font face="微软雅黑">ả&nbsp;</font><font face="等线">hi</font><font face="微软雅黑">ệ</font><font face="等线">n th</font><font face="微软雅黑">ị&nbsp;</font><font face="等线">1,3,7,9 b</font><font face="微软雅黑">ạ</font><font face="等线">n s</font><font face="微软雅黑">ẽ&nbsp;</font><font face="等线">nh</font><font face="微软雅黑">ậ</font><font face="等线">n đư</font><font face="微软雅黑">ợ</font><font face="等线">c(98*2)=196; N</font><font face="微软雅黑">ế</font><font face="等线">u k</font><font face="微软雅黑">ế</font><font face="等线">t qu</font><font face="微软雅黑">ả&nbsp;</font><font face="等线">hi</font><font face="微软雅黑">ệ</font><font face="等线">n th</font><font face="微软雅黑">ị&nbsp;</font><font face="等线">5, b</font><font face="微软雅黑">ạ</font><font face="等线">n</font></span><span style="font-family: 微软雅黑; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 10.5pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-indent: -21pt;"><span style="font-family: 微软雅黑; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><font face="等线">s</font><font face="微软雅黑">ẽ&nbsp;</font><font face="等线">nh</font><font face="微软雅黑">ậ</font><font face="等线">n đư</font><font face="微软雅黑">ợ</font><font face="等线">c (98*1.5)=147.</font></span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 10.5pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-indent: -21pt;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">. Chọn màu đỏ: Nếu kết quả hiện thị 2,4,6,8, bạn sẽ nhận được (98*2)=196; Nếu kết quả hiện thị 0, bạn sẽ nhận được (98*1.5)=147.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 10.5pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-indent: -21pt;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">. Chọn màu tím: Nếu kết quả hiện thị 0 hoặc 5, thì bạn sẽ nhận được (98*4.5)=441.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 10.5pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-indent: -21pt;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">. Chọn số : Nếu kết quả mở giống như kết quả bạn đã chọn, bạn sẽ nhận được (98*9)=882</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 10.5pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-indent: -21pt;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">. Chọn lớn&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Big</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;<font face="等线">: Nếu kết quả hiện thị 5,6,7,8,9 bạn sẽ nhận được (98*2)=196.</font></span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 0pt 10.5pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-indent: -21pt;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">. Chọn nhỏ&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Small</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;<font face="等线">: Nếu kết quả hiện thị 0,1,2,3,4 bạn sẽ nhận được (98*2)=196.</font></span></p>'
    }, {
        typeID: 14,
        typeName: "Trx Win Go<br />3Min",
        tabName: "Trx 3Min",
        intervalM: 3,
        scope: "1000|10000|100000|1000000",
        sort: 2,
        gamePresentation: '<p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Giá trị băm là gì?</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Bất kỳ ai biết những điều cơ bản về Bitcoin sẽ được tiếp xúc với một khái niệm, một giá trị băm. Tiêu đề khối của Bitcoin có một hàm băm của khối trước đó dùng để chỉ đến khối trước đó.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Hash là phiên âm của Hash trong tiếng Anh, chúng ta cũng có thể dịch nó thành băm, vì vậy còn được gọi là giá trị băm. Giá trị băm là một giá trị được tính bằng hàm băm (hoặc hàm băm / thuật toán băm). Để hiểu các giá trị băm, Cần phải hiểu các thuộc tính của hàm băm. Một hàm băm có thể biến đổi một cách tính toán đầu vào có độ dài tùy ý thành đầu ra có độ dài cố định.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Mỗi hàm băm có các thuộc tính sau: Nếu giá trị nhập vào giống nhau, Giá trị băm chuyển ra giống nhau,Nếu giá trị nhập vào khác,thì giá trị băm chuyển ra thường khác. Nhưng khả năng xảy ra xung đột băm là cực kỳ nhỏ. Nếu trong lúc nhập vào có sự thay đổi xung đột băm sẽ được giải trừ , sau đó xuất ra một giá trị băm hoàn toàn không liên quan. Vì hàm băm là không thể thay đổi và dễ dàng xác minh, Hầu như không thể đảo ngược giá trị nhập vào từ giá trị từ giá trị băm chuyển ra , Nếu có giá trị nhập vào, giá trị băm tương ứng có thể được xác minh ngay lập tức.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Do đó, giá trị băm của mỗi khối là duy nhất, ngẫu nhiên, không thể phá vỡ, không thể làm giả, giá trị băm của khối được tự động xác định và bản ghi không thể bị giả mạo.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Có bao nhiêu loại USDT?</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">1.&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Omni-USDT dựa trên mạng Bitcoin, địa chỉ nạp tiền là địa chỉ BTC, gửi và rút tiền thông qua mạng BTC;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">2.&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">ERC20-USDT dựa trên giao thức Ethereum ERC20, địa chỉ nạp tiền là địa chỉ ETH, gửi và rút tiền thông qua mạng ETH;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">3.&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">TRC20-USDT dựa trên giao thức TRON TRC20 và mạng TRX (TRON), địa chỉ gửi tiền là địa chỉ TRON, và việc gửi và rút tiền đi qua mạng TRON.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; color: rgb(255, 0, 0); letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span><span style="font-family: 等线; color: rgb(255, 0, 0); letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; color: rgb(255, 0, 0); letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">TrxHash là một mã băm khối của TRC20-USDT dựa trên giao thức TRON TRC20 và mạng TRX (TRON). Số cuối cùng được sử dụng làm kết quả để xác định xem bạn có trúng thưởng hay không (nhấp vào Chiều cao khối để chuyển đến chuỗi công khai để truy vấn hàm băm Khối duy nhất-Block hash)</span><span style="font-family: 等线; color: rgb(255, 0, 0); letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span><span style="font-family: 微软雅黑; letter-spacing: 0pt; font-size: 8pt;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Luật chơi như sau :</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="p" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">1.&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;<font face="等线">1 phút mở thưởng 1 lần, 55 giây đặt cươc, Không thể cược trong vòng 5 giây cuối cùng .</font></span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">2 .&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Sau khi đóng , băm khối của khối được tạo mới được sử dụng làm kết quả&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">mở thưởng.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin-top: 0pt; margin-right: 0pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">3 .&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Tổng số lượt mở thưởng trong một ngày là 1440 lượt.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><br></span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">4. Nếu bạn thực hiện một giao dịch cược là 100, sẽ có khoản khấu trừ phí là 2%, do đó khoản đặt cược thực tế của bạn sẽ là 98.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">5 . 3 phút , 5 phút , 10 phút luật chơi giống 1 phút, chỉ có thời gian mở thưởng không giống nhau.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 21pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">6.&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Chữ số cuối cùng của</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;<font face="等线">giá trị băm (</font></span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Block hash</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">)</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;được sử dụng làm kết quả&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">:</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 21pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Ví dụ:</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 21pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Giá trị băm (</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Block hash</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">)</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">**b569</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;&nbsp;<font face="等线">Kết quả mở thưởng là 9.</font></span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 21pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Giá trị băm (</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Block hash</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">)&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">**d14c</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;&nbsp;<font face="等线">Kết quả mở thưởng là 4.</font></span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 21pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="p" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="p" style="margin: 0pt 0pt 6pt 10.5pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-indent: -21pt;"><span style="font-family: 微软雅黑; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><font face="等线">. Ch</font><font face="微软雅黑">ọ</font><font face="等线">n màu xanh: N</font><font face="微软雅黑">ế</font><font face="等线">u k</font><font face="微软雅黑">ế</font><font face="等线">t qu</font><font face="微软雅黑">ả&nbsp;</font><font face="等线">hi</font><font face="微软雅黑">ệ</font><font face="等线">n th</font><font face="微软雅黑">ị&nbsp;</font><font face="等线">1,3,7,9 b</font><font face="微软雅黑">ạ</font><font face="等线">n s</font><font face="微软雅黑">ẽ&nbsp;</font><font face="等线">nh</font><font face="微软雅黑">ậ</font><font face="等线">n đư</font><font face="微软雅黑">ợ</font><font face="等线">c(98*2)=196; N</font><font face="微软雅黑">ế</font><font face="等线">u k</font><font face="微软雅黑">ế</font><font face="等线">t qu</font><font face="微软雅黑">ả&nbsp;</font><font face="等线">hi</font><font face="微软雅黑">ệ</font><font face="等线">n th</font><font face="微软雅黑">ị&nbsp;</font><font face="等线">5, b</font><font face="微软雅黑">ạ</font><font face="等线">n</font></span><span style="font-family: 微软雅黑; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 10.5pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-indent: -21pt;"><span style="font-family: 微软雅黑; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><font face="等线">s</font><font face="微软雅黑">ẽ&nbsp;</font><font face="等线">nh</font><font face="微软雅黑">ậ</font><font face="等线">n đư</font><font face="微软雅黑">ợ</font><font face="等线">c (98*1.5)=147.</font></span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 10.5pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-indent: -21pt;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">. Chọn màu đỏ: Nếu kết quả hiện thị 2,4,6,8, bạn sẽ nhận được (98*2)=196; Nếu kết quả hiện thị 0, bạn sẽ nhận được (98*1.5)=147.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 10.5pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-indent: -21pt;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">. Chọn màu tím: Nếu kết quả hiện thị 0 hoặc 5, thì bạn sẽ nhận được (98*4.5)=441.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 10.5pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-indent: -21pt;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">. Chọn số : Nếu kết quả mở giống như kết quả bạn đã chọn, bạn sẽ nhận được (98*9)=882</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 10.5pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-indent: -21pt;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">. Chọn lớn&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Big</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;<font face="等线">: Nếu kết quả hiện thị 5,6,7,8,9 bạn sẽ nhận được (98*2)=196.</font></span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 0pt 10.5pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-indent: -21pt;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">. Chọn nhỏ&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Small</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;<font face="等线">: Nếu kết quả hiện thị 0,1,2,3,4 bạn sẽ nhận được (98*2)=196.</font></span></p>'
    }, {
        typeID: 15,
        typeName: "Trx Win Go<br />5Min",
        tabName: "Trx 5Min",
        intervalM: 5,
        scope: "1000|10000|100000|1000000",
        sort: 3,
        gamePresentation: '<p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Giá trị băm là gì?</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Bất kỳ ai biết những điều cơ bản về Bitcoin sẽ được tiếp xúc với một khái niệm, một giá trị băm. Tiêu đề khối của Bitcoin có một hàm băm của khối trước đó dùng để chỉ đến khối trước đó.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Hash là phiên âm của Hash trong tiếng Anh, chúng ta cũng có thể dịch nó thành băm, vì vậy còn được gọi là giá trị băm. Giá trị băm là một giá trị được tính bằng hàm băm (hoặc hàm băm / thuật toán băm). Để hiểu các giá trị băm, Cần phải hiểu các thuộc tính của hàm băm. Một hàm băm có thể biến đổi một cách tính toán đầu vào có độ dài tùy ý thành đầu ra có độ dài cố định.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Mỗi hàm băm có các thuộc tính sau: Nếu giá trị nhập vào giống nhau, Giá trị băm chuyển ra giống nhau,Nếu giá trị nhập vào khác,thì giá trị băm chuyển ra thường khác. Nhưng khả năng xảy ra xung đột băm là cực kỳ nhỏ. Nếu trong lúc nhập vào có sự thay đổi xung đột băm sẽ được giải trừ , sau đó xuất ra một giá trị băm hoàn toàn không liên quan. Vì hàm băm là không thể thay đổi và dễ dàng xác minh, Hầu như không thể đảo ngược giá trị nhập vào từ giá trị từ giá trị băm chuyển ra , Nếu có giá trị nhập vào, giá trị băm tương ứng có thể được xác minh ngay lập tức.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Do đó, giá trị băm của mỗi khối là duy nhất, ngẫu nhiên, không thể phá vỡ, không thể làm giả, giá trị băm của khối được tự động xác định và bản ghi không thể bị giả mạo.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Có bao nhiêu loại USDT?</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">1.&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Omni-USDT dựa trên mạng Bitcoin, địa chỉ nạp tiền là địa chỉ BTC, gửi và rút tiền thông qua mạng BTC;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">2.&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">ERC20-USDT dựa trên giao thức Ethereum ERC20, địa chỉ nạp tiền là địa chỉ ETH, gửi và rút tiền thông qua mạng ETH;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">3.&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">TRC20-USDT dựa trên giao thức TRON TRC20 và mạng TRX (TRON), địa chỉ gửi tiền là địa chỉ TRON, và việc gửi và rút tiền đi qua mạng TRON.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; color: rgb(255, 0, 0); letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span><span style="font-family: 等线; color: rgb(255, 0, 0); letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; color: rgb(255, 0, 0); letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">TrxHash là một mã băm khối của TRC20-USDT dựa trên giao thức TRON TRC20 và mạng TRX (TRON). Số cuối cùng được sử dụng làm kết quả để xác định xem bạn có trúng thưởng hay không (nhấp vào Chiều cao khối để chuyển đến chuỗi công khai để truy vấn hàm băm Khối duy nhất-Block hash)</span><span style="font-family: 等线; color: rgb(255, 0, 0); letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span><span style="font-family: 微软雅黑; letter-spacing: 0pt; font-size: 8pt;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Luật chơi như sau :</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="p" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">1.&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;<font face="等线">1 phút mở thưởng 1 lần, 55 giây đặt cươc, Không thể cược trong vòng 5 giây cuối cùng .</font></span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">2 .&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Sau khi đóng , băm khối của khối được tạo mới được sử dụng làm kết quả&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">mở thưởng.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin-top: 0pt; margin-right: 0pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">3 .&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Tổng số lượt mở thưởng trong một ngày là 1440 lượt.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><br></span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">4. Nếu bạn thực hiện một giao dịch cược là 100, sẽ có khoản khấu trừ phí là 2%, do đó khoản đặt cược thực tế của bạn sẽ là 98.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">5 . 3 phút , 5 phút , 10 phút luật chơi giống 1 phút, chỉ có thời gian mở thưởng không giống nhau.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 21pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">6.&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Chữ số cuối cùng của</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;<font face="等线">giá trị băm (</font></span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Block hash</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">)</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;được sử dụng làm kết quả&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">:</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 21pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Ví dụ:</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 21pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Giá trị băm (</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Block hash</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">)</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">**b569</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;&nbsp;<font face="等线">Kết quả mở thưởng là 9.</font></span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 21pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Giá trị băm (</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Block hash</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">)&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">**d14c</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;&nbsp;<font face="等线">Kết quả mở thưởng là 4.</font></span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 21pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="p" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="p" style="margin: 0pt 0pt 6pt 10.5pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-indent: -21pt;"><span style="font-family: 微软雅黑; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><font face="等线">. Ch</font><font face="微软雅黑">ọ</font><font face="等线">n màu xanh: N</font><font face="微软雅黑">ế</font><font face="等线">u k</font><font face="微软雅黑">ế</font><font face="等线">t qu</font><font face="微软雅黑">ả&nbsp;</font><font face="等线">hi</font><font face="微软雅黑">ệ</font><font face="等线">n th</font><font face="微软雅黑">ị&nbsp;</font><font face="等线">1,3,7,9 b</font><font face="微软雅黑">ạ</font><font face="等线">n s</font><font face="微软雅黑">ẽ&nbsp;</font><font face="等线">nh</font><font face="微软雅黑">ậ</font><font face="等线">n đư</font><font face="微软雅黑">ợ</font><font face="等线">c(98*2)=196; N</font><font face="微软雅黑">ế</font><font face="等线">u k</font><font face="微软雅黑">ế</font><font face="等线">t qu</font><font face="微软雅黑">ả&nbsp;</font><font face="等线">hi</font><font face="微软雅黑">ệ</font><font face="等线">n th</font><font face="微软雅黑">ị&nbsp;</font><font face="等线">5, b</font><font face="微软雅黑">ạ</font><font face="等线">n</font></span><span style="font-family: 微软雅黑; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 10.5pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-indent: -21pt;"><span style="font-family: 微软雅黑; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><font face="等线">s</font><font face="微软雅黑">ẽ&nbsp;</font><font face="等线">nh</font><font face="微软雅黑">ậ</font><font face="等线">n đư</font><font face="微软雅黑">ợ</font><font face="等线">c (98*1.5)=147.</font></span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 10.5pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-indent: -21pt;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">. Chọn màu đỏ: Nếu kết quả hiện thị 2,4,6,8, bạn sẽ nhận được (98*2)=196; Nếu kết quả hiện thị 0, bạn sẽ nhận được (98*1.5)=147.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 10.5pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-indent: -21pt;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">. Chọn màu tím: Nếu kết quả hiện thị 0 hoặc 5, thì bạn sẽ nhận được (98*4.5)=441.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 10.5pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-indent: -21pt;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">. Chọn số : Nếu kết quả mở giống như kết quả bạn đã chọn, bạn sẽ nhận được (98*9)=882</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 10.5pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-indent: -21pt;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">. Chọn lớn&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Big</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;<font face="等线">: Nếu kết quả hiện thị 5,6,7,8,9 bạn sẽ nhận được (98*2)=196.</font></span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 0pt 10.5pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-indent: -21pt;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">. Chọn nhỏ&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Small</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;<font face="等线">: Nếu kết quả hiện thị 0,1,2,3,4 bạn sẽ nhận được (98*2)=196.</font></span></p>'
    }, {
        typeID: 16,
        typeName: "Trx Win Go<br />10Min",
        tabName: "Trx 10Min",
        intervalM: 10,
        scope: "1000|10000|100000|1000000",
        sort: 4,
        gamePresentation: '<p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Giá trị băm là gì?</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Bất kỳ ai biết những điều cơ bản về Bitcoin sẽ được tiếp xúc với một khái niệm, một giá trị băm. Tiêu đề khối của Bitcoin có một hàm băm của khối trước đó dùng để chỉ đến khối trước đó.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Hash là phiên âm của Hash trong tiếng Anh, chúng ta cũng có thể dịch nó thành băm, vì vậy còn được gọi là giá trị băm. Giá trị băm là một giá trị được tính bằng hàm băm (hoặc hàm băm / thuật toán băm). Để hiểu các giá trị băm, Cần phải hiểu các thuộc tính của hàm băm. Một hàm băm có thể biến đổi một cách tính toán đầu vào có độ dài tùy ý thành đầu ra có độ dài cố định.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Mỗi hàm băm có các thuộc tính sau: Nếu giá trị nhập vào giống nhau, Giá trị băm chuyển ra giống nhau,Nếu giá trị nhập vào khác,thì giá trị băm chuyển ra thường khác. Nhưng khả năng xảy ra xung đột băm là cực kỳ nhỏ. Nếu trong lúc nhập vào có sự thay đổi xung đột băm sẽ được giải trừ , sau đó xuất ra một giá trị băm hoàn toàn không liên quan. Vì hàm băm là không thể thay đổi và dễ dàng xác minh, Hầu như không thể đảo ngược giá trị nhập vào từ giá trị từ giá trị băm chuyển ra , Nếu có giá trị nhập vào, giá trị băm tương ứng có thể được xác minh ngay lập tức.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Do đó, giá trị băm của mỗi khối là duy nhất, ngẫu nhiên, không thể phá vỡ, không thể làm giả, giá trị băm của khối được tự động xác định và bản ghi không thể bị giả mạo.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Có bao nhiêu loại USDT?</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">1.&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Omni-USDT dựa trên mạng Bitcoin, địa chỉ nạp tiền là địa chỉ BTC, gửi và rút tiền thông qua mạng BTC;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">2.&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">ERC20-USDT dựa trên giao thức Ethereum ERC20, địa chỉ nạp tiền là địa chỉ ETH, gửi và rút tiền thông qua mạng ETH;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">3.&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">TRC20-USDT dựa trên giao thức TRON TRC20 và mạng TRX (TRON), địa chỉ gửi tiền là địa chỉ TRON, và việc gửi và rút tiền đi qua mạng TRON.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; color: rgb(255, 0, 0); letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span><span style="font-family: 等线; color: rgb(255, 0, 0); letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; color: rgb(255, 0, 0); letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">TrxHash là một mã băm khối của TRC20-USDT dựa trên giao thức TRON TRC20 và mạng TRX (TRON). Số cuối cùng được sử dụng làm kết quả để xác định xem bạn có trúng thưởng hay không (nhấp vào Chiều cao khối để chuyển đến chuỗi công khai để truy vấn hàm băm Khối duy nhất-Block hash)</span><span style="font-family: 等线; color: rgb(255, 0, 0); letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span><span style="font-family: 微软雅黑; letter-spacing: 0pt; font-size: 8pt;"><o:p></o:p></span></p><p class="MsoNormal" style="margin: 0pt 0pt 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Luật chơi như sau :</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="p" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">1.&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;<font face="等线">1 phút mở thưởng 1 lần, 55 giây đặt cươc, Không thể cược trong vòng 5 giây cuối cùng .</font></span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">2 .&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Sau khi đóng , băm khối của khối được tạo mới được sử dụng làm kết quả&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">mở thưởng.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin-top: 0pt; margin-right: 0pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">3 .&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Tổng số lượt mở thưởng trong một ngày là 1440 lượt.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><br></span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">4. Nếu bạn thực hiện một giao dịch cược là 100, sẽ có khoản khấu trừ phí là 2%, do đó khoản đặt cược thực tế của bạn sẽ là 98.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">5 . 3 phút , 5 phút , 10 phút luật chơi giống 1 phút, chỉ có thời gian mở thưởng không giống nhau.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 21pt; padding: 0pt; -webkit-tap-highlight-color: transparent; text-indent: 0pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">6.&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Chữ số cuối cùng của</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;<font face="等线">giá trị băm (</font></span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Block hash</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">)</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;được sử dụng làm kết quả&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">:</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 21pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Ví dụ:</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 21pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Giá trị băm (</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Block hash</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">)</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">**b569</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;&nbsp;<font face="等线">Kết quả mở thưởng là 9.</font></span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 21pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Giá trị băm (</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Block hash</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">)&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">**d14c</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;&nbsp;<font face="等线">Kết quả mở thưởng là 4.</font></span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 21pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="p" style="margin-top: 0pt; margin-right: 0pt; margin-bottom: 6pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;</span></p><p class="p" style="margin: 0pt 0pt 6pt 10.5pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-indent: -21pt;"><span style="font-family: 微软雅黑; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><font face="等线">. Ch</font><font face="微软雅黑">ọ</font><font face="等线">n màu xanh: N</font><font face="微软雅黑">ế</font><font face="等线">u k</font><font face="微软雅黑">ế</font><font face="等线">t qu</font><font face="微软雅黑">ả&nbsp;</font><font face="等线">hi</font><font face="微软雅黑">ệ</font><font face="等线">n th</font><font face="微软雅黑">ị&nbsp;</font><font face="等线">1,3,7,9 b</font><font face="微软雅黑">ạ</font><font face="等线">n s</font><font face="微软雅黑">ẽ&nbsp;</font><font face="等线">nh</font><font face="微软雅黑">ậ</font><font face="等线">n đư</font><font face="微软雅黑">ợ</font><font face="等线">c(98*2)=196; N</font><font face="微软雅黑">ế</font><font face="等线">u k</font><font face="微软雅黑">ế</font><font face="等线">t qu</font><font face="微软雅黑">ả&nbsp;</font><font face="等线">hi</font><font face="微软雅黑">ệ</font><font face="等线">n th</font><font face="微软雅黑">ị&nbsp;</font><font face="等线">5, b</font><font face="微软雅黑">ạ</font><font face="等线">n</font></span><span style="font-family: 微软雅黑; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 10.5pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-indent: -21pt;"><span style="font-family: 微软雅黑; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><font face="等线">s</font><font face="微软雅黑">ẽ&nbsp;</font><font face="等线">nh</font><font face="微软雅黑">ậ</font><font face="等线">n đư</font><font face="微软雅黑">ợ</font><font face="等线">c (98*1.5)=147.</font></span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 10.5pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-indent: -21pt;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">. Chọn màu đỏ: Nếu kết quả hiện thị 2,4,6,8, bạn sẽ nhận được (98*2)=196; Nếu kết quả hiện thị 0, bạn sẽ nhận được (98*1.5)=147.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 10.5pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-indent: -21pt;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">. Chọn màu tím: Nếu kết quả hiện thị 0 hoặc 5, thì bạn sẽ nhận được (98*4.5)=441.</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 10.5pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-indent: -21pt;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">. Chọn số : Nếu kết quả mở giống như kết quả bạn đã chọn, bạn sẽ nhận được (98*9)=882</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 6pt 10.5pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-indent: -21pt;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">. Chọn lớn&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Big</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;<font face="等线">: Nếu kết quả hiện thị 5,6,7,8,9 bạn sẽ nhận được (98*2)=196.</font></span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><o:p></o:p></span></p><p class="p" style="margin: 0pt 0pt 0pt 10.5pt; padding: 0pt; -webkit-tap-highlight-color: transparent; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-indent: -21pt;"><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">. Chọn nhỏ&nbsp;</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">Small</span><span style="font-family: 等线; letter-spacing: 0pt; font-size: 10.5pt; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">&nbsp;<font face="等线">: Nếu kết quả hiện thị 0,1,2,3,4 bạn sẽ nhận được (98*2)=196.</font></span></p>'
    }],
    tr = [{
        typeID: 5,
        typeName: "5D Lotre<br />1Min",
        tabName: "5D 1Min",
        intervalM: 1,
        scope: "1000|10000|100000|1000000",
        sort: 4,
        gamePresentation: '<p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">LUẬT CHƠI XỔ SỐ 5D</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">*Quy định cá cược xổ số</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">( 1 ) Không được phép cược 2 bên (cược đối lập) ví dụ: trong một kỳ xổ không được đặt cược Lớn/Nhỏ,Chẵn/Lẻ...</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">( 2 )&nbsp;</font><span style="font-family: &quot;Times New Roman&quot;;">Nếu bị phát hiện có hành vi đặt cược phi pháp hoặc đặt cược đối đầu, sẽ bị hủy bỏ lệnh rút tiền.</span></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">HƯỚNG DẪN GIẢI THƯỞNG</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Mỗi kỳ sẽ mở ngẫu nhiên 5 con số （00000-99999）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Ví dụ :</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Kỳ xổ hiện tại là 12345</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">A=1</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">B=2</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">C=3</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">D=4</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">E=5</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Tổng =A+B+C+D+E=15</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Cách chơi</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Người chơi có thể chỉ định đặt cược A,B,C,D,E và tổng hợp của năm kết quả</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">A,B,C,D,E có thể mua</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Con số（0 1 2 3 4 5 6 7 8 9）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Nhỏ&nbsp; （0 1 2 3 4）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Lớn&nbsp; （5 6 7 8 9）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Lẻ&nbsp; &nbsp;（1 3 5 7 9）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Chẵn （0 2 4 6 8）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Tổng hợp =A+B+C+D+E có thể mua</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Nhỏ&nbsp; （0-22）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Lớn&nbsp; （23-45）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Lẻ&nbsp; &nbsp;（1 3 ···43 45）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Chẵn （0 2 ···42 44）</font></p>'
    }, {
        typeID: 6,
        typeName: "5D Lotre<br />3Min",
        tabName: "5D 3Min",
        intervalM: 3,
        scope: "1000|10000|100000|1000000",
        sort: 3,
        gamePresentation: '<p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">LUẬT CHƠI XỔ SỐ 5D</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">*Quy định cá cược xổ số</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">( 1 ) Không được phép cược 2 bên (cược đối lập) ví dụ: trong một kỳ xổ không được đặt cược Lớn/Nhỏ,Chẵn/Lẻ...</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">( 2 )&nbsp;</font><span style="font-family: &quot;Times New Roman&quot;;">Nếu bị phát hiện có hành vi đặt cược phi pháp hoặc đặt cược đối đầu, sẽ bị hủy bỏ lệnh rút tiền.</span></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">HƯỚNG DẪN GIẢI THƯỞNG</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Mỗi kỳ sẽ mở ngẫu nhiên 5 con số （00000-99999）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Ví dụ :</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Kỳ xổ hiện tại là 12345</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">A=1</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">B=2</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">C=3</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">D=4</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">E=5</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Tổng =A+B+C+D+E=15</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Cách chơi</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Người chơi có thể chỉ định đặt cược A,B,C,D,E và tổng hợp của năm kết quả</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">A,B,C,D,E có thể mua</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Con số（0 1 2 3 4 5 6 7 8 9）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Nhỏ&nbsp; （0 1 2 3 4）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Lớn&nbsp; （5 6 7 8 9）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Lẻ&nbsp; &nbsp;（1 3 5 7 9）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Chẵn （0 2 4 6 8）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Tổng hợp =A+B+C+D+E có thể mua</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Nhỏ&nbsp; （0-22）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Lớn&nbsp; （23-45）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Lẻ&nbsp; &nbsp;（1 3 ···43 45）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Chẵn （0 2 ···42 44）</font></p>'
    }, {
        typeID: 7,
        typeName: "5D Lotre<br />5Min",
        tabName: "5D 5Min",
        intervalM: 5,
        scope: "1000|10000|100000|1000000",
        sort: 2,
        gamePresentation: '<p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">LUẬT CHƠI XỔ SỐ 5D</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">*Quy định cá cược xổ số</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">( 1 ) Không được phép cược 2 bên (cược đối lập) ví dụ: trong một kỳ xổ không được đặt cược Lớn/Nhỏ,Chẵn/Lẻ...</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">( 2 )&nbsp;</font><span style="font-family: &quot;Times New Roman&quot;;">Nếu bị phát hiện có hành vi đặt cược phi pháp hoặc đặt cược đối đầu, sẽ bị hủy bỏ lệnh rút tiền.</span></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">HƯỚNG DẪN GIẢI THƯỞNG</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Mỗi kỳ sẽ mở ngẫu nhiên 5 con số （00000-99999）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Ví dụ :</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Kỳ xổ hiện tại là 12345</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">A=1</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">B=2</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">C=3</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">D=4</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">E=5</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Tổng =A+B+C+D+E=15</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Cách chơi</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Người chơi có thể chỉ định đặt cược A,B,C,D,E và tổng hợp của năm kết quả</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">A,B,C,D,E có thể mua</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Con số（0 1 2 3 4 5 6 7 8 9）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Nhỏ&nbsp; （0 1 2 3 4）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Lớn&nbsp; （5 6 7 8 9）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Lẻ&nbsp; &nbsp;（1 3 5 7 9）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Chẵn （0 2 4 6 8）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Tổng hợp =A+B+C+D+E có thể mua</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Nhỏ&nbsp; （0-22）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Lớn&nbsp; （23-45）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Lẻ&nbsp; &nbsp;（1 3 ···43 45）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Chẵn （0 2 ···42 44）</font></p>'
    }, {
        typeID: 8,
        typeName: "5D Lotre<br />10Min",
        tabName: "5D 10Min",
        intervalM: 10,
        scope: "1000|10000|100000|1000000",
        sort: 1,
        gamePresentation: '<p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">LUẬT CHƠI XỔ SỐ 5D</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">*Quy định cá cược xổ số</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">( 1 ) Không được phép cược 2 bên (cược đối lập) ví dụ: trong một kỳ xổ không được đặt cược Lớn/Nhỏ,Chẵn/Lẻ...</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">( 2 )&nbsp;</font><span style="font-family: &quot;Times New Roman&quot;;">Nếu bị phát hiện có hành vi đặt cược phi pháp hoặc đặt cược đối đầu, sẽ bị hủy bỏ lệnh rút tiền.</span></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">HƯỚNG DẪN GIẢI THƯỞNG</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Mỗi kỳ sẽ mở ngẫu nhiên 5 con số （00000-99999）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Ví dụ :</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Kỳ xổ hiện tại là 12345</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">A=1</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">B=2</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">C=3</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">D=4</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">E=5</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Tổng =A+B+C+D+E=15</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Cách chơi</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Người chơi có thể chỉ định đặt cược A,B,C,D,E và tổng hợp của năm kết quả</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">A,B,C,D,E có thể mua</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Con số（0 1 2 3 4 5 6 7 8 9）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Nhỏ&nbsp; （0 1 2 3 4）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Lớn&nbsp; （5 6 7 8 9）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Lẻ&nbsp; &nbsp;（1 3 5 7 9）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Chẵn （0 2 4 6 8）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Tổng hợp =A+B+C+D+E có thể mua</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Nhỏ&nbsp; （0-22）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Lớn&nbsp; （23-45）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Lẻ&nbsp; &nbsp;（1 3 ···43 45）</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="Times New Roman">Chẵn （0 2 ···42 44）</font></p>'
    }],
    er = [{
        typeID: 9,
        typeName: "K3 Lotre<br />1Min",
        tabName: "K3 1Min",
        intervalM: 1,
        scope: "1000|10000|100000|1000000",
        sort: 1,
        gamePresentation: '<p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Xổ số Fast 3 mỗi kỳ xổ sẽ là 3 con số,con số sẽ được mở ngẫu nhiên từ 111 đến 666 không có số 0 và các con số xổ không theo thứ tự cụ thể Fast 3 đó là đoán tất cả hoặc một phần của 3 con số trúng thưởng</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược tổng</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược số tổng của 3 viên xúc xắc</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược bộ 3 toàn bộ</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Người chơi đặt cược nhóm các bộ ba giống nhau như: （111、222、…、666）bao trọn bộ và tiến hành đặt cược</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược bộ 3 đơn</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Người chơi chọn một trong tất cả các bộ ba bất kỳ（111、…、666）và tiến hành đặt cược</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược hai số đôi</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Đặt cược vào ba số gồm hai số đôi được chỉ định và một số bất kỳ</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược số đôi +1 số đơn</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Đặt cược vào ba số được chỉ định gồm hai số đôi và một số khác</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược 3 số khác nhau</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Đặt cược vào ba số hoàn toàn khác nhau</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược 2 số khác nhau</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Đặt cược 2 số khác nhau + 1 số khác để đặt chung trong 1 vé cược</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược 3 số liên tiếp</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược toàn bộ các số liên tiếp là [123, 234, 345, 456] tiến hành đặt cược<br></font></p>'
    }, {
        typeID: 10,
        typeName: "K3 Lotre<br />3Min",
        tabName: "K3 3Min",
        intervalM: 3,
        scope: "1000|10000|100000|1000000",
        sort: 2,
        gamePresentation: '<p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Xổ số Fast 3 mỗi kỳ xổ sẽ là 3 con số,con số sẽ được mở ngẫu nhiên từ 111 đến 666 không có số 0 và các con số xổ không theo thứ tự cụ thể Fast 3 đó là đoán tất cả hoặc một phần của 3 con số trúng thưởng</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược tổng</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược số tổng của 3 viên xúc xắc</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược bộ 3 toàn bộ</font><span style="font-family: 宋体;">Xổ số Fast 3 mỗi kỳ xổ sẽ là 3 con số,con số sẽ được mở ngẫu nhiên từ 111 đến 666 không có số 0 và các con số xổ không theo thứ tự cụ thể Fast 3 đó là đoán tất cả hoặc một phần của 3 con số trúng thưởng</span></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược tổng</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược số tổng của 3 viên xúc xắc</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược bộ 3 toàn bộ</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Người chơi đặt cược nhóm các bộ ba giống nhau như: （111、222、…、666）bao trọn bộ và tiến hành đặt cược</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược bộ 3 đơn</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Người chơi chọn một trong tất cả các bộ ba bất kỳ（111、…、666）và tiến hành đặt cược</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược hai số đôi</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Đặt cược vào ba số gồm hai số đôi được chỉ định và một số bất kỳ</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược số đôi +1 số đơn</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Đặt cược vào ba số được chỉ định gồm hai số đôi và một số khác</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược 3 số khác nhau</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Đặt cược vào ba số hoàn toàn khác nhau</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược 2 số khác nhau</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Đặt cược 2 số khác nhau + 1 số khác để đặt chung trong 1 vé cược</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược 3 số liên tiếp</font></p><p class="MsoNormal" style="margin-bottom: 0px; -webkit-tap-highlight-color: transparent;"><font face="宋体">Cược toàn bộ các số liên tiếp là [123, 234, 345, 456] tiến hành đặt cược<br></font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Người chơi đặt cược nhóm các bộ ba giống nhau như: （111、222、…、666）bao trọn bộ và tiến hành đặt cược</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược bộ 3 đơn</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Người chơi chọn một trong tất cả các bộ ba bất kỳ（111、…、666）và tiến hành đặt cược</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược hai số đôi</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Đặt cược vào ba số gồm hai số đôi được chỉ định và một số bất kỳ</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược số đôi +1 số đơn</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Đặt cược vào ba số được chỉ định gồm hai số đôi và một số khác</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược 3 số khác nhau</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Đặt cược vào ba số hoàn toàn khác nhau</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược 2 số khác nhau</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Đặt cược 2 số khác nhau + 1 số khác để đặt chung trong 1 vé cược</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược 3 số liên tiếp</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược toàn bộ các số liên tiếp là [123, 234, 345, 456] tiến hành đặt cược<br></font></p>'
    }, {
        typeID: 11,
        typeName: "K3 Lotre<br />5Min",
        tabName: "K3 5Min",
        intervalM: 5,
        scope: "1000|10000|100000|1000000",
        sort: 3,
        gamePresentation: '<p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Xổ số Fast 3 mỗi kỳ xổ sẽ là 3 con số,con số sẽ được mở ngẫu nhiên từ 111 đến 666 không có số 0 và các con số xổ không theo thứ tự cụ thể Fast 3 đó là đoán tất cả hoặc một phần của 3 con số trúng thưởng</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược tổng</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược số tổng của 3 viên xúc xắc</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược bộ 3 toàn bộ</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Người chơi đặt cược nhóm các bộ ba giống nhau như: （111、222、…、666）bao trọn bộ và tiến hành đặt cược</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược bộ 3 đơn</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Người chơi chọn một trong tất cả các bộ ba bất kỳ（111、…、666）và tiến hành đặt cược</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược hai số đôi</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Đặt cược vào ba số gồm hai số đôi được chỉ định và một số bất kỳ</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược số đôi +1 số đơn</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Đặt cược vào ba số được chỉ định gồm hai số đôi và một số khác</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược 3 số khác nhau</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Đặt cược vào ba số hoàn toàn khác nhau</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược 2 số khác nhau</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Đặt cược 2 số khác nhau + 1 số khác để đặt chung trong 1 vé cược</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược 3 số liên tiếp</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược toàn bộ các số liên tiếp là [123, 234, 345, 456] tiến hành đặt cược<br></font></p>'
    }, {
        typeID: 12,
        typeName: "K3 Lotre<br />10Min",
        tabName: "K3 10Min",
        intervalM: 10,
        scope: "1000|10000|100000|1000000",
        sort: 4,
        gamePresentation: '<p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Xổ số Fast 3 mỗi kỳ xổ sẽ là 3 con số,con số sẽ được mở ngẫu nhiên từ 111 đến 666 không có số 0 và các con số xổ không theo thứ tự cụ thể Fast 3 đó là đoán tất cả hoặc một phần của 3 con số trúng thưởng</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược tổng</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược số tổng của 3 viên xúc xắc</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược bộ 3 toàn bộ</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Người chơi đặt cược nhóm các bộ ba giống nhau như: （111、222、…、666）bao trọn bộ và tiến hành đặt cược</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược bộ 3 đơn</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Người chơi chọn một trong tất cả các bộ ba bất kỳ（111、…、666）và tiến hành đặt cược</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược hai số đôi</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Đặt cược vào ba số gồm hai số đôi được chỉ định và một số bất kỳ</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược số đôi +1 số đơn</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Đặt cược vào ba số được chỉ định gồm hai số đôi và một số khác</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược 3 số khác nhau</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Đặt cược vào ba số hoàn toàn khác nhau</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược 2 số khác nhau</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Đặt cược 2 số khác nhau + 1 số khác để đặt chung trong 1 vé cược</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược 3 số liên tiếp</font></p><p class="MsoNormal" style="-webkit-tap-highlight-color: transparent;"><font face="宋体">Cược toàn bộ các số liên tiếp là [123, 234, 345, 456] tiến hành đặt cược<br></font></p>'
    }],
    ir = [{
        typeID: 1,
        typeName: "Win Go<br />1Min",
        tabName: "WinGo 1Min",
        intervalM: 1,
        scope: "1000|10000|100000|1000000",
        sort: 4,
        gamePresentation: '<p class="MsoNormal"><span style="font-family: &quot;Times New Roman&quot;;">\uFEFF</span><font face="Times New Roman"><span style="font-size: 16px;"><span style="font-weight: 700;">LUẬT CHƠI XỔ SỐ WINGO 1 Phút</span></span></font></p><p class="MsoNormal"><font face="Times New Roman"><span style="font-size: 16px;"><span style="font-weight: 700;">*Quy định cá cược xổ số</span></span></font></p><p class="MsoNormal"><font face="Times New Roman"><span style="font-size: 16px;"><span style="font-weight: 700;">( 1 ) Không được phép cược 2 bên (cược đối lập) ví dụ: trong một kỳ xổ không được đặt cược Lớn/Nhỏ,Chẵn/Lẻ...</span></span></font></p><p class="MsoNormal"><font face="Times New Roman"><span style="font-size: 16px;"><span style="font-weight: 700;">( 2 ) Không được phép cược 8 số trở lên trong cùng một kỳ xổ.</span></span></font></p><p class="MsoNormal"><font face="Times New Roman"><span style="font-size: 16px;"><span style="font-weight: 700;">( 3 ) Nếu bị phát hiện có hành vi đặt cược phi pháp hoặc đặt cược đối đầu, sẽ bị hủy bỏ lệnh rút tiền.</span></span></font></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">HƯỚNG DẪN GIẢI THƯỞNG</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">Một phút mở thưởng một lần , 55 giây đặt cược, 5 giây còn lại chờ đợi mở kết quả tạm ngưng đặt cược. Giải thưởng sẽ được mở cả ngày. Tổng số lượt mở thưởng mỗi ngày là 1440 lượt.</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">Nếu bạn thực hiện một giao dịch mua là 100, sẽ có khoản khấu trừ là 2, do đó khoản đặt thực tế của bạn là 98.</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">1. Chọn màu xanh lá cây: nếu kết quả hiển thị số "1,3,7,9" bạn sẽ nhận được (98 * 2)= 196.</span></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">- Nếu kết quả hiển thị số "5", bạn sẽ nhận được (98 * 1.5)= 147.</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">2. Chọn màu đỏ: nếu kết quả hiển thị số "2,4,6,8" bạn sẽ nhận được (98 * 2)= 196; nếu kết quả hiển thị là "0" bạn sẽ nhận được (98 * 1.5)= 147.</span></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">3. Chọn màu tím: nếu kết quả hiển thị số "0" hoặc “5”, bạn sẽ nhận được (98 * 4,5)= 441.</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">4. Chọn số: nếu kết quả mở ra giống với kết quả bạn đã chọn, bạn sẽ nhận được (98 * 9)= 882.</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">5. Chọn lớn: nếu kết quả hiển thị số "5,6,7,8,9" bạn sẽ nhận được (98 * 2)= 196.</span><br></p><p class="MsoNormal" style="margin-bottom: 0px;"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">6. Chọn nhỏ: nếu kết quả hiển thị số "0,1,2,3,4" bạn sẽ nhận được (98 * 2)= 196.</span></p>'
    }, {
        typeID: 2,
        typeName: "Win Go<br />3Min",
        tabName: "WinGo 3Min",
        intervalM: 3,
        scope: "1000|10000|100000|1000000",
        sort: 3,
        gamePresentation: '<p class="MsoNormal"><font face="Times New Roman"><span style="font-size: 16px;"><span style="font-weight: 700;">LUẬT CHƠI XỔ SỐ WINGO 3 Phút</span></span></font></p><p class="MsoNormal"><font face="Times New Roman"><span style="font-size: 16px;"><span style="font-weight: 700;">*Quy định cá cược xổ số</span></span></font></p><p class="MsoNormal"><font face="Times New Roman"><span style="font-size: 16px;"><span style="font-weight: 700;">( 1 ) Không được phép cược 2 bên (cược đối lập) ví dụ: trong một kỳ xổ không được đặt cược Lớn/Nhỏ,Chẵn/Lẻ...</span></span></font></p><p class="MsoNormal"><font face="Times New Roman"><span style="font-size: 16px;"><span style="font-weight: 700;">( 2 ) Không được phép cược 8 số trở lên trong cùng một kỳ xổ.</span></span></font></p><p class="MsoNormal"><font face="Times New Roman"><span style="font-size: 16px;"><span style="font-weight: 700;">( 3 ) Nếu bị phát hiện có hành vi đặt cược phi pháp hoặc đặt cược đối đầu, sẽ bị hủy bỏ lệnh rút tiền.</span></span></font></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">HƯỚNG DẪN GIẢI THƯỞNG</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">Một phút mở thưởng một lần ,2 phút 55 giây đặt cược, 5 giây còn lại chờ đợi mở kết quả tạm ngưng đặt cược. Giải thưởng sẽ được mở cả ngày. Tổng số lượt mở thưởng mỗi ngày là 480 lượt.</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">Nếu bạn thực hiện một giao dịch mua là 100, sẽ có khoản khấu trừ là 2, do đó khoản đặt thực tế của bạn là 98.</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">1. Chọn màu xanh lá cây: nếu kết quả hiển thị số "1,3,7,9" bạn sẽ nhận được (98 * 2)= 196.</span></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">- Nếu kết quả hiển thị số "5", bạn sẽ nhận được (98 * 1.5)= 147.</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">2. Chọn màu đỏ: nếu kết quả hiển thị số "2,4,6,8" bạn sẽ nhận được (98 * 2)= 196; nếu kết quả hiển thị là "0" bạn sẽ nhận được (98 * 1.5)= 147.</span></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">3. Chọn màu tím: nếu kết quả hiển thị số "0" hoặc “5”, bạn sẽ nhận được (98 * 4,5)= 441.</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">4. Chọn số: nếu kết quả mở ra giống với kết quả bạn đã chọn, bạn sẽ nhận được (98 * 9)= 882.</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">5. Chọn lớn: nếu kết quả hiển thị số "5,6,7,8,9" bạn sẽ nhận được (98 * 2)= 196.</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">6. Chọn nhỏ: nếu kết quả hiển thị số "0,1,2,3,4" bạn sẽ nhận được (98 * 2)= 196.</span></p>'
    }, {
        typeID: 3,
        typeName: "Win Go<br />5Min",
        tabName: "WinGo 5Min",
        intervalM: 5,
        scope: "1000|10000|100000|1000000",
        sort: 2,
        gamePresentation: '<p class="MsoNormal"><font face="Times New Roman"><span style="font-size: 16px;"><span style="font-weight: 700;">LUẬT CHƠI XỔ SỐ WINGO 5 Phút</span></span></font></p><p class="MsoNormal"><font face="Times New Roman"><span style="font-size: 16px;"><span style="font-weight: 700;">*Quy định cá cược xổ số</span></span></font></p><p class="MsoNormal"><font face="Times New Roman"><span style="font-size: 16px;"><span style="font-weight: 700;">( 1 ) Không được phép cược 2 bên (cược đối lập) ví dụ: trong một kỳ xổ không được đặt cược Lớn/Nhỏ,Chẵn/Lẻ...</span></span></font></p><p class="MsoNormal"><font face="Times New Roman"><span style="font-size: 16px;"><span style="font-weight: 700;">( 2 ) Không được phép cược 8 số trở lên trong cùng một kỳ xổ.</span></span></font></p><p class="MsoNormal"><font face="Times New Roman"><span style="font-size: 16px;"><span style="font-weight: 700;">( 3 ) Nếu bị phát hiện có hành vi đặt cược phi pháp hoặc đặt cược đối đầu, sẽ bị hủy bỏ lệnh rút tiền.</span></span></font></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">HƯỚNG DẪN GIẢI THƯỞNG</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">Năm phút mở thưởng một lần , 4 phút 55 giây đặt cược, 5 giây còn lại chờ đợi mở kết quả tạm ngưng đặt cược. Giải thưởng sẽ được mở cả ngày. Tổng số lượt mở thưởng mỗi ngày là 288 lượt.</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">Nếu bạn thực hiện một giao dịch mua là 100, sẽ có khoản khấu trừ là 2, do đó khoản đặt thực tế của bạn là 98.</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">1. Chọn màu xanh lá cây: nếu kết quả hiển thị số "1,3,7,9" bạn sẽ nhận được (98 * 2)= 196.</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">- Nếu kết quả hiển thị số "5", bạn sẽ nhận được (98 * 1.5)= 147.</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">2. Chọn màu đỏ: nếu kết quả hiển thị số "2,4,6,8" bạn sẽ nhận được (98 * 2)= 196; nếu kết quả hiển thị là "0" bạn sẽ nhận được (98 * 1.5)= 147.</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">3. Chọn màu tím: nếu kết quả hiển thị số "0" hoặc “5”, bạn sẽ nhận được (98 * 4,5)= 441.</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">4. Chọn số: nếu kết quả mở ra giống với kết quả bạn đã chọn, bạn sẽ nhận được (98 * 9)= 882.</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">5. Chọn lớn: nếu kết quả hiển thị số "5,6,7,8,9" bạn sẽ nhận được (98 * 2)= 196.</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">6. Chọn nhỏ: nếu kết quả hiển thị số "0,1,2,3,4" bạn sẽ nhận được (98 * 2)= 196.</span></p>'
    }, {
        typeID: 4,
        typeName: "Win Go<br />10Min",
        tabName: "WinGo 10Min",
        intervalM: 10,
        scope: "1000|10000|100000|1000000",
        sort: 1,
        gamePresentation: '<p class="MsoNormal"><font face="Times New Roman"><span style="font-size: 16px;"><span style="font-weight: 700;">LUẬT CHƠI XỔ SỐ WINGO 5 Phút</span></span></font></p><p class="MsoNormal"><font face="Times New Roman"><span style="font-size: 16px;"><span style="font-weight: 700;">*Quy định cá cược xổ số</span></span></font></p><p class="MsoNormal"><font face="Times New Roman"><span style="font-size: 16px;"><span style="font-weight: 700;">( 1 ) Không được phép cược 2 bên (cược đối lập) ví dụ: trong một kỳ xổ không được đặt cược Lớn/Nhỏ,Chẵn/Lẻ...</span></span></font></p><p class="MsoNormal"><font face="Times New Roman"><span style="font-size: 16px;"><span style="font-weight: 700;">( 2 ) Không được phép cược 8 số trở lên trong cùng một kỳ xổ.</span></span></font></p><p class="MsoNormal"><font face="Times New Roman"><span style="font-size: 16px;"><span style="font-weight: 700;">( 3 ) Nếu bị phát hiện có hành vi đặt cược phi pháp hoặc đặt cược đối đầu, sẽ bị hủy bỏ lệnh rút tiền.</span></span></font></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">HƯỚNG DẪN GIẢI THƯỞNG</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">Năm phút mở thưởng một lần , 4 phút 55 giây đặt cược, 5 giây còn lại chờ đợi mở kết quả tạm ngưng đặt cược. Giải thưởng sẽ được mở cả ngày. Tổng số lượt mở thưởng mỗi ngày là 288 lượt.</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">Nếu bạn thực hiện một giao dịch mua là 100, sẽ có khoản khấu trừ là 2, do đó khoản đặt thực tế của bạn là 98.</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">1. Chọn màu xanh lá cây: nếu kết quả hiển thị số "1,3,7,9" bạn sẽ nhận được (98 * 2)= 196.</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">- Nếu kết quả hiển thị số "5", bạn sẽ nhận được (98 * 1.5)= 147.</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">2. Chọn màu đỏ: nếu kết quả hiển thị số "2,4,6,8" bạn sẽ nhận được (98 * 2)= 196; nếu kết quả hiển thị là "0" bạn sẽ nhận được (98 * 1.5)= 147.</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">3. Chọn màu tím: nếu kết quả hiển thị số "0" hoặc “5”, bạn sẽ nhận được (98 * 4,5)= 441.</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">4. Chọn số: nếu kết quả mở ra giống với kết quả bạn đã chọn, bạn sẽ nhận được (98 * 9)= 882.</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">5. Chọn lớn: nếu kết quả hiển thị số "5,6,7,8,9" bạn sẽ nhận được (98 * 2)= 196.</span><br></p><p class="MsoNormal"><span style="font-weight: 700; font-size: 16px; font-family: &quot;Times New Roman&quot;;">6. Chọn nhỏ: nếu kết quả hiển thị số "0,1,2,3,4" bạn sẽ nhận được (98 * 2)= 196.</span></p>'
    }],
    nr = l => xe(Se.GetMyBingo18HistoryBetting, l),
    ar = () => xe(Se.GetBinguoGameConfig),
    or = () => xe(Se.GetBingo18OddsList),
    sr = () => xe(Se.GetGameBingo18Issue),
    lr = () => xe(Se.GetBingo18LastGameResult),
    cr = l => xe(Se.GetBingo18BetAmount, l),
    rr = l => xe(Se.Bingo18Betting, l),
    Za = () => xe(Se.GetBingo18Last50Result),
    ur = () => xe(Se.GetTrendstatistics),
    dr = () => xe(Se.GetLotteryRankList),
    pr = () => xe(Se.GetLotteryResult7Day),
    gr = l => xe(Se.GetUserRankList, {
        uid: l
    }),
    ge = Et({
        currentTabIndex: 0,
        resultSumTrend: [],
        smallAndBigTrend: void 0,
        threeSameTrend: [],
        twoSameTrend: [],
        isTrend: !1,
        trendList: [],
        last50List: [],
        userRank: 0,
        last7Day: []
    }),
    {
        t: bi
    } = zi.global,
    Di = f([{
        title: bi("time"),
        key: "issueEndTime",
        isLockColumn: !0,
        isSlot: !0,
        width: "50px",
        cusTdClass: "column_time"
    }]),
    ai = () => {
        const l = {
                1: {
                    player: bi("xosoTxt60"),
                    Big: {
                        class: "big"
                    },
                    Small: {
                        class: "small"
                    },
                    Drawn: {
                        class: "sum"
                    }
                },
                2: {
                    player: bi("same"),
                    class: "small"
                },
                3: {
                    player: bi("sameNum")
                },
                4: {
                    player: bi("numbersMatch")
                }
            },
            i = U(() => {
                let y = [],
                    v = [];
                for (let $ = 0; $ < ge.last50List.length; $++) v.length < 5 || (y.push(v), v = []), v.push(ge.last50List[$].resultSum), $ === ge.last50List.length - 1 && y.push(v);
                return y
            }),
            o = U(() => {
                let y = ge.last50List.map($ => $.resultSum),
                    v = _(y).slice(0, 10).reverse();
                return v.forEach($ => {
                    if ($.length < 5) {
                        let T = 5 - $.length;
                        for (let C = 0; C < T; C++) $.push("")
                    }
                }), v
            }),
            u = U(() => ge.last50List.map(y => {
                const v = y.result.split(""),
                    $ = {};
                for (let T = 1; T <= 6; T++) $["num" + T] = v.filter(C => C === T.toString()).length;
                return {
                    issueNo: y.issueNo,
                    sum: y.resultSum,
                    ...$
                }
            })),
            m = async () => {
                const y = await rt(pr());
                if (y != null && y.data) {
                    Di.value = [{
                        title: bi("time"),
                        key: "issueEndTime",
                        isLockColumn: !0,
                        isSlot: !0,
                        width: "50px",
                        cusTdClass: "column_time"
                    }];
                    let v = y.data.reverse();
                    [...new Set(y.data.map(h => h.startDate))].slice(0, 7).reverse().forEach((h, k) => {
                        Di.value.push({
                            key: "time_index_" + k,
                            title: h,
                            isSlot: !0
                        })
                    });
                    let T = g(v, "issueEndTime"),
                        C = [];
                    Object.entries(T).forEach(([h, k]) => {
                        let w = {};
                        k.forEach((L, z) => {
                            var x;
                            let I = (x = Di.value.find(R => R.title === L.startDate)) == null ? void 0 : x.key;
                            w[`${I}`] = L
                        }), C.push({
                            issueEndTime: h,
                            ...w
                        })
                    }), ge.last7Day = C.sort((h, k) => {
                        const w = h.issueEndTime.split(":"),
                            L = k.issueEndTime.split(":"),
                            z = parseInt(w[0]),
                            I = parseInt(w[1]),
                            x = parseInt(L[0]),
                            R = parseInt(L[1]);
                        return z === x ? I - R : z - x
                    })
                }
            };

        function g(y, v) {
            const $ = {};
            return y.forEach(T => {
                const C = T[v];
                $[C] || ($[C] = []), $[C].push(T)
            }), $
        }
        const d = async () => {
            const y = await rt(dr());
            y != null && y.data && (ge.trendList = y.data);
            const $ = le().getUserInfo,
                T = await rt(gr($.userId));
            T != null && T.data && (T.data < 100 && (ge.isTrend = !0), ge.userRank = T.data)
        }, c = async () => {
            const y = await rt(Za());
            y != null && y.data && (ge.last50List = y.data)
        }, p = async () => {
            const y = await rt(ur());
            y && (ge.resultSumTrend = y.data.resultSumTrend, ge.smallAndBigTrend = y.data.smallAndBigTrend, ge.threeSameTrend = y.data.threeSameTrend, ge.twoSameTrend = y.data.twoSameTrend)
        }, r = (y, v) => {
            let $ = "",
                T = "";
            return y === 1 ? (Number(v) ? $ = b(Number(v)) : $ = l[1][v].class, T = l[1].player) : y === 2 ? ($ = l[2].class, T = l[2].player) : y === 3 ? (Number(v) < 5 ? $ = "small" : Number(v) === 5 ? $ = "sum" : $ = "big", T = l[3].player) : y === 4 && (v.includes("*") ? $ = "big" : /[123]/.test(v) ? $ = "small" : $ = "big", T = l[4].player), {
                className: $,
                playerName: T
            }
        };

        function _(y) {
            const v = [],
                $ = [];
            let T = "";
            const C = k => k < 10 ? "small" : k > 11 ? "big" : "sum",
                h = (k, w) => {
                    let L = 0;
                    if (k !== w[w.length - 1]) return 0;
                    for (let z = w.length - 1; z >= 0; z--)
                        if (k === w[z]) L += 1;
                        else return L;
                    return L
                };
            for (let k = 0; k < y.length; k++) {
                const w = y[k],
                    L = C(w);
                if (v.length === 0 || L !== T) {
                    v.push([w]), T = L, $.push(T);
                    continue
                }
                if (v[v.length - 1].length < 5) v[v.length - 1].push(w);
                else {
                    let z = h(L, $),
                        I = v[v.length - z].length;
                    I === 5 ? (v.splice(v.length - z, 0, [w]), $.push(L)) : (I > 5, v[v.length - z].unshift(w))
                }
                T = L
            }
            return v
        }
        const b = y => Number(y) < 10 ? "small" : Number(y) > 11 ? "big" : "sum";
        return {
            store: ge,
            last50Result: i,
            last50Record: o,
            last50RecordResult: u,
            columnOptions: Di,
            filterStyle: b,
            filterGameType: r,
            getTrendstatistics: p,
            getLotteryRankList: d,
            getLotteryResult7Day: m,
            getBingo18Last50Result: c
        }
    },
    mr = {
        class: "ar-searchbar__selector"
    },
    br = {
        key: 0,
        class: "noSelect"
    },
    _r = {
        key: 1,
        class: "ar-searchbar__selector-default"
    },
    vr = W({
        __name: "Calendar",
        emits: ["confirm"],
        setup(l, {
            expose: i,
            emit: o
        }) {
            const {
                minDate: u,
                maxDate: m
            } = Ca(), g = f(""), d = f(""), c = f(!1), p = b => `${b.getFullYear()}-${b.getMonth()+1}-${b.getDate()}`, r = async b => {
                c.value = !1;
                const [y, v] = b;
                g.value = p(y), d.value = p(v), o("confirm")
            };

            function _() {
                c.value = !0
            }
            return i({
                startDateValue: g,
                endDateValue: d
            }), (b, y) => {
                const v = V("van-icon"),
                    $ = V("van-calendar");
                return n(), a(G, null, [t("div", mr, [t("div", {
                    onClick: _
                }, [g.value === "" || d.value === "" ? (n(), a("span", br, e(b.$t("datePick")), 1)) : (n(), a("span", _r, e(g.value) + "/" + e(d.value), 1)), N(v, {
                    name: "arrow-down"
                })])]), N($, {
                    show: c.value,
                    "onUpdate:show": y[0] || (y[0] = T => c.value = T),
                    type: "range",
                    onConfirm: r,
                    "min-date": s(u),
                    "max-date": s(m),
                    teleport: "body"
                }, null, 8, ["show", "min-date", "max-date"])], 64)
            }
        }
    }),
    hr = l => (wt("data-v-eebcfced"), l = l(), Lt(), l),
    kr = {
        class: "x-4d-head"
    },
    fr = {
        class: "menu"
    },
    yr = ["onClick"],
    $r = {
        class: "lottery"
    },
    Tr = {
        class: "item"
    },
    Cr = hr(() => t("div", {
        class: "box"
    }, [t("div")], -1)),
    wr = [Cr],
    Lr = {
        class: "mask"
    },
    Nr = ["onClick"],
    Ir = {
        class: "img"
    },
    zr = W({
        __name: "lotterylist",
        props: {
            modelValue: {
                type: Boolean,
                default: !1
            },
            timeIndex: {
                default: 0
            },
            timeVal: {
                default: de().format("YYYY-MM-DD")
            },
            lotteryList: {},
            lotteryTab: {},
            timeWeek: {
                type: Function,
                default: () => ""
            }
        },
        emits: ["onLotteryTab", "onTime", "update:modelValue"],
        setup(l, {
            emit: i
        }) {
            const u = Yo(l, "modelValue", i),
                m = (_, b) => {
                    i("onLotteryTab", _, b)
                },
                g = (_, b) => {
                    i("onTime", _, b)
                },
                d = () => {
                    u.value = !0
                },
                c = () => {
                    u.value = !1
                },
                p = () => {
                    u.value ? c() : d()
                },
                r = f(null);
            return Zo(r, _ => {
                u.value = !1
            }), (_, b) => {
                var $;
                const y = V("van-skeleton"),
                    v = zt("lazy");
                return n(), a("div", kr, [t("div", {
                    class: "time",
                    ref_key: "target",
                    ref: r
                }, [t("div", {
                    class: "box",
                    onClick: p
                }, e(_.timeVal.replace(/-/g, "/")) + " " + e(_.timeWeek(_.timeVal)), 1), et(t("div", fr, [t("h3", {
                    onClick: c
                }, e(_.$t("Drawdate")), 1), t("ul", null, [(n(!0), a(G, null, B(_.lotteryTab, (T, C) => (n(), a("li", {
                    class: M([_.timeVal == T.date ? "active" : ""]),
                    key: C,
                    onClick: h => g(T, C)
                }, e(T.date.replace(/-/g, "/")) + " " + e(_.timeWeek(T.date)), 11, yr))), 128))])], 512), [
                    [Vt, s(u)]
                ])], 512), t("div", $r, [N(y, {
                    loading: !(($ = _.lotteryTab[_.timeIndex]) != null && $.games),
                    class: "flex"
                }, {
                    template: D(() => [(n(), a(G, null, B(10, () => t("div", Tr, wr)), 64))]),
                    default: D(() => {
                        var T;
                        return [et(t("div", Lr, null, 512), [
                            [Vt, s(u)]
                        ]), (n(!0), a(G, null, B((T = _.lotteryTab[_.timeIndex]) == null ? void 0 : T.games, (C, h) => (n(), a("div", {
                            class: "item",
                            key: h,
                            onClick: k => m(C, h)
                        }, [t("div", {
                            class: M(["box", [_.lotteryList.includes(C.type) ? "active" : ""]])
                        }, [et(t("img", Ir, null, 512), [
                            [v, C.typeImg]
                        ])], 2)], 8, Nr))), 128))]
                    }),
                    _: 1
                }, 8, ["loading"])])])
            }
        }
    });
const xr = H(zr, [
        ["__scopeId", "data-v-eebcfced"]
    ]),
    Sr = {
        class: "betType"
    },
    Rr = {
        class: "title"
    },
    Gr = {
        class: "betType-list"
    },
    Mr = {
        class: "item action"
    },
    Br = ["onClick"],
    Dr = W({
        __name: "bettype",
        props: {
            betType: {},
            betTypeList: {}
        },
        emits: ["onBetType"],
        setup(l, {
            emit: i
        }) {
            const o = u => {
                i("onBetType", u)
            };
            return (u, m) => {
                const g = V("van-skeleton");
                return n(), a("div", Sr, [t("h4", Rr, e(u.$t("xosoTxt78")), 1), t("ul", Gr, [N(g, {
                    loading: !u.betTypeList,
                    class: "flex"
                }, {
                    template: D(() => [(n(), a(G, null, B(7, () => t("li", Mr)), 64))]),
                    default: D(() => [(n(!0), a(G, null, B(u.betTypeList, (d, c) => (n(), a("li", {
                        class: M([u.betType.includes(d) ? "item action" : "item"]),
                        onClick: p => o(d),
                        key: c
                    }, e(u.$t("d4gameType" + d)), 11, Br))), 128))]),
                    _: 1
                }, 8, ["loading"])])])
            }
        }
    });
const Pr = H(Dr, [
        ["__scopeId", "data-v-df649127"]
    ]),
    Ar = {
        class: "howPay"
    },
    Or = {
        class: "title"
    },
    Wr = {
        class: "howPay-list"
    },
    qr = {
        class: "item"
    },
    Er = {
        key: 0,
        class: "icon"
    },
    Hr = W({
        __name: "betpay",
        props: {
            rollNum: {
                default: 1
            },
            banBetPay: {
                default: 0
            },
            betPayId: {
                default: 1
            },
            duplex: {
                type: Boolean,
                default: !1
            },
            betPayList: {}
        },
        emits: ["onBetpay"],
        setup(l, {
            emit: i
        }) {
            const o = l,
                u = d => d.includes(5) ? d.slice(0, -1) : d,
                m = d => {
                    let c = !1,
                        p = (d === 2 || d === 3) && o.banBetPay === 1 || o.rollNum > 0,
                        r = o.duplex ? (d === 2 || d === 3 || d === 4) && o.banBetPay === 1 : d === 2 && (d === 2 || d === 3) && o.banBetPay === 1;
                    return (p || r) && (c = !0), c
                },
                g = d => {
                    i("onBetpay", d)
                };
            return (d, c) => {
                const p = V("van-icon"),
                    r = V("van-button"),
                    _ = V("van-skeleton");
                return n(), a("div", Ar, [t("h4", Or, e(d.$t("gamePlay")), 1), t("ul", Wr, [N(_, {
                    loading: !u(d.betPayList),
                    class: "flex"
                }, {
                    template: D(() => [(n(), a(G, null, B(4, () => t("li", qr)), 64))]),
                    default: D(() => [(n(!0), a(G, null, B(u(d.betPayList), (b, y) => (n(), Q(r, {
                        plain: "",
                        disabled: m(b),
                        class: M([b == d.betPayId ? "item action" : "item"]),
                        onClick: v => g(b),
                        key: y
                    }, {
                        default: D(() => [E(e(d.$t("d4gamePay" + b)) + " ", 1), b == d.betPayId ? (n(), a("i", Er, [N(p, {
                            name: "success"
                        })])) : S("", !0)]),
                        _: 2
                    }, 1032, ["disabled", "class", "onClick"]))), 128))]),
                    _: 1
                }, 8, ["loading"])])])
            }
        }
    });
const Fr = H(Hr, [
        ["__scopeId", "data-v-60a88d6a"]
    ]),
    Vr = {
        class: "betAmount"
    },
    jr = {
        class: "title"
    },
    Ur = {
        class: "betAmount-list"
    },
    Kr = ["onClick"],
    Xr = W({
        __name: "betamount",
        props: {
            count: {
                default: 10
            },
            list: {}
        },
        emits: ["onAmount"],
        setup(l, {
            emit: i
        }) {
            const o = u => {
                i("onAmount", u)
            };
            return (u, m) => (n(), a("div", Vr, [t("h4", jr, e(u.$t("betAmounts")), 1), t("ul", Ur, [(n(!0), a(G, null, B(u.list, (g, d) => (n(), a("li", {
                class: M([g == u.count ? "item active" : "item"]),
                onClick: c => o(g),
                key: d
            }, e(g), 11, Kr))), 128))])]))
        }
    });
const Jr = H(Xr, [
        ["__scopeId", "data-v-6cea1b38"]
    ]),
    Qr = l => (wt("data-v-018f548a"), l = l(), Lt(), l),
    Yr = {
        class: "select"
    },
    Zr = {
        class: "tab"
    },
    tu = ["onClick"],
    eu = Qr(() => t("span", null, "ALL", -1)),
    iu = {
        class: "numList"
    },
    nu = ["onClick"],
    au = W({
        __name: "duplexbet",
        props: {
            tabList: {},
            allActive: {},
            numList: {}
        },
        emits: ["allAddnum", "addNumber"],
        setup(l, {
            emit: i
        }) {
            const o = m => {
                    i("allAddnum", m)
                },
                u = (m, g) => {
                    i("addNumber", m, g)
                };
            return (m, g) => (n(), a("div", Yr, [t("ul", Zr, [(n(!0), a(G, null, B(m.tabList, (d, c) => (n(), a("li", {
                onClick: p => o(d.type),
                class: M(m.allActive.includes(d.type) ? "active" : ""),
                key: c
            }, [E(e(d.name) + " ", 1), eu], 10, tu))), 128))]), t("div", iu, [(n(!0), a(G, null, B(m.numList, (d, c) => (n(), a("ul", {
                class: "",
                key: c
            }, [(n(), a(G, null, B(10, (p, r) => t("li", {
                class: M([d != null && d.list.includes(r) ? "action" : ""]),
                key: p,
                onClick: _ => u(c, r)
            }, e(r), 11, nu)), 64))]))), 128))])]))
        }
    });
const ou = H(au, [
        ["__scopeId", "data-v-018f548a"]
    ]),
    su = {
        class: "foot"
    },
    lu = {
        class: "item"
    },
    cu = {
        class: "item"
    },
    ru = W({
        __name: "navfoot",
        props: {
            betQuantity: {
                type: Number,
                default: 0
            },
            totalAmount: {
                type: Number,
                default: 0
            }
        },
        emits: ["onBet"],
        setup(l, {
            emit: i
        }) {
            const o = l,
                u = () => {
                    o.totalAmount > 0 && i("onBet")
                };
            return (m, g) => (n(), a("div", su, [t("div", lu, [t("p", null, e(m.$t("quantity")), 1), t("span", null, e(l.betQuantity), 1)]), t("div", cu, [t("p", null, e(m.$t("betAmounts")), 1), t("span", null, e(s(wa)(l.totalAmount)), 1)]), t("div", {
                class: M(["item bet", [l.totalAmount > 0 ? "active" : ""]]),
                onClick: u
            }, e(m.$t("betting")), 3)]))
        }
    });
const uu = H(ru, [
        ["__scopeId", "data-v-72be302f"]
    ]),
    du = {
        class: "x-bet"
    },
    pu = {
        class: "x-bet-sub"
    },
    gu = {
        class: "x-bet-lottery"
    },
    mu = {
        class: "x-bet-title"
    },
    bu = {
        class: "box"
    },
    _u = {
        class: "img"
    },
    vu = {
        class: "x-bet-type"
    },
    hu = {
        class: "x-bet-title"
    },
    ku = {
        class: "box"
    },
    fu = {
        class: "x-bet-multiple"
    },
    yu = {
        class: "tit"
    },
    $u = {
        class: "box"
    },
    Tu = {
        class: "multiple-list"
    },
    Cu = {
        class: "box"
    },
    wu = ["onClick"],
    Lu = {
        class: "x-bet-list"
    },
    Nu = {
        class: "item"
    },
    Iu = {
        class: "lab"
    },
    zu = {
        class: "number"
    },
    xu = {
        class: "item"
    },
    Su = {
        class: "lab"
    },
    Ru = {
        class: "balance"
    },
    Gu = {
        class: "item"
    },
    Mu = {
        class: "lab"
    },
    Bu = {
        class: "amount"
    },
    Du = {
        key: 0,
        class: "x-bet-wallet"
    },
    Pu = {
        class: "tip"
    },
    Au = ["src"],
    Ou = {
        class: "x-bet-agree"
    },
    Wu = {
        class: "agree"
    },
    qu = {
        class: "x-bet-foot"
    },
    Eu = W({
        __name: "betpopup",
        props: {
            betShow: {
                type: Boolean,
                default: !1
            },
            betQuantity: {
                default: 0
            },
            timeIndex: {
                default: 0
            },
            totalAmount: {
                default: 0
            },
            balance: {
                default: 0
            },
            lotteryList: {},
            betType: {},
            countVal: {},
            multipleList: {},
            checked: {
                type: Boolean,
                default: !1
            },
            preSaleRule: {
                type: Boolean,
                default: !1
            },
            lotteryTab: {}
        },
        emits: ["getClear", "onStepper", "changeStep", "onMltiple", "checkboxChange", "onCancel", "update:checked", "update:betShow", "update:countVal", "update:preSaleRule", "onBet"],
        setup(l, {
            emit: i
        }) {
            const o = l,
                u = gt(),
                m = C => {
                    i("getClear", C)
                },
                g = C => {
                    i("onStepper", C)
                },
                d = C => {
                    i("changeStep", C)
                },
                c = C => {
                    i("onMltiple", C)
                },
                p = C => {
                    i("checkboxChange", C)
                },
                r = () => {
                    i("onCancel")
                },
                _ = () => {
                    i("onBet")
                },
                b = C => {
                    const {
                        lotteryTab: h,
                        timeIndex: k
                    } = o;
                    let w = h[k].games.find(L => L.type == C);
                    return w == null ? void 0 : w.typeImg
                },
                {
                    checked: y,
                    betShow: v,
                    countVal: $,
                    preSaleRule: T
                } = ha(o, i);
            return (C, h) => {
                const k = V("van-icon"),
                    w = V("van-field"),
                    L = V("van-checkbox"),
                    z = V("van-popup"),
                    I = zt("lazy");
                return n(), Q(z, {
                    show: s(v),
                    "onUpdate:show": h[7] || (h[7] = x => oe(v) ? v.value = x : null),
                    position: "bottom",
                    "close-on-click-overlay": !1,
                    style: {
                        borderRadius: "15px 15px 0 0"
                    }
                }, {
                    default: D(() => [t("div", du, [t("div", pu, [E(e(C.$t("betting")) + " ", 1), t("div", {
                        class: "clear",
                        onClick: h[0] || (h[0] = x => m(1))
                    }, [N(k, {
                        class: "icon",
                        name: "delete-o"
                    }), E(e(C.$t("Clear")), 1)])]), t("div", gu, [t("h5", mu, e(C.$t("ColorSpecies")), 1), t("ul", bu, [(n(!0), a(G, null, B(C.lotteryList, (x, R) => (n(), a("li", {
                        class: "item",
                        key: R
                    }, [et(t("img", _u, null, 512), [
                        [I, b(x)]
                    ])]))), 128))])]), t("div", vu, [t("h5", hu, e(C.$t("xosoTxt78")), 1), t("ul", ku, [(n(!0), a(G, null, B(C.betType, (x, R) => (n(), a("li", {
                        class: "item",
                        key: R
                    }, e(C.$t("d4gameType" + x)), 1))), 128))])]), $e(C.$slots, "default", {}, void 0, !0), t("div", fu, [t("div", yu, e(C.$t("multiple")), 1), t("div", $u, [t("div", {
                        class: "li minus",
                        onClick: h[1] || (h[1] = x => g(1))
                    }, [N(k, {
                        name: "minus"
                    })]), N(w, {
                        class: "digit",
                        modelValue: s($),
                        "onUpdate:modelValue": h[2] || (h[2] = x => oe($) ? $.value = x : null),
                        type: "digit",
                        maxlength: 5,
                        onInput: d
                    }, null, 8, ["modelValue"]), t("div", {
                        class: "li plus",
                        onClick: h[3] || (h[3] = x => g(2))
                    }, [N(k, {
                        name: "plus"
                    })])])]), t("div", Tu, [t("div", Cu, [(n(!0), a(G, null, B(C.multipleList, (x, R) => (n(), a("div", {
                        key: R,
                        class: M(s($) == x ? "active item" : "item"),
                        onClick: O => c(x)
                    }, " X" + e(x), 11, wu))), 128))])]), t("div", Lu, [t("div", Nu, [t("div", Iu, e(C.$t("quantity")), 1), t("div", zu, e(C.betQuantity) + e(C.$t("note")), 1)]), t("div", xu, [t("div", Su, e(C.$t("walletBalance")), 1), t("div", Ru, e(s(xt)(C.balance)), 1)]), t("div", Gu, [t("div", Mu, e(C.$t("betAmounts")), 1), t("div", Bu, e(s(wa)(C.totalAmount)), 1)])]), C.totalAmount > C.balance ? (n(), a("div", Du, [t("div", Pu, [t("img", {
                        src: s(ut)("home/AllLotteryGames/NewVietnam", "tip")
                    }, null, 8, Au), E(e(C.$t("insufficientWallet")), 1)]), t("div", {
                        class: "txt",
                        onClick: h[4] || (h[4] = x => s(u).push({
                            name: "Recharge"
                        }))
                    }, e(C.$t("torecharge")) + " >>", 1)])) : S("", !0), t("div", Ou, [N(L, {
                        modelValue: s(y),
                        "onUpdate:modelValue": h[5] || (h[5] = x => oe(y) ? y.value = x : null),
                        "checked-color": "#FF7172",
                        onChange: p
                    }, {
                        default: D(() => [t("div", Wu, e(C.$t("agree")), 1)]),
                        _: 1
                    }, 8, ["modelValue"]), t("span", {
                        class: "txt",
                        onClick: h[6] || (h[6] = x => T.value = !0)
                    }, e(C.$t("presaleRules")), 1)])]), t("div", qu, [t("div", {
                        class: "cancel",
                        onClick: r
                    }, e(C.$t("cancel")), 1), t("div", {
                        class: "bet",
                        onClick: _
                    }, e(C.$t("betting")), 1)])]),
                    _: 3
                }, 8, ["show"])
            }
        }
    });
const Hu = H(Eu, [
        ["__scopeId", "data-v-79a24f29"]
    ]),
    Fu = {
        class: "x-bet"
    },
    Vu = {
        key: 0,
        class: "x-bet-box"
    },
    ju = {
        class: "item"
    },
    Uu = {
        class: "pay"
    },
    Ku = {
        class: "txt"
    },
    Xu = {
        class: "item"
    },
    Ju = {
        class: "num"
    },
    Qu = {
        class: "txt"
    },
    Yu = {
        key: 1,
        class: "x-bet-pay"
    },
    Zu = {
        class: "x-bet-title"
    },
    td = {
        class: "name"
    },
    ed = {
        key: 2,
        class: "x-bet-dupleList"
    },
    id = {
        class: "digits"
    },
    nd = {
        class: "sub"
    },
    ad = {
        class: "list"
    },
    od = {
        class: "item"
    },
    sd = W({
        __name: "betcontent",
        props: {
            tabId: {
                default: 0
            },
            betPay: {
                default: 0
            },
            num: {},
            dupleList: {},
            tabList: {}
        },
        setup(l) {
            return (i, o) => (n(), a("div", Fu, [i.tabId === 1 ? (n(), a("div", Vu, [t("div", ju, [t("span", Uu, e(i.$t("d4gamePay" + i.betPay)), 1), t("p", Ku, e(i.$t("gamePlay")), 1)]), t("div", Xu, [t("span", Ju, e(i.num), 1), t("p", Qu, e(i.$t("bettingnumber")), 1)])])) : S("", !0), i.tabId === 2 ? (n(), a("div", Yu, [t("h5", Zu, e(i.$t("gamePlay")), 1), t("div", td, e(i.$t("d4gamePay" + i.betPay)), 1)])) : S("", !0), i.tabId === 2 ? (n(), a("div", ed, [(n(!0), a(G, null, B(i.dupleList, (u, m) => (n(), a("div", {
                class: "box",
                key: m
            }, [t("div", id, [t("div", nd, e(i.tabList[m].name), 1), t("div", ad, [(n(!0), a(G, null, B(u.list, (g, d) => (n(), a("div", {
                class: "num",
                key: d
            }, [t("div", od, e(g), 1)]))), 128))])])]))), 128))])) : S("", !0)]))
        }
    });
const ld = H(sd, [
        ["__scopeId", "data-v-57b6cde4"]
    ]),
    ca = f(!1),
    cn = f(!1),
    ra = f(0),
    Pi = f(),
    ua = f();

function vi() {
    const l = Et({
            timeVal: de().format("YYYY-MM-DD"),
            timeIndex: 0,
            lotteryList: [],
            lotteryTab: [],
            tabId: 1,
            rollNum: 0,
            betQuantity: 0,
            betAmount: 0,
            totalAmount: 0,
            betType: [],
            betTypeList: [],
            betPay: 1,
            betPayList: [],
            dupleList: [{
                list: []
            }, {
                list: []
            }, {
                list: []
            }, {
                list: []
            }],
            allActive: [],
            banbetpay: 0,
            multipleList: [1, 5, 10, 20, 50, 100],
            betAmountList: [10, 50, 100, 500, 1e3, 5e3],
            duplex: !1,
            balance: 0,
            stopTime: null
        }),
        {
            t: i
        } = pt(),
        {
            setLoading: o
        } = Xe(),
        u = f(""),
        m = f(1),
        g = f(!0),
        d = f(!1),
        c = f(!1),
        p = f([{}]),
        r = f(),
        _ = f(),
        b = [{
            name: i("xosoTxt90"),
            type: 0
        }, {
            name: i("xosoTxt89"),
            type: 1
        }, {
            name: i("xosoTxt88"),
            type: 2
        }, {
            name: i("xosoTxt87"),
            type: 3
        }],
        y = U(() => l.timeVal),
        v = U(() => l.timeIndex),
        $ = U(() => l.lotteryList),
        T = U(() => l.lotteryTab),
        C = U(() => l.tabId),
        h = U(() => l.rollNum),
        k = U(() => l.betType),
        w = U(() => l.betTypeList),
        L = U(() => l.betPay),
        z = U(() => l.betPayList),
        I = U(() => l.betAmount),
        x = U(() => l.totalAmount),
        R = U(() => l.betQuantity),
        O = U(() => l.banbetpay),
        P = U(() => l.dupleList),
        K = U(() => l.allActive),
        X = U(() => l.multipleList),
        at = U(() => l.betAmountList),
        ct = U(() => l.duplex),
        ot = U(() => l.balance),
        J = j => {
            const it = [i("Sunday"), i("Monday"), i("Tuesday"), i("Wednesday"), i("Thursday"), i("Friday"), i("Saturday")],
                ft = new Date(j);
            return it[ft.getDay()]
        },
        Z = (j, it) => {
            l.timeIndex = it, l.timeVal = j.date, Nt(1), ca.value = !1
        },
        lt = (j, it) => {
            if (l.lotteryList.includes(j.type)) {
                let ft = l.lotteryList.indexOf(j.type);
                l.lotteryList.splice(ft, 1)
            } else l.lotteryList.push(j.type);
            nt(l.betType.length, l.betAmount, l.betPay)
        },
        Rt = j => {
            l.tabId = j, Nt(0)
        },
        Nt = j => {
            u.value = "", l.betPay = 1, l.rollNum = 0, l.betType.length = 0, l.betAmount = l.betAmountList[0], l.dupleList.forEach(it => it.list = []), l.allActive.length = 0, m.value = 1, _t(), c.value = !1, j == 1 && (l.lotteryList.length = 0)
        },
        _t = () => {
            l.totalAmount = 0, l.betQuantity = 0, l.banbetpay = 0
        },
        Ht = () => {
            if (l.rollNum >= 2 || u.value.length >= 4) return qt(i("EnterTip"));
            l.betPay = 5, u.value += "R", l.rollNum = St(u.value.split("")), nt(l.betType.length, l.betAmount, l.betPay)
        },
        Kt = j => {
            u.value = j.target.value, u.value == "" && (l.betPay = 1), u.value.length !== 4 ? _t() : It(j.target.value) ? (nt(l.betType.length, l.betAmount, l.betPay), l.banbetpay = Tt(u.value), l.banbetpay === 1 && (l.betPay = 1)) : (u.value = "", l.betPay = 1, qt(i("FormatTip1"))), l.rollNum = St(u.value.split(""))
        },
        $t = j => {
            if (j.target.value == "" || j.target.value.length !== 4) return;
            It(j.target.value) || (u.value = "", l.betPay = 1, qt(i("FormatTip1")))
        },
        It = j => /^[0-9]{4}|\R[0-9]{3}|[0-9]{1}\R[0-9]{2}|[0-9]{2}\R[0-9]{1}|\R[0-9]{2}\R|[0-9]{2}\R{2}|\R{2}[0-9]{2}|[0-9]{3}\R|[0-9]\R{2}[0-9]|[0-9]\R[0-9]\R|\R[0-9]\R[0-9]$/.test(j),
        St = j => {
            let it = j.indexOf("R"),
                ft = 0;
            for (; it !== -1;) ft++, it = j.indexOf("R", it + 1);
            return ft
        },
        Ct = j => {
            const {
                betType: it,
                betAmount: ft,
                betPay: Gt
            } = l;
            if (it.includes(j)) {
                let Wt = it.indexOf(j);
                it.splice(Wt, 1)
            } else it.push(j);
            nt(it.length, ft, Gt)
        },
        dt = j => {
            l.betPay = j, nt(l.betType.length, l.betAmount, j)
        },
        tt = j => {
            l.betAmount = j, nt(l.betType.length, j, l.betPay)
        },
        nt = (j, it, ft) => {
            let {
                tabId: Gt,
                dupleList: Wt,
                lotteryList: Pt
            } = l;
            if (Gt === 1) {
                if (u.value.length !== 4) return !1;
                A(j, it, u.value, ft)
            } else if (Re(Wt)) l.betQuantity = kt(Wt) * Pt.length * l.betType.length, l.totalAmount = l.betQuantity * it * Pt.length * m.value;
            else {
                const ee = Wt.map(Ft => Ft.list[0]).join("");
                if (ee.length !== 4) return;
                l.banbetpay = Tt(ee), A(j, it, ee, ft)
            }
        },
        A = (j, it, ft, Gt) => {
            let {
                rollNum: Wt,
                lotteryList: Pt
            } = l, ee = j * it * Pt.length * m.value, Ft = j * Pt.length, Yt = 0, pe = 0;
            if (Gt === 1 || Gt === 2) Yt = ee, pe = Ft;
            else if (Gt === 3) {
                const Ee = Tt(ft);
                Yt = ee * Ee, pe = Ft * Ee
            } else if (Gt === 4) {
                const Ee = st(ft);
                Yt = ee * (Ee ? 1 : 2), pe = Ft * (Ee ? 1 : 2)
            } else Gt === 5 && (Yt = ee * (Wt > 0 ? Wt == 1 ? 10 : 10 * 10 : 0), pe = Ft * (Wt > 0 ? Wt == 1 ? 10 : 10 * 10 : 0));
            l.totalAmount = Yt, l.betQuantity = pe
        },
        st = j => j === j.split("").reverse().join("");

    function Tt(j) {
        function it(Ft) {
            return Ft <= 1 ? 1 : Ft * it(Ft - 1)
        }
        let ft = j.split("").map(Number),
            Gt = [...new Set(ft)],
            Wt = it(ft.length),
            Pt = 1;
        for (const Ft of Gt) {
            const Yt = ft.filter(pe => pe === Ft).length;
            Pt *= it(Yt)
        }
        return Wt / Pt
    }
    const At = j => {
            const {
                dupleList: it,
                allActive: ft,
                betType: Gt,
                betAmount: Wt
            } = l;
            if (it[j].list = [], ft.includes(j)) {
                let Pt = ft.indexOf(j);
                ft.splice(Pt, 1)
            } else {
                ft.push(j);
                for (let Pt = 0; Pt < 10; Pt++) it[j].list.push(Pt)
            }
            ce(), nt(Gt.length, Wt)
        },
        fe = (j, it) => {
            const {
                dupleList: ft,
                allActive: Gt,
                betType: Wt,
                betAmount: Pt,
                betPay: ee
            } = l, Ft = ft[j].list;
            if (Ft.includes(it)) {
                let Yt = Ft.indexOf(it);
                Ft.splice(Yt, 1)
            } else Ft.push(it);
            if (Ft.length === 10) Gt.push(j);
            else if (Gt.includes(j)) {
                let Yt = Gt.indexOf(j);
                Gt.splice(Yt, 1)
            }
            if (ce(), kt(ft) > 0) {
                if (nt(Wt.length, Pt, ee), kt(ft) === 1) {
                    const Yt = ft.map(pe => pe.list[0]).join("");
                    l.banbetpay = Tt(Yt)
                }
                l.banbetpay === 1 && (l.betPay = 1)
            } else Re(ft) ? l.banbetpay = Re(ft) ? 1 : 0 : _t()
        },
        ce = () => {
            const {
                dupleList: j
            } = l;
            l.duplex = Re(j), l.banbetpay = Re(j) ? 1 : 0, Re(j) && (l.betPay = 1)
        };

    function Re(j) {
        for (let it = 0; it < j.length; it++) {
            const ft = j[it].list;
            if (Array.isArray(ft) && ft.length > 1) return !0
        }
        return !1
    }

    function kt(j) {
        let it = 1;
        return j.forEach((ft, Gt) => {
            it *= ft.list.length
        }), it
    }
    const We = () => {
            c.value = !0
        },
        Be = j => {
            const {
                betType: it,
                betAmount: ft,
                betPay: Gt
            } = l;
            switch (j) {
                case 1:
                    m.value > 1 && m.value--;
                    break;
                case 2:
                    m.value++;
                    break
            }
            nt(it.length, ft, Gt)
        },
        we = j => {
            const {
                betType: it,
                betAmount: ft,
                betPay: Gt
            } = l;
            m.value = j.target.value, nt(it.length, ft, Gt)
        },
        Mt = j => {
            const {
                betType: it,
                betAmount: ft,
                betPay: Gt
            } = l;
            m.value = j, nt(it.length, ft, Gt)
        },
        oi = j => {
            g.value = j
        },
        Le = () => {
            const {
                lotteryList: j,
                lotteryTab: it,
                timeIndex: ft,
                tabId: Gt,
                betPay: Wt,
                betType: Pt,
                betQuantity: ee,
                betAmount: Ft,
                dupleList: Yt,
                totalAmount: pe,
                balance: Ee
            } = l;
            if (pe > Ee) return qt(i("wfDesc3"));
            if (ee / j.length > 7e3) return qt(i("d4BetTip", [7e3]));
            if (!g.value) return qt(i("agreePresaleRules"));
            let ye = {};
            ye.type = j, ye.gameType = Wt;
            let je = "";
            Gt === 1 ? je = u.value : je = Yt.map(He => He.list.sort((Pe, ri) => Pe - ri).join(",")).join("|"), ye.betContent = je, ye.betType = Pt, ye.betMethod = Gt, ye.betNumber = ee, ye.multiple = Number(m.value), ye.amount = Ft, ye.issueNumber = j.map(He => {
                const Pe = it[ft].games.find(ri => ri.type === He);
                return Pe == null ? void 0 : Pe.issueNumber
            }), c.value = !1, wi(ye), si()
        },
        si = () => {
            setTimeout(() => {
                cn.value = !1
            }, 1500)
        },
        Ne = async () => {
            const j = await rt(hn());
            j != null && j.data && (l.balance = (j == null ? void 0 : j.data.amount) || 0)
        }, Yi = async () => {
            const j = await rt(vs());
            j != null && j.data && (l.multipleList = (j == null ? void 0 : j.data.betMultiplier) || [], l.betAmountList = (j == null ? void 0 : j.data.betAmount) || [], l.betTypeList = (j == null ? void 0 : j.data.betType) || [], l.betPayList = (j == null ? void 0 : j.data.gameType) || [], l.betAmount = (j == null ? void 0 : j.data.betAmount[0]) || 0)
        }, te = async () => {
            o(!0);
            const j = await rt(hs());
            j != null && j.data && (l.timeVal = j.data[l.timeIndex].date, l.lotteryTab = (j == null ? void 0 : j.data) || [], Mi(j.serviceNowTime)), o(!1)
        }, Mi = j => {
            const {
                lotteryTab: it,
                timeIndex: ft
            } = l, Wt = it[ft].games.map(Yt => Yt.stopTime).map(Yt => new Date(Yt)), Pt = new Date(Math.min(...Wt)), ee = de(Pt).format("YYYY-MM-DD HH:mm:ss"), Ft = de(ee).diff(de(j));
            Qt(Ft / 1e3)
        }, Qt = j => {
            l.stopTime = setInterval(() => {
                j > 0 ? j-- : (Nt(1), clearInterval(l.stopTime), te())
            }, 1e3)
        }, wi = async j => {
            const it = await rt(ks(j));
            (it == null ? void 0 : it.code) === 0 ? (cn.value = !0, Ne(), ra.value === 1 && De({
                pageSize: 10,
                pageNo: 1,
                type: 0,
                date: de(new Date).format("YYYY-MM-DD") + " 00:00:00"
            }), si()) : te(), Nt(1)
        }, qe = async () => {
            o(!0), p.value.length = 0;
            const j = await rt(fs());
            j != null && j.data && (j == null || j.data.forEach(it => {
                let ft = [],
                    Gt = [],
                    Wt = [];
                it.items.forEach(Pt => {
                    Pt.playId.split("_").length == 1 ? Wt.push({
                        ...Pt,
                        code: Pt.playId
                    }) : (Pt.playId.split("_")[0] == "1" && ft.push({
                        ...Pt,
                        code: Pt.playId.split("_")[1]
                    }), Pt.playId.split("_")[0] == "2" && Gt.push({
                        ...Pt,
                        code: Pt.playId.split("_")[1]
                    }))
                }), p.value.push({
                    playTypeId: it.playTypeId,
                    playTypeTitle: it.playTypeTitle,
                    lists: [{
                        type: 1,
                        list: ft
                    }, {
                        type: 2,
                        list: Gt
                    }, {
                        type: 3,
                        list: Wt
                    }]
                })
            })), o(!1)
        }, li = async () => {
            if (Pi.value) return;
            o(!0);
            const j = await rt(ys());
            j != null && j.data && (Pi.value = j.data.map(it => (it.typeName = i(`d4LType${it.typeId}`), it)), Pi.value.unshift({
                typeId: 0,
                typeName: i("all")
            })), o(!1)
        }, De = async j => {
            o(!0);
            const it = await rt($s(j));
            it != null && it.data && (ua.value = (it == null ? void 0 : it.data) || {}), o(!1)
        }, ci = async () => {
            o(!0);
            const j = await rt(Ts());
            j != null && j.data && (r.value = (j == null ? void 0 : j.data) || []), o(!1)
        }, Ve = async j => {
            o(!0);
            const it = await rt(Cs(j));
            it && (_.value = (it == null ? void 0 : it.data) || {}), o(!1)
        }, Ye = async j => {
            const it = await rt(ws(j));
            return new Promise(async (ft, Gt) => {
                it ? ft(it) : Gt(it)
            })
        };
    return Ke(() => {
        clearInterval(l.stopTime)
    }), {
        tabList: b,
        getTimeWeek: J,
        onTime: Z,
        lotterTab: lt,
        onTab: Rt,
        getClear: Nt,
        onRoll: Ht,
        getInput: Kt,
        getBlur: $t,
        onBetType: Ct,
        onBetpay: dt,
        onAmount: tt,
        onClickBet: We,
        addNumber: fe,
        allAddnum: At,
        onStepper: Be,
        changeStep: we,
        onMltiple: Mt,
        checkboxChange: oi,
        onBet: Le,
        getWinsUserAmount: Ne,
        getGameConfig: Yi,
        getGameIssue: te,
        getOddsList: qe,
        getTypeList: li,
        getMy4DHistory: De,
        get4DResult: ci,
        gameResultByType: Ve,
        gameCancelOrder: Ye,
        gameListIndex: ra,
        timeVal: y,
        lotteryTab: T,
        timeIndex: v,
        lotteryList: $,
        timeShow: ca,
        betShow: c,
        tabId: C,
        rollNum: h,
        banbetpay: O,
        num: u,
        betType: k,
        betTypeList: w,
        betPay: L,
        betPayList: z,
        count: I,
        totalAmount: x,
        betQuantity: R,
        allActive: K,
        dupleList: P,
        countVal: m,
        checked: g,
        preSaleRule: d,
        multipleList: X,
        betAmountList: at,
        duplex: ct,
        balance: ot,
        promptShow: cn,
        oddsList: p,
        typeList: Pi,
        myHistory: ua,
        newGameResult: r,
        gameResultByTypeO: _
    }
}
const cd = {
        key: 0,
        class: "resultBox"
    },
    rd = {
        class: "r123"
    },
    ud = {
        class: "r"
    },
    dd = {
        class: "num"
    },
    pd = {
        class: "r"
    },
    gd = {
        class: "num"
    },
    md = {
        class: "r"
    },
    bd = {
        class: "num"
    },
    _d = {
        class: "title"
    },
    vd = {
        class: "rOther"
    },
    hd = {
        class: "title"
    },
    kd = {
        class: "rOther"
    },
    fd = W({
        __name: "showResult",
        props: {
            data: {}
        },
        setup(l) {
            return (i, o) => {
                var u, m, g, d, c;
                return i.data ? (n(), a("div", cd, [t("div", rd, [t("div", ud, [t("div", dd, [(n(!0), a(G, null, B((u = i.data) == null ? void 0 : u.firstPrize.split(""), (p, r) => (n(), a("span", {
                    key: r
                }, e(p), 1))), 128))]), t("p", null, e(i.$t("d4gameType3")), 1)]), t("div", pd, [t("div", gd, [(n(!0), a(G, null, B((m = i.data) == null ? void 0 : m.secondPrize.split(""), (p, r) => (n(), a("span", {
                    key: r
                }, e(p), 1))), 128))]), t("p", null, e(i.$t("d4gameType4")), 1)]), t("div", md, [t("div", bd, [(n(!0), a(G, null, B((g = i.data) == null ? void 0 : g.thirdPrize.split(""), (p, r) => (n(), a("span", {
                    key: r
                }, e(p), 1))), 128))]), t("p", null, e(i.$t("d4gameType5")), 1)])]), t("div", _d, e(i.$t("d4gameType6")), 1), t("div", vd, [(n(!0), a(G, null, B((d = i.data) == null ? void 0 : d.specialPrize.split(","), (p, r) => (n(), a("span", {
                    key: r
                }, e(p), 1))), 128))]), t("div", hd, e(i.$t("d4gameType7")), 1), t("div", kd, [(n(!0), a(G, null, B((c = i.data) == null ? void 0 : c.consolationPrize.split(","), (p, r) => (n(), a("span", {
                    key: r
                }, e(p), 1))), 128))])])) : S("", !0)
            }
        }
    });
const Ln = H(fd, [
        ["__scopeId", "data-v-e89da5ba"]
    ]),
    Oe = l => (wt("data-v-c26e419c"), l = l(), Lt(), l),
    yd = {
        key: 0,
        class: "gameBox"
    },
    $d = {
        class: "items"
    },
    Td = ["onClick"],
    Cd = {
        class: "left"
    },
    wd = {
        class: "time"
    },
    Ld = {
        class: "right"
    },
    Nd = {
        key: 0,
        class: "info"
    },
    Id = {
        class: "order"
    },
    zd = ["onClick"],
    xd = {
        class: "copy"
    },
    Sd = Oe(() => t("div", {
        class: "line"
    }, null, -1)),
    Rd = ["onClick"],
    Gd = {
        class: "copy"
    },
    Md = Oe(() => t("div", {
        class: "line"
    }, null, -1)),
    Bd = {
        class: "li"
    },
    Dd = Oe(() => t("div", {
        class: "line"
    }, null, -1)),
    Pd = {
        class: "li"
    },
    Ad = Oe(() => t("div", {
        class: "line"
    }, null, -1)),
    Od = {
        class: "li"
    },
    Wd = Oe(() => t("div", {
        class: "line"
    }, null, -1)),
    qd = {
        class: "li"
    },
    Ed = Oe(() => t("div", {
        class: "line"
    }, null, -1)),
    Hd = {
        class: "li"
    },
    Fd = Oe(() => t("div", {
        class: "line"
    }, null, -1)),
    Vd = {
        class: "li"
    },
    jd = {
        class: "type"
    },
    Ud = Oe(() => t("div", {
        class: "line1"
    }, [t("p")], -1)),
    Kd = {
        class: "order"
    },
    Xd = {
        class: "li"
    },
    Jd = {
        class: "numTit"
    },
    Qd = {
        class: "num type"
    },
    Yd = {
        class: "li"
    },
    Zd = {
        class: "numTit"
    },
    tp = {
        class: "num select"
    },
    ep = {
        class: "n"
    },
    ip = {
        class: "li"
    },
    np = Oe(() => t("div", {
        class: "line"
    }, null, -1)),
    ap = {
        class: "li"
    },
    op = {
        key: 1
    },
    sp = Oe(() => t("div", {
        class: "line"
    }, null, -1)),
    lp = {
        class: "li"
    },
    cp = {
        class: "reTitle"
    },
    rp = ["onClick"],
    up = {
        class: "foot"
    },
    dp = {
        class: "page"
    },
    pp = W({
        __name: "showGame",
        props: {
            pageQuery: {}
        },
        emits: ["update:pageQuery"],
        setup(l, {
            emit: i
        }) {
            const o = l,
                {
                    pageQuery: u
                } = ha(o, i),
                {
                    gameCancelOrder: m,
                    myHistory: g,
                    tabList: d,
                    getMy4DHistory: c
                } = vi(),
                {
                    t: p
                } = pt(),
                r = f(!1),
                _ = f(""),
                b = f(-1);

            function y(k) {
                switch (k) {
                    case 1:
                        return p("bettingResultState1");
                    case 2:
                        return p("bettingResultState3");
                    case 3:
                        return p("hasWon");
                    case 4:
                        return p("xosoTxt74");
                    case 5:
                        return p("xosoTxt75");
                    case 6:
                        return p("xosoTxt76");
                    default:
                        return k
                }
            }
            const v = () => {
                    u.value.pageNo--, b.value = -1, c(u.value)
                },
                $ = () => {
                    u.value.pageNo++, b.value = -1, c(u.value)
                },
                T = k => {
                    b.value === k ? b.value = -1 : b.value = k
                };

            function C(k) {
                r.value = !0, _.value = k
            }

            function h() {
                r.value = !1, m({
                    orderNumber: _.value
                }).then(k => {
                    k && (bn(p("xosoTxt96")), c(u.value))
                }).catch(k => {})
            }
            return (k, w) => {
                var z, I, x;
                const L = V("van-icon");
                return n(), a(G, null, [((z = s(g)) == null ? void 0 : z.list.length) > 0 ? (n(), a("div", yd, [t("div", $d, [(n(!0), a(G, null, B(s(g).list, (R, O) => (n(), a("div", {
                    class: M(["itemBox", {
                        active: b.value === O
                    }])
                }, [t("div", {
                    class: "item",
                    onClick: P => T(O)
                }, [t("div", Cd, [t("div", {
                    class: M(["name", {
                        bold: b.value === O
                    }])
                }, e(k.$t(`d4LType${R.type}`)), 3), t("div", wd, e(R.createTime), 1)]), t("div", Ld, [t("div", {
                    class: M(["state", `state${R.state}`])
                }, e(y(R.state)), 3), [2, 3].includes(R.state) ? (n(), a("div", {
                    key: 0,
                    class: M(["amount", R.state == 3 ? "green" : "red"])
                }, e(R.profitAmount), 3)) : S("", !0)])], 8, Td), b.value === O ? (n(), a("div", Nd, [t("div", Id, [t("div", {
                    class: "li",
                    onClick: P => s(Ue)(R.orderNumber)
                }, [t("span", null, e(k.$t("orderNo")), 1), t("h6", xd, e(R.orderNumber), 1)], 8, zd), Sd, t("div", {
                    class: "li",
                    onClick: P => s(Ue)(R.issueNumber)
                }, [t("span", null, e(k.$t("betNumber")), 1), t("h6", Gd, e(R.issueNumber), 1)], 8, Rd), Md, t("div", Bd, [t("span", null, e(k.$t("ColorSpecies")), 1), t("h6", null, e(k.$t(`d4LType${R.type}`)), 1)]), Dd, t("div", Pd, [t("span", null, e(k.$t("gamePlay")), 1), t("h6", null, e(k.$t(`d4gamePay${R.gameType}`)), 1)]), Ad, t("div", Od, [t("span", null, e(k.$t("betAmounts")), 1), t("h6", null, e(s(xt)(R.amount)), 1)]), Wd, t("div", qd, [t("span", null, e(k.$t("xosoTxt79")), 1), t("h6", null, e(R.betNumber) + " " + e(k.$t("note")), 1)]), Ed, t("div", Hd, [t("span", null, e(k.$t("multiple")), 1), t("h6", null, e(R.multiple), 1)]), Fd, t("div", Vd, [t("span", null, e(k.$t("xosoTxt78")), 1)]), t("div", jd, [(n(!0), a(G, null, B(R.betType.split(","), P => (n(), a("span", null, e(k.$t(`d4gameType${P}`)), 1))), 256))]), Ud]), t("div", Kd, [R.betMethod == 1 ? (n(), a(G, {
                    key: 0
                }, [t("div", Xd, [t("span", Jd, e(k.$t("bettingnumber")) + " (" + e(k.$t("EnterBet")) + ") ", 1)]), t("div", Qd, [t("span", null, e(R.betContent), 1)])], 64)) : S("", !0), R.betMethod == 2 ? (n(), a(G, {
                    key: 1
                }, [t("div", Yd, [t("span", Zd, e(k.$t("bettingnumber")) + " (" + e(k.$t("SelectBet")) + ")", 1)]), t("div", tp, [(n(!0), a(G, null, B(R.betContent.split("|"), (P, K) => (n(), a("div", {
                    key: K
                }, [t("h6", null, e(s(d)[K].name), 1), t("div", ep, [(n(!0), a(G, null, B(P.split(","), (X, at) => (n(), a("span", {
                    key: at
                }, e(X), 1))), 128))])]))), 128))])], 64)) : S("", !0), t("div", ip, [t("span", null, e(k.$t("statusMay")), 1), t("h6", {
                    class: M(["stateInfo", `state${R.state}`])
                }, e(y(R.state)), 3)]), np, t("div", ap, [t("span", null, e(k.$t("winOrLose")), 1), [2, 3].includes(R.state) ? (n(), a("h6", {
                    key: 0,
                    class: M(["amountInfo", R.state == 3 ? "green" : "red"])
                }, e(R.profitAmount), 3)) : (n(), a("h6", op, "--"))]), sp, t("div", lp, [t("span", null, e(k.$t("createTime")), 1), t("h6", null, e(R.createTime), 1)])]), [2, 3].includes(R.state) ? (n(), a(G, {
                    key: 0
                }, [t("div", cp, e(k.$t("betResult")), 1), N(Ln, {
                    data: R
                }, null, 8, ["data"])], 64)) : S("", !0), R.state == 1 ? (n(), a("div", {
                    key: 1,
                    class: "btn",
                    onClick: P => C(R.orderNumber)
                }, e(k.$t("xosoTxt82")), 9, rp)) : S("", !0)])) : S("", !0)], 2))), 256))]), t("div", up, [t("div", {
                    class: M(["previous", {
                        disabled: s(g).pageNo <= 1
                    }]),
                    onClick: v
                }, [N(L, {
                    name: "arrow-left",
                    size: "20"
                })], 2), t("div", dp, e(s(g).pageNo) + "/" + e((I = s(g)) == null ? void 0 : I.totalPage), 1), t("div", {
                    class: M(["next", {
                        disabled: s(g).pageNo >= ((x = s(g)) == null ? void 0 : x.totalPage)
                    }]),
                    onClick: $
                }, [N(L, {
                    name: "arrow",
                    size: "20"
                })], 2)])])) : (n(), Q(ve, {
                    key: 1
                })), N(Me, {
                    show: r.value,
                    "onUpdate:show": w[0] || (w[0] = R => r.value = R),
                    title: k.$t("xosoTxt99"),
                    onConfirm: w[1] || (w[1] = R => h())
                }, null, 8, ["show", "title"])], 64)
            }
        }
    });
const to = H(pp, [
        ["__scopeId", "data-v-c26e419c"]
    ]),
    gp = {
        class: "gamelist"
    },
    mp = {
        class: "tab"
    },
    bp = {
        class: "con"
    },
    _p = {
        class: "head"
    },
    vp = ["src"],
    hp = W({
        __name: "gameList",
        setup(l) {
            const i = gt(),
                {
                    gameListIndex: o,
                    newGameResult: u,
                    get4DResult: m,
                    getMy4DHistory: g
                } = vi();

            function d(_) {
                o.value = _, r()
            }

            function c() {
                o.value == 0 ? i.push({
                    name: "AllLotteryGames-4DLotteryResults"
                }) : o.value == 1 && i.push({
                    name: "AllLotteryGames-4DmyGame"
                })
            }
            const p = Et({
                type: 0,
                date: de(new Date).format("YYYY-MM-DD 00:00:00"),
                pageSize: 10,
                pageNo: 1
            });

            function r() {
                o.value == 0 ? m() : g(p)
            }
            return ht(() => {
                r()
            }), (_, b) => {
                var y;
                return n(), a("div", gp, [t("div", mp, [t("div", {
                    class: M({
                        active: s(o) == 0
                    }),
                    onClick: b[0] || (b[0] = v => d(0))
                }, e(_.$t("d4Tip1")), 3), t("div", {
                    class: M({
                        active: s(o) == 1
                    }),
                    onClick: b[1] || (b[1] = v => d(1))
                }, e(_.$t("myGame")), 3)]), t("div", bp, [t("div", {
                    class: "more",
                    onClick: c
                }, e(_.$t("more")), 1), s(o) == 0 ? (n(), a(G, {
                    key: 0
                }, [(n(!0), a(G, null, B(s(u), v => (n(), a("div", {
                    class: "items",
                    key: v.issueNumber
                }, [t("div", _p, [t("img", {
                    src: v.typeImg,
                    alt: ""
                }, null, 8, vp), t("h1", null, e(_.$t(`d4LType${v.type}`)), 1), t("p", null, e(v.openDate) + " " + e(_.$t(`${s(de)(v.openDate).format("dddd")}`)), 1)]), N(Ln, {
                    data: v
                }, null, 8, ["data"])]))), 128)), ((y = s(u)) == null ? void 0 : y.length) == 0 ? (n(), Q(ve, {
                    key: 0
                })) : S("", !0)], 64)) : S("", !0), s(o) == 1 ? (n(), Q(to, {
                    key: 1,
                    pageQuery: p,
                    "onUpdate:pageQuery": b[2] || (b[2] = v => p = v)
                }, null, 8, ["pageQuery"])) : S("", !0)])])
            }
        }
    });
const kp = H(hp, [
        ["__scopeId", "data-v-d986c7ab"]
    ]),
    fp = {
        class: "x-4d"
    },
    yp = {
        class: "x-4d-more"
    },
    $p = ["src"],
    Tp = ["src"],
    Cp = {
        class: "x-4d-body"
    },
    wp = {
        class: "x-4d-tab"
    },
    Lp = {
        class: "x-4d-content"
    },
    Np = {
        key: 0,
        class: "enter"
    },
    Ip = ["placeholder"],
    zp = ["placeholder"],
    xp = {
        class: "box"
    },
    Sp = ["src"],
    Rp = {
        class: "PreSale"
    },
    Gp = {
        class: "head"
    },
    Mp = {
        class: "body"
    },
    Bp = {
        class: "foot"
    },
    Dp = W({
        __name: "index",
        setup(l) {
            const {
                t: i
            } = pt(), o = gt(), {
                getTimeWeek: u,
                onTime: m,
                lotterTab: g,
                onTab: d,
                getClear: c,
                onRoll: p,
                getInput: r,
                getBlur: _,
                onBetType: b,
                onBetpay: y,
                onAmount: v,
                onClickBet: $,
                addNumber: T,
                allAddnum: C,
                onStepper: h,
                changeStep: k,
                onMltiple: w,
                checkboxChange: L,
                onBet: z,
                getWinsUserAmount: I,
                getGameConfig: x,
                getGameIssue: R,
                tabList: O,
                timeVal: P,
                lotteryTab: K,
                timeIndex: X,
                lotteryList: at,
                timeShow: ct,
                betShow: ot,
                tabId: J,
                num: Z,
                rollNum: lt,
                banbetpay: Rt,
                betType: Nt,
                betTypeList: _t,
                betPay: Ht,
                betPayList: Kt,
                count: $t,
                totalAmount: It,
                betQuantity: St,
                dupleList: Ct,
                allActive: dt,
                countVal: tt,
                checked: nt,
                preSaleRule: A,
                multipleList: st,
                betAmountList: Tt,
                duplex: At,
                balance: fe,
                promptShow: ce
            } = vi();
            return ht(() => {
                I(), x(), R()
            }), (Re, kt) => {
                const We = V("NavBar"),
                    Be = V("van-button"),
                    we = V("van-popup");
                return n(), a("div", fp, [N(We, {
                    "left-arrow": "",
                    onClickLeft: kt[2] || (kt[2] = Mt => s(o).go(-1)),
                    "background-color": "linear-gradient(90deg, #F95959 0%, #FF9A8E 100%)",
                    title: "4D"
                }, {
                    right: D(() => [t("div", yp, [t("img", {
                        class: "img",
                        src: s(ut)("home/AllLotteryGames/4D", "howpay"),
                        alt: "",
                        onClick: kt[0] || (kt[0] = () => s(o).push({
                            name: "AllLotteryGames-4DPlay"
                        }))
                    }, null, 8, $p), t("img", {
                        class: "img",
                        src: s(ut)("home/AllLotteryGames/4D", "odds"),
                        alt: "",
                        onClick: kt[1] || (kt[1] = () => s(o).push({
                            name: "AllLotteryGames-4DOdds"
                        }))
                    }, null, 8, Tp)])]),
                    _: 1
                }), N(xr, {
                    onOnTime: s(m),
                    "lottery-tab": s(K),
                    "time-index": s(X),
                    onOnLotteryTab: s(g),
                    "time-week": s(u),
                    "lottery-list": s(at),
                    modelValue: s(ct),
                    "onUpdate:modelValue": kt[3] || (kt[3] = Mt => oe(ct) ? ct.value = Mt : null),
                    "time-val": s(P)
                }, null, 8, ["onOnTime", "lottery-tab", "time-index", "onOnLotteryTab", "time-week", "lottery-list", "modelValue", "time-val"]), t("div", Cp, [t("div", wp, [t("div", {
                    onClick: kt[4] || (kt[4] = Mt => s(d)(1)),
                    class: M([s(J) == 1 ? "active" : ""])
                }, e(s(i)("EnterBet")), 3), t("div", {
                    onClick: kt[5] || (kt[5] = Mt => s(d)(2)),
                    class: M([s(J) == 2 ? "active" : ""])
                }, e(s(i)("SelectBet")), 3)]), t("div", Lp, [s(J) === 1 ? (n(), a("div", Np, [s(Ht) != 5 ? et((n(), a("input", {
                    key: 0,
                    class: M(s(Z).length > 0 ? "input fz24" : "input"),
                    oninput: "value=value.replace(/\\D/g,'')",
                    "onUpdate:modelValue": kt[6] || (kt[6] = Mt => oe(Z) ? Z.value = Mt : null),
                    type: "text",
                    placeholder: s(i)("PenterNumber"),
                    maxlength: "4",
                    onInput: kt[7] || (kt[7] = (...Mt) => s(r) && s(r)(...Mt)),
                    onBlur: kt[8] || (kt[8] = (...Mt) => s(_) && s(_)(...Mt))
                }, null, 42, Ip)), [
                    [gn, s(Z)]
                ]) : et((n(), a("input", {
                    key: 1,
                    class: M(s(Z).length > 0 ? "input fz24" : "input"),
                    oninput: "value=value.replace(/[^A-Z0-9]/g,'').toUpperCase()",
                    "onUpdate:modelValue": kt[9] || (kt[9] = Mt => oe(Z) ? Z.value = Mt : null),
                    type: "text",
                    placeholder: s(i)("PenterNumber"),
                    maxlength: "4",
                    onInput: kt[10] || (kt[10] = (...Mt) => s(r) && s(r)(...Mt)),
                    onBlur: kt[11] || (kt[11] = (...Mt) => s(_) && s(_)(...Mt))
                }, null, 42, zp)), [
                    [gn, s(Z)]
                ]), et(N(Be, {
                    class: "btn",
                    onClick: s(p)
                }, {
                    default: D(() => [E("ROll")]),
                    _: 1
                }, 8, ["onClick"]), [
                    [Vt, s(Kt).includes(5)]
                ])])) : S("", !0), N(Pr, {
                    class: "mb30",
                    "bet-type": s(Nt),
                    "bet-type-list": s(_t),
                    onOnBetType: s(b)
                }, null, 8, ["bet-type", "bet-type-list", "onOnBetType"]), s(J) === 2 ? (n(), Q(ou, {
                    key: 1,
                    "tab-list": s(O),
                    "all-active": s(dt),
                    "num-list": s(Ct),
                    onAddNumber: s(T),
                    onAllAddnum: s(C)
                }, null, 8, ["tab-list", "all-active", "num-list", "onAddNumber", "onAllAddnum"])) : S("", !0), N(Fr, {
                    class: "mb30",
                    "roll-num": s(lt),
                    "ban-bet-pay": s(Rt),
                    "bet-pay-list": s(Kt),
                    "bet-pay-id": s(Ht),
                    duplex: s(At),
                    onOnBetpay: s(y)
                }, null, 8, ["roll-num", "ban-bet-pay", "bet-pay-list", "bet-pay-id", "duplex", "onOnBetpay"]), N(Jr, {
                    count: s($t),
                    list: s(Tt),
                    onOnAmount: s(v)
                }, null, 8, ["count", "list", "onOnAmount"])])]), N(kp), N(uu, {
                    "total-amount": s(It),
                    "bet-quantity": s(St),
                    onOnBet: s($)
                }, null, 8, ["total-amount", "bet-quantity", "onOnBet"]), N(Hu, {
                    betShow: s(ot),
                    "onUpdate:betShow": kt[12] || (kt[12] = Mt => oe(ot) ? ot.value = Mt : null),
                    "bet-quantity": s(St),
                    "lottery-tab": s(K),
                    "time-index": s(X),
                    "total-amount": s(It),
                    balance: s(fe),
                    "lottery-list": s(at),
                    "bet-type": s(Nt),
                    "multiple-list": s(st),
                    "count-val": s(tt),
                    "onUpdate:countVal": kt[13] || (kt[13] = Mt => oe(tt) ? tt.value = Mt : null),
                    checked: s(nt),
                    "onUpdate:checked": kt[14] || (kt[14] = Mt => oe(nt) ? nt.value = Mt : null),
                    "pre-sale-rule": s(A),
                    "onUpdate:preSaleRule": kt[15] || (kt[15] = Mt => oe(A) ? A.value = Mt : null),
                    onCheckboxChange: s(L),
                    onOnCancel: kt[16] || (kt[16] = Mt => ot.value = !1),
                    onGetClear: s(c),
                    onOnStepper: s(h),
                    onOnMltiple: s(w),
                    onChangeStep: s(k),
                    onOnBet: s(z)
                }, {
                    default: D(() => [N(ld, {
                        num: s(Z),
                        "tab-id": s(J),
                        "bet-pay": s(Ht),
                        "duple-list": s(Ct),
                        "tab-list": s(O)
                    }, null, 8, ["num", "tab-id", "bet-pay", "duple-list", "tab-list"])]),
                    _: 1
                }, 8, ["betShow", "bet-quantity", "lottery-tab", "time-index", "total-amount", "balance", "lottery-list", "bet-type", "multiple-list", "count-val", "checked", "pre-sale-rule", "onCheckboxChange", "onGetClear", "onOnStepper", "onOnMltiple", "onChangeStep", "onOnBet"]), N(we, {
                    show: s(ce),
                    "onUpdate:show": kt[17] || (kt[17] = Mt => oe(ce) ? ce.value = Mt : null),
                    position: "center",
                    class: "x-4d-prompt",
                    style: {
                        borderRadius: "10px",
                        width: "8rem",
                        height: "80px"
                    }
                }, {
                    default: D(() => [t("div", xp, [t("img", {
                        src: s(ut)("home/AllLotteryGames/4D", "success")
                    }, null, 8, Sp), E(" " + e(Re.$t("code402")), 1)])]),
                    _: 1
                }, 8, ["show"]), N(we, {
                    show: s(A),
                    "onUpdate:show": kt[19] || (kt[19] = Mt => oe(A) ? A.value = Mt : null),
                    class: "PreSaleRule",
                    "close-on-click-overlay": !1,
                    round: ""
                }, {
                    default: D(() => [t("div", Rp, [t("div", Gp, e(s(i)("presaleRules")), 1), t("div", Mp, e(Re.$t("betPopTXT")), 1), t("div", Bp, [t("div", {
                        class: "btn",
                        onClick: kt[18] || (kt[18] = Mt => A.value = !1)
                    }, e(s(i)("iKonw")), 1)])])]),
                    _: 1
                }, 8, ["show"])])
            }
        }
    });
const Pp = H(Dp, [
        ["__scopeId", "data-v-607c0d0f"]
    ]),
    PD = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: Pp
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    Ap = {
        class: "LR"
    },
    Op = {
        class: "lotterys"
    },
    Wp = ["onClick"],
    qp = {
        alt: ""
    },
    Ep = {
        class: "date"
    },
    Hp = {
        class: "dateBox"
    },
    Fp = {
        class: "result"
    },
    Vp = W({
        __name: "index",
        setup(l) {
            const {
                typeList: i,
                getTypeList: o,
                gameResultByType: u,
                gameResultByTypeO: m
            } = vi();
            o();
            const {
                t: g
            } = pt(), d = gt(), c = f(0), p = U(() => i.value ? i.value.slice(1) : []), {
                minDate: r,
                maxDate: _
            } = Ca(0), b = de(_).startOf("day"), y = f(!1), v = Et({
                type: 0,
                date: b.format("YYYY-MM-DD")
            });
            Ot(() => p, () => {
                p.value.length > 0 && (v.type = p.value[0].typeId, u(v))
            }, {
                deep: !0,
                immediate: !0
            });
            const $ = U(() => de(v.date).format("YYYY-MM-DD") + " " + g(`${de(v.date).format("dddd")}`)),
                T = h => {
                    y.value = !1, v.date = de(h).format("YYYY-MM-DD"), u(v)
                };

            function C(h, k) {
                c.value = k, v.type = h.typeId, u(v)
            }
            return (h, k) => {
                const w = V("NavBar"),
                    L = V("ArSelect"),
                    z = V("van-calendar"),
                    I = zt("lazy");
                return n(), a("div", Ap, [N(w, {
                    "left-arrow": "",
                    onClickLeft: k[0] || (k[0] = () => s(d).back()),
                    title: h.$t("d4Tip2")
                }, null, 8, ["title"]), t("div", Op, [(n(!0), a(G, null, B(p.value, (x, R) => (n(), a("div", {
                    class: M(["lottery", {
                        active: c.value === R
                    }]),
                    onClick: O => C(x, R),
                    key: R
                }, [et(t("img", qp, null, 512), [
                    [I, x.typeImg]
                ])], 10, Wp))), 128))]), t("div", Ep, [t("div", Hp, [N(L, {
                    onClickSelect: k[1] || (k[1] = x => y.value = !0),
                    selectName: $.value
                }, null, 8, ["selectName"])])]), t("div", Fp, [t("h1", null, e(h.$t("betResult")), 1), JSON.stringify(s(m)) !== "{}" ? (n(), Q(Ln, {
                    key: 0,
                    data: s(m)
                }, null, 8, ["data"])) : (n(), Q(ve, {
                    key: 1
                }))]), N(z, {
                    show: y.value,
                    "onUpdate:show": k[2] || (k[2] = x => y.value = x),
                    onCancel: k[3] || (k[3] = () => y.value = !1),
                    onConfirm: T,
                    "min-date": s(r),
                    "max-date": s(_)
                }, null, 8, ["show", "min-date", "max-date"])])
            }
        }
    });
const jp = H(Vp, [
        ["__scopeId", "data-v-c9e6bdf5"]
    ]),
    AD = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: jp
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    hi = l => (wt("data-v-f9374ea3"), l = l(), Lt(), l),
    Up = {
        class: "oddsBox"
    },
    Kp = {
        class: "title"
    },
    Xp = {
        class: "tabHead"
    },
    Jp = {
        class: "tabCon1"
    },
    Qp = {
        class: "item"
    },
    Yp = hi(() => t("div", null, null, -1)),
    Zp = hi(() => t("div", null, null, -1)),
    tg = [Yp, Zp],
    eg = {
        class: "tabHead h2"
    },
    ig = {
        class: "tabCon2"
    },
    ng = {
        class: "tabHead h2"
    },
    ag = {
        key: 0
    },
    og = {
        key: 1
    },
    sg = {
        key: 2
    },
    lg = hi(() => t("br", null, null, -1)),
    cg = hi(() => t("br", null, null, -1)),
    rg = hi(() => t("br", null, null, -1)),
    ug = hi(() => t("br", null, null, -1)),
    dg = {
        class: "tabCon1 c2"
    },
    pg = W({
        __name: "index",
        setup(l) {
            const {
                t: i
            } = pt(), o = gt(), {
                getOddsList: u,
                oddsList: m
            } = vi();
            return ht(() => {
                u()
            }), (g, d) => {
                const c = V("NavBar");
                return n(), a("div", Up, [N(c, {
                    "left-arrow": "",
                    title: s(i)("odds"),
                    onClickLeft: d[0] || (d[0] = () => s(o).back())
                }, null, 8, ["title"]), (n(!0), a(G, null, B(s(m), p => {
                    var r, _, b, y, v;
                    return n(), a("div", {
                        class: "items",
                        key: p.playTypeId
                    }, [t("div", Kp, e(s(i)(`d4gamePay${p.playTypeId}`)), 1), p.playTypeId != 2 ? (n(), a(G, {
                        key: 0
                    }, [t("div", Xp, [t("span", null, e(s(i)("d4gameType1")), 1), t("span", null, e(s(i)("d4gameType2")), 1)]), t("div", Jp, [(n(!0), a(G, null, B((r = p.lists) == null ? void 0 : r.filter($ => [1, 2].includes($.type)), $ => (n(), a("div", {
                        key: $.type
                    }, [(n(!0), a(G, null, B($.list, T => (n(), a("div", {
                        class: "item",
                        key: T.playId
                    }, [t("div", null, e(s(i)(`d4gameType${T.code}`)), 1), t("div", null, e(T.odds > 0 ? T.odds : T.oddsDefault), 1)]))), 128)), $.list.length < 5 ? (n(), a(G, {
                        key: 0
                    }, B(2, T => t("div", Qp, tg)), 64)) : S("", !0)]))), 128))]), t("div", eg, [(n(!0), a(G, null, B((b = (_ = p.lists) == null ? void 0 : _.filter($ => [3].includes($.type))[0]) == null ? void 0 : b.list, $ => (n(), a("span", {
                        key: $.playId
                    }, e(s(i)(`d4gameType${$.playId}`)), 1))), 128))]), t("div", ig, [(n(!0), a(G, null, B((v = (y = p.lists) == null ? void 0 : y.filter($ => [3].includes($.type))[0]) == null ? void 0 : v.list, $ => (n(), a("div", {
                        key: $.playId
                    }, e($.odds > 0 ? $.odds : $.oddsDefault), 1))), 128))])], 64)) : (n(!0), a(G, {
                        key: 1
                    }, B(p.lists, $ => (n(), a(G, null, [t("div", ng, [$.type == 1 ? (n(), a("span", ag, e(s(i)("d4gameType1")), 1)) : S("", !0), $.type == 2 ? (n(), a("span", og, e(s(i)("d4gameType2")), 1)) : S("", !0), $.type == 3 ? (n(), a("span", sg, e(s(i)("d4Tip3")), 1)) : S("", !0), t("span", null, [E(e(s(i)("d4Tip4")), 1), lg, E("24")]), t("span", null, [E(e(s(i)("d4Tip4")), 1), cg, E("12")]), t("span", null, [E(e(s(i)("d4Tip4")), 1), rg, E("6")]), t("span", null, [E(e(s(i)("d4Tip4")), 1), ug, E("4")])]), t("div", dg, [(n(!0), a(G, null, B($.list, T => (n(), a("div", {
                        class: "itemR item",
                        key: T.playId
                    }, [t("div", null, e(s(i)(`d4gameType${T.code}`)), 1), t("div", null, e(T.odds24 > 0 ? T.odds24 : T.oddsDefault24), 1), t("div", null, e(T.odds12 > 0 ? T.odds12 : T.oddsDefault12), 1), t("div", null, e(T.odds6 > 0 ? T.odds6 : T.oddsDefault6), 1), t("div", null, e(T.odds4 > 0 ? T.odds4 : T.oddsDefault4), 1)]))), 128))])], 64))), 256))])
                }), 128))])
            }
        }
    });
const gg = H(pg, [
        ["__scopeId", "data-v-f9374ea3"]
    ]),
    OD = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: gg
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    mg = {
        class: "playBox"
    },
    bg = {
        class: "con"
    },
    _g = {
        class: "tip"
    },
    vg = {
        class: "tip"
    },
    hg = ["innerHTML"],
    kg = {
        class: "txt"
    },
    fg = {
        key: 0,
        class: "num"
    },
    yg = ["innerHTML"],
    $g = W({
        __name: "index",
        setup(l) {
            const {
                t: i
            } = pt(), o = gt(), u = f(0), m = f([{
                title: i("d4gamePay1"),
                tip1: i("Play4DTip2"),
                tip2: i("Play4DTip4"),
                txt: {
                    tip1: "[1234]",
                    tip2: "",
                    tip3: [],
                    tip4: i("Play4DTip1", ["1234"])
                }
            }, {
                title: i("d4gamePay5"),
                tip1: i("Play4DTip5"),
                tip2: i("Play4DTip6"),
                txt: {
                    tip1: "[123R]",
                    tip2: i("Play4DTip10", [10]),
                    tip3: ["1230", "1231", "1232", "1233", "1234", "1235", "1236", "1237", "1238", "1239"],
                    tip4: i("Play4DTip1", ["1234"])
                }
            }, {
                title: i("d4gamePay2"),
                tip1: i("Play4DTip7"),
                tip2: i("Play4DTip8"),
                txt: {
                    tip1: "[1122]",
                    tip2: i("Play4DTip11"),
                    tip3: ["1122", "1212", "1221", "2112", "2121", "2211"],
                    tip4: i("Play4DTip1", ["1212"])
                }
            }, {
                title: i("d4gamePay3"),
                tip1: i("Play4DTip9"),
                tip2: i("Play4DTip8"),
                txt: {
                    tip1: "[1122]",
                    tip2: i("Play4DTip10", [6]),
                    tip3: ["1122", "1212", "1221", "2112", "2121", "2211"],
                    tip4: i("Play4DTip1", ["1212"])
                }
            }, {
                title: i("d4gamePay4"),
                tip1: i("Play4DTip3"),
                tip2: i("Play4DTip4"),
                txt: {
                    tip1: "[1234]",
                    tip2: i("Play4DTip10", [2]),
                    tip3: ["1234", "4321"],
                    tip4: i("Play4DTip1", ["1234"])
                }
            }]);
            return (g, d) => {
                const c = V("NavBar"),
                    p = V("van-icon"),
                    r = V("van-tab"),
                    _ = V("van-tabs");
                return n(), a("div", mg, [N(c, {
                    "left-arrow": "",
                    title: s(i)("lotteryManual"),
                    onClickLeft: d[0] || (d[0] = () => s(o).back())
                }, null, 8, ["title"]), N(_, {
                    active: u.value,
                    "onUpdate:active": d[1] || (d[1] = b => u.value = b),
                    type: "card",
                    "swipe-threshold": 3
                }, {
                    default: D(() => [(n(!0), a(G, null, B(m.value, (b, y) => (n(), Q(r, {
                        title: b.title,
                        key: y
                    }, {
                        default: D(() => [t("div", bg, [t("h1", null, [N(p, {
                            name: "play",
                            class: "icon",
                            size: "20"
                        }), E(e(s(i)("betting")), 1)]), t("div", _g, e(b.tip1), 1), t("h1", null, [N(p, {
                            name: "play",
                            class: "icon",
                            size: "20"
                        }), E(e(s(i)("winningconditions")), 1)]), t("div", vg, [t("span", {
                            innerHTML: b.tip2
                        }, null, 8, hg)]), t("div", kg, [t("div", null, e(s(i)("example")), 1), t("div", null, e(s(i)("betting")) + ":   " + e(b.txt.tip1), 1), t("div", null, e(b.txt.tip2), 1), b.txt.tip3.length > 0 ? (n(), a("div", fg, [(n(!0), a(G, null, B(b.txt.tip3, (v, $) => (n(), a("span", {
                            key: $
                        }, e(v), 1))), 128))])) : S("", !0), t("div", null, [E(e(s(i)("result")) + ":   ", 1), t("span", {
                            innerHTML: b.txt.tip4
                        }, null, 8, yg)])])])]),
                        _: 2
                    }, 1032, ["title"]))), 128))]),
                    _: 1
                }, 8, ["active"])])
            }
        }
    });
const Tg = H($g, [
        ["__scopeId", "data-v-a47a122f"]
    ]),
    WD = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: Tg
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    Cg = {
        class: "MG"
    },
    wg = W({
        __name: "index",
        setup(l) {
            const {
                getTypeList: i,
                typeList: o,
                getMy4DHistory: u
            } = vi();
            i();
            const {
                t: m
            } = pt(), g = gt(), d = f(!1), c = f(m("all")), p = Et({
                type: 0,
                date: "",
                pageSize: 20,
                pageNo: 1
            });
            u(p);
            const r = async ({
                selectedOptions: _
            }) => {
                d.value = !1, p.type = _[0].typeId, p.pageNo = 1, c.value = _[0].typeName, u(p)
            };
            return (_, b) => {
                const y = V("NavBar"),
                    v = V("ArSelect"),
                    $ = V("van-picker"),
                    T = V("van-popup");
                return n(), a("div", Cg, [N(y, {
                    "left-arrow": "",
                    onClickLeft: b[0] || (b[0] = () => s(g).back()),
                    title: _.$t("xosoTxt73")
                }, null, 8, ["title"]), N(v, {
                    onClickSelect: b[1] || (b[1] = C => d.value = !0),
                    selectName: c.value
                }, null, 8, ["selectName"]), N(to, {
                    pageQuery: p,
                    "onUpdate:pageQuery": b[2] || (b[2] = C => p = C)
                }, null, 8, ["pageQuery"]), N(T, {
                    show: d.value,
                    "onUpdate:show": b[4] || (b[4] = C => d.value = C),
                    round: "",
                    position: "bottom"
                }, {
                    default: D(() => [N($, {
                        "columns-field-names": {
                            text: "typeName",
                            value: "typeId"
                        },
                        columns: s(o),
                        onCancel: b[3] || (b[3] = C => d.value = !1),
                        onConfirm: r
                    }, null, 8, ["columns"])]),
                    _: 1
                }, 8, ["show"])])
            }
        }
    });
const Lg = H(wg, [
        ["__scopeId", "data-v-59bf1373"]
    ]),
    qD = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: Lg
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    Ng = {
        class: "Wallet__C"
    },
    Ig = {
        class: "Wallet__C-balance"
    },
    zg = {
        class: "Wallet__C-balance-l2"
    },
    xg = {
        class: "Wallet__C-balance-l1"
    },
    Sg = {
        class: "Wallet__C-balance-l3"
    },
    Rg = W({
        __name: "Wallet",
        setup(l, {
            expose: i
        }) {
            const {
                t: o
            } = pt(), u = f(0), m = async (c = !0) => {
                const p = await rt(hn());
                p && (u.value = (p == null ? void 0 : p.data.amount) || 0, c && Te(o("refreshSuccess")))
            }, g = gt(), d = c => {
                g.push({
                    name: c
                })
            };
            return ht(() => {
                m(!1)
            }), i({
                getWinsUserAmount: m
            }), (c, p) => {
                const r = zt("throttle-click");
                return n(), a("div", Ng, [t("div", Ig, [t("div", zg, [t("div", null, e(c.$t("walletBalance")), 1)]), t("div", xg, [et((n(), a("div", null, [E(e(s(xt)(u.value)), 1)])), [
                    [r, {
                        handler: m,
                        wait: 2e3
                    }]
                ])]), t("div", Sg, [t("div", {
                    onClick: p[0] || (p[0] = _ => d("Recharge"))
                }, e(c.$t("recharge")), 1), t("div", {
                    onClick: p[1] || (p[1] = _ => d("Withdraw"))
                }, e(c.$t("withdraw")), 1)])])])
            }
        }
    });
const Wi = H(Rg, [
        ["__scopeId", "data-v-5b319853"]
    ]),
    Gg = {
        class: "GameList__C"
    },
    Mg = ["onClick"],
    Bg = ["innerHTML"],
    Dg = W({
        __name: "GameList",
        props: {
            gameList: {
                default: {
                    type: Array,
                    default: () => []
                }
            },
            currentGameIndex: {
                default: {
                    type: Number,
                    default: 0
                }
            }
        },
        setup(l) {
            const i = l;
            return (o, u) => (n(), a("div", Gg, [(n(!0), a(G, null, B(i.gameList, (m, g) => (n(), a("div", {
                key: g,
                class: M(["GameList__C-item", {
                    active: o.currentGameIndex == g
                }]),
                onClick: d => o.$emit("changeGame", g)
            }, [t("div", {
                innerHTML: m.typeName
            }, null, 8, Bg)], 10, Mg))), 128))]))
        }
    });
const qi = H(Dg, [
        ["__scopeId", "data-v-5aa99411"]
    ]),
    Pg = {
        class: "TimeLeft__C-PreSale"
    },
    Ag = {
        class: "TimeLeft__C-PreSale-head"
    },
    Og = {
        class: "TimeLeft__C-PreSale-body"
    },
    Wg = ["innerHTML"],
    qg = {
        class: "TimeLeft__C-PreSale-foot"
    },
    Eg = W({
        __name: "rule",
        props: {
            howPlayShow: {
                type: Boolean,
                default: !1
            },
            gamePresentation: {
                type: String,
                default: ""
            }
        },
        emits: ["close"],
        setup(l, {
            emit: i
        }) {
            const o = l,
                u = U({
                    get() {
                        return o.howPlayShow || !1
                    },
                    set(m) {
                        m || i("close")
                    }
                });
            return (m, g) => {
                const d = V("van-popup");
                return n(), Q(d, {
                    show: u.value,
                    "onUpdate:show": g[1] || (g[1] = c => u.value = c),
                    "close-on-click-overlay": !1,
                    round: ""
                }, {
                    default: D(() => [t("div", Pg, [t("div", Ag, e(m.$t("winTrxIndicate")), 1), t("div", Og, [t("div", {
                        innerHTML: l.gamePresentation
                    }, null, 8, Wg)]), t("div", qg, [t("div", {
                        class: "TimeLeft__C-PreSale-foot-btn",
                        onClick: g[0] || (g[0] = c => i("close"))
                    }, e(m.$t("winTrxClose")), 1)])])]),
                    _: 1
                }, 8, ["show"])
            }
        }
    });
const Ei = H(Eg, [
        ["__scopeId", "data-v-79b922e1"]
    ]),
    Hg = l => (wt("data-v-3f9a78f2"), l = l(), Lt(), l),
    Fg = {
        class: "FDTL__C"
    },
    Vg = {
        class: "FDTL__C-l1"
    },
    jg = {
        class: "left"
    },
    Ug = {
        class: "FDTL__C-l2"
    },
    Kg = {
        class: "FDTL__C-time"
    },
    Xg = Hg(() => t("div", {
        notime: ""
    }, ":", -1)),
    Jg = {
        class: "FDTL__C-l3"
    },
    Qg = {
        class: "box"
    },
    Yg = ["num"],
    Zg = _n('<div class="slot-num" data-v-3f9a78f2>1</div><div class="slot-num" data-v-3f9a78f2>2</div><div class="slot-num" data-v-3f9a78f2>0</div><div class="slot-num" data-v-3f9a78f2>1</div><div class="slot-num" data-v-3f9a78f2>2</div><div class="slot-num" data-v-3f9a78f2>3</div><div class="slot-num" data-v-3f9a78f2>4</div><div class="slot-num" data-v-3f9a78f2>5</div><div class="slot-num" data-v-3f9a78f2>6</div><div class="slot-num" data-v-3f9a78f2>7</div><div class="slot-num" data-v-3f9a78f2>8</div><div class="slot-num" data-v-3f9a78f2>9</div><div class="slot-num" data-v-3f9a78f2>0</div><div class="slot-num" data-v-3f9a78f2>1</div><div class="slot-num" data-v-3f9a78f2>2</div><div class="slot-num" data-v-3f9a78f2>3</div><div class="slot-num" data-v-3f9a78f2>4</div><div class="slot-num" data-v-3f9a78f2>5</div><div class="slot-num" data-v-3f9a78f2>6</div><div class="slot-num" data-v-3f9a78f2>7</div><div class="slot-num" data-v-3f9a78f2>8</div><div class="slot-num" data-v-3f9a78f2>9</div><div class="slot-num" data-v-3f9a78f2>0</div><div class="slot-num" data-v-3f9a78f2>1</div><div class="slot-num" data-v-3f9a78f2>2</div><div class="slot-num" data-v-3f9a78f2>3</div><div class="slot-num" data-v-3f9a78f2>4</div><div class="slot-num" data-v-3f9a78f2>5</div><div class="slot-num" data-v-3f9a78f2>6</div><div class="slot-num" data-v-3f9a78f2>7</div><div class="slot-num" data-v-3f9a78f2>8</div><div class="slot-num" data-v-3f9a78f2>9</div>', 32),
    tm = ["num"],
    em = W({
        __name: "TimeLeft",
        props: {
            premium: {},
            currentInfo: {},
            currentGame: {}
        },
        setup(l, {
            expose: i
        }) {
            const o = l,
                u = f(0),
                m = f([{
                    arr: []
                }, {
                    arr: []
                }, {
                    arr: []
                }, {
                    arr: []
                }, {
                    arr: []
                }]);
            Ot(() => o.premium, _ => {
                _ && (m.value = g(_))
            });
            const g = _ => {
                    let b = [];
                    for (let v = 0; v < _.length; v++) {
                        let $ = _[v];
                        var y = [];
                        switch ($) {
                            case 9:
                                y.push($ - 8, $ - 9, $);
                                break;
                            case 0:
                                y.push($ + 8, $ + 9, $);
                                break;
                            default:
                                y.push($ - 2, $ - 1, $)
                        }
                        b.push({
                            arr: y
                        })
                    }
                    return b
                },
                d = () => {
                    u.value = 1, setTimeout(() => {
                        u.value = 0
                    }, 3e3)
                },
                c = f(!1),
                p = Je(),
                r = () => {
                    c.value = !0, p.get5DRule(o.currentGame.typeID)
                };
            return i({
                animationShow: d
            }), (_, b) => (n(), a(G, null, [t("div", Fg, [t("div", Vg, [t("div", jg, [t("div", null, e(_.$t("betIssue")), 1), t("div", {
                class: "FDTL__C-rule",
                onClick: r
            }, e(_.$t("winTrxIndicate")), 1)]), t("div", null, e(_.$t("k3TimeLeftToBuy")), 1)]), t("div", Ug, [t("div", null, e(o.currentInfo.gameNo), 1), t("div", Kg, [t("div", null, e(_.currentInfo.time1), 1), t("div", null, e(_.currentInfo.time2), 1), Xg, t("div", null, e(_.currentInfo.time3), 1), t("div", null, e(_.currentInfo.time4), 1)])]), t("div", Jg, [t("div", Qg, [(n(!0), a(G, null, B(m.value, (y, v) => (n(), a("div", {
                key: v,
                class: "slot-column"
            }, [t("div", {
                class: M(["slot-transform", "transform" + v, u.value == 1 && "slot-scroll"])
            }, [(n(!0), a(G, null, B(y.arr, ($, T) => (n(), a("div", {
                class: "slot-num",
                num: y,
                key: "2" + T
            }, e($), 9, Yg))), 128)), Zg, (n(!0), a(G, null, B(y.arr, ($, T) => (n(), a("div", {
                class: "slot-num",
                num: y,
                key: "2" + T
            }, e($), 9, tm))), 128))], 2)]))), 128))])])]), N(Ei, {
                howPlayShow: c.value,
                gamePresentation: _.currentGame.gamePresentation,
                onClose: b[0] || (b[0] = y => c.value = !1)
            }, null, 8, ["howPlayShow", "gamePresentation"])], 64))
        }
    });
const im = H(em, [
        ["__scopeId", "data-v-3f9a78f2"]
    ]),
    nm = {
        class: "FDB__C-nav"
    },
    am = ["onClick"],
    om = {
        class: "FDB__C-H"
    },
    sm = ["onClick"],
    lm = {
        class: "FDB__C-Num"
    },
    cm = ["txt", "onClick"],
    rm = {
        class: "round"
    },
    um = {
        class: "rate"
    },
    dm = W({
        __name: "BetCom",
        props: {
            betTypeNameMap: {},
            betType: {},
            BettingH: {},
            onTabID: {},
            numberChack: {},
            OddsList: {}
        },
        emits: ["changeType", "onTab", "numberTab"],
        setup(l, {
            emit: i
        }) {
            return (o, u) => (n(), a(G, null, [t("div", nm, [(n(!0), a(G, null, B(o.betTypeNameMap, (m, g) => (n(), a("div", {
                key: g,
                class: M({
                    active: o.betType == g
                }),
                onClick: d => i("changeType", g)
            }, e(m), 11, am))), 128))]), t("div", om, [(n(!0), a(G, null, B(o.BettingH, (m, g) => (n(), a("div", {
                key: g,
                class: M({
                    active: o.onTabID == m.id
                }),
                onClick: d => i("onTab", m.id)
            }, [t("span", null, e(m.name), 1), t("span", null, e(m.rate), 1)], 10, sm))), 128))]), t("div", lm, [o.betType != 5 ? (n(), a(G, {
                key: 0
            }, B(10, (m, g) => t("div", {
                key: g,
                txt: g,
                class: M({
                    active: o.numberChack[g]
                }),
                onClick: d => i("numberTab", g)
            }, [t("div", rm, e(g), 1), t("div", um, e(o.OddsList[0].playRate ? o.OddsList[0].playRate : o.OddsList[0].playRate_Original), 1)], 10, cm)), 64)) : S("", !0)])], 64))
        }
    });
const da = H(dm, [
        ["__scopeId", "data-v-8d2c1c7a"]
    ]),
    pm = l => (wt("data-v-831909f9"), l = l(), Lt(), l),
    gm = {
        class: "Betting__Popup-body"
    },
    mm = {
        class: "Betting__Popup-body-line"
    },
    bm = {
        class: "Betting__Popup-body-line-list"
    },
    _m = ["onClick"],
    vm = {
        class: "Betting__Popup-body-line"
    },
    hm = {
        class: "Betting__Popup-body-line-btnL"
    },
    km = {
        class: "Betting__Popup-body-line"
    },
    fm = pm(() => t("div", null, null, -1)),
    ym = {
        class: "Betting__Popup-body-line-list"
    },
    $m = ["onClick"],
    Tm = {
        class: "Betting__Popup-body-line"
    },
    Cm = {
        class: "Betting__Popup-foot"
    },
    wm = {
        class: "Betting__Popup-foot-s bgcolor"
    },
    Lm = {
        class: "Betting__Popup-PreSale"
    },
    Nm = {
        class: "Betting__Popup-PreSale-head"
    },
    Im = {
        class: "Betting__Popup-PreSale-body"
    },
    zm = {
        class: "Betting__Popup-PreSale-foot"
    },
    xm = W({
        __name: "BettingPopup",
        props: {
            currentInfo: {},
            currentGame: {},
            bettingPopupShow: {},
            betTypeList: {},
            selectInfo: {}
        },
        emits: ["update:bettingPopupShow", "update:selectInfo", "clearBetting", "computedCoin", "submitBetting"],
        setup(l, {
            emit: i
        }) {
            const o = l,
                {
                    t: u
                } = pt(),
                m = f(!1),
                g = f(!0),
                d = U(() => o.currentGame.betMultiple.split("|"));
            Ot(() => d, () => {
                o.selectInfo.count = d.value[0]
            }, {
                deep: !0,
                immediate: !0
            });
            let c = U({
                get() {
                    return o.bettingPopupShow || !1
                },
                set($) {
                    i("update:bettingPopupShow", $)
                }
            });
            const p = $ => {
                    switch ($) {
                        case 1:
                            o.selectInfo.count > 1 && o.selectInfo.count--;
                            break;
                        case 2:
                            o.selectInfo.count++;
                            break
                    }
                    i("computedCoin")
                },
                r = $ => {
                    $ > 0 && (o.selectInfo.count = Math.floor($)), i("computedCoin")
                },
                _ = $ => {
                    o.selectInfo.count = $, i("computedCoin")
                },
                b = $ => {
                    o.selectInfo.coin = $, i("computedCoin")
                },
                y = () => {
                    m.value = !1, g.value = !0
                },
                v = async () => {
                    if (!g.value) {
                        Te(u("agreePresaleRules"));
                        return
                    }
                    i("submitBetting")
                };
            return ($, T) => {
                const C = V("van-field"),
                    h = V("van-popup"),
                    k = zt("throttle-click");
                return n(), a(G, null, [N(h, {
                    show: s(c),
                    "onUpdate:show": T[6] || (T[6] = w => oe(c) ? c.value = w : c = w),
                    position: "bottom",
                    style: {
                        "box-shadow": "0px -18px 40px rgba(37, 37, 60, 0.26)",
                        background: "#3A3A3A"
                    },
                    round: !0,
                    "close-on-click-overlay": !1
                }, {
                    default: D(() => [t("div", gm, [$e($.$slots, "default", {}, void 0, !0), t("div", mm, [E(e(s(u)("amount")) + " ", 1), t("div", bm, [(n(!0), a(G, null, B($.betTypeList, (w, L) => (n(), a("div", {
                        key: L,
                        class: M(["Betting__Popup-body-line-item", {
                            bgcolor: o.selectInfo.coin == w
                        }]),
                        onClick: z => b(w)
                    }, e(w), 11, _m))), 128))])]), t("div", vm, [E(e(s(u)("numbers")) + " ", 1), t("div", hm, [t("div", {
                        class: M(["Betting__Popup-btn", {
                            bgcolor: o.selectInfo.count > 0
                        }]),
                        onClick: T[0] || (T[0] = w => p(1))
                    }, "-", 2), N(C, {
                        class: "Betting__Popup-input",
                        modelValue: o.selectInfo.count,
                        "onUpdate:modelValue": T[1] || (T[1] = w => o.selectInfo.count = w),
                        modelModifiers: {
                            number: !0
                        },
                        type: "digit",
                        maxlength: 4,
                        onInput: r
                    }, null, 8, ["modelValue"]), t("div", {
                        class: "Betting__Popup-btn bgcolor",
                        onClick: T[2] || (T[2] = w => p(2))
                    }, "+")])]), t("div", km, [fm, t("div", ym, [(n(!0), a(G, null, B(d.value, (w, L) => (n(), a("div", {
                        key: L,
                        class: M(["Betting__Popup-body-line-item", {
                            bgcolor: o.selectInfo.count == w
                        }]),
                        onClick: z => _(w)
                    }, " X" + e(w), 11, $m))), 128))])]), t("div", Tm, [t("span", {
                        class: M(["Betting__Popup-agree", {
                            active: g.value
                        }]),
                        onClick: T[3] || (T[3] = w => g.value = !g.value)
                    }, e(s(u)("agree")), 3), t("span", {
                        onClick: T[4] || (T[4] = w => m.value = !0),
                        class: "Betting__Popup-preSaleShow"
                    }, e(s(u)("presaleRules")), 1)])]), t("div", Cm, [t("div", {
                        class: "Betting__Popup-foot-c",
                        onClick: T[5] || (T[5] = w => i("clearBetting"))
                    }, e(s(u)("cancel")), 1), et((n(), a("div", wm, [E(e(s(u)("totalAmount")) + e(s(xt)(o.selectInfo.allCoin || 0)), 1)])), [
                        [k, {
                            handler: v,
                            wait: 2e3
                        }]
                    ])])]),
                    _: 3
                }, 8, ["show"]), N(h, {
                    show: m.value,
                    "onUpdate:show": T[7] || (T[7] = w => m.value = w),
                    "close-on-click-overlay": !1,
                    round: ""
                }, {
                    default: D(() => [t("div", Lm, [t("div", Nm, e(s(u)("presaleRules")), 1), t("div", Im, e($.$t("betPopTXT")), 1), t("div", zm, [t("div", {
                        class: "Betting__Popup-PreSale-foot-btn",
                        onClick: y
                    }, e(s(u)("iKonw")), 1)])])]),
                    _: 1
                }, 8, ["show"])], 64)
            }
        }
    });
const Sm = H(xm, [
        ["__scopeId", "data-v-831909f9"]
    ]),
    Rm = {
        class: "FDB__C"
    },
    Gm = {
        class: "FDB__C-mark"
    },
    Mm = W({
        __name: "Betting",
        props: {
            currentInfo: {
                type: Object,
                default: () => ({})
            },
            ProhibitBuyTime: {
                type: Number,
                default: 5
            },
            currentGame: {
                type: Object,
                default: () => ({})
            }
        },
        emits: ["betting", "changeBettingP"],
        setup(l, {
            expose: i,
            emit: o
        }) {
            const u = l,
                {
                    t: m
                } = pt();
            f();
            const g = f(!1);
            Ot(() => g.value, O => {
                O && (v.value.coin = T.value[0])
            });
            const d = f(0),
                c = f(["A", "B", "C", "D", "E", "SUM"]),
                p = f([{
                    playID: 1,
                    playType: 1,
                    playBet: "0-9",
                    playResult: "0-9",
                    playRate: 9,
                    playRate_Original: 9
                }, {
                    playID: 2,
                    playType: 2,
                    playBet: "H",
                    playResult: "H",
                    playRate: 2,
                    playRate_Original: 2
                }, {
                    playID: 3,
                    playType: 2,
                    playBet: "L",
                    playResult: "L",
                    playRate: 2,
                    playRate_Original: 2
                }, {
                    playID: 4,
                    playType: 3,
                    playBet: "O",
                    playResult: "O",
                    playRate: 2,
                    playRate_Original: 2
                }, {
                    playID: 5,
                    playType: 3,
                    playBet: "E",
                    playResult: "E",
                    playRate: 2,
                    playRate_Original: 2
                }]),
                r = f(0),
                _ = f([]),
                b = f([!1, !1, !1, !1, !1, !1, !1, !1]),
                y = U(() => [{
                    id: 1,
                    name: m("k3Big"),
                    rate: p.value[1].playRate || p.value[1].playRate_Original
                }, {
                    id: 2,
                    name: m("k3Small"),
                    rate: p.value[2].playRate || p.value[2].playRate_Original
                }, {
                    id: 3,
                    name: m("k3Odd"),
                    rate: p.value[3].playRate || p.value[3].playRate_Original
                }, {
                    id: 4,
                    name: m("k3Even"),
                    rate: p.value[4].playRate || p.value[4].playRate_Original
                }]),
                v = f({
                    coin: 0,
                    count: 1,
                    allCoin: 0,
                    gametype: 0,
                    typeid: 1,
                    issuenumber: "2020",
                    selecttype: ""
                }),
                $ = U(() => (u.currentInfo.passTime < u.ProhibitBuyTime && I(), u.currentInfo.passTime < u.ProhibitBuyTime)),
                T = U(() => u.currentGame.scope ? u.currentGame.scope.split("|").map(O => Number(O)) : []),
                C = O => {
                    d.value = O, O == 5 && z()
                },
                h = async () => {
                    const [O, P] = await ae(Ls());
                    P && (p.value = P)
                }, k = O => {
                    z(), r.value == O ? (r.value = 0, g.value = !0) : (r.value = O, g.value = !0), L()
                }, w = O => {
                    if (r.value = 0, b.value[O]) {
                        b.value[O] = !1;
                        const P = _.value.indexOf(O);
                        P > -1 && _.value.splice(P, 1), g.value = !0
                    } else _.value.push(O), b.value[O] = !0, g.value = !0;
                    L()
                }, L = () => {
                    ie(() => {
                        _.value.length > 0 ? v.value.allCoin = v.value.coin * v.value.count * _.value.length : r.value ? v.value.allCoin = v.value.coin * v.value.count : v.value.allCoin = 0
                    })
                }, z = () => {
                    _.value = [];
                    for (let O = 0; b.value.length > O; O++) b.value[O] = !1;
                    L()
                }, I = () => {
                    var O;
                    v.value.count = ((O = u.currentGame.betMultiple) == null ? void 0 : O.split("|")[0]) || 1, g.value = !1, x()
                }, x = () => {
                    _.value = [], b.value = [!1, !1, !1, !1, !1, !1, !1, !1], r.value = 0
                }, R = async () => {
                    if (v.value.count == 0) return qt(m("bteNoCount"));
                    let O;
                    if (_.value.length > 0) O = _.value.join("|");
                    else switch (r.value) {
                        case 1:
                            O = "H";
                            break;
                        case 2:
                            O = "L";
                            break;
                        case 3:
                            O = "O";
                            break;
                        case 4:
                            O = "E";
                            break
                    }
                    if (!O) return qt("请下注");
                    const P = {
                            issuenumber: u.currentInfo.gameNo,
                            typeId: u.currentGame.typeID,
                            amount: v.value.coin,
                            betCount: Number(v.value.count),
                            gameType: d.value + 1,
                            selectType: O
                        },
                        K = await rt(La(P));
                    (K == null ? void 0 : K.code) === 0 && (Te(m("code" + (K == null ? void 0 : K.msgCode))), g.value = !1, x(), o("betting", u.currentInfo.gameNo))
                };
            return ht(() => {
                h()
            }), i({
                bettingPopupShow: g
            }), (O, P) => (n(), a("div", Rm, [et(t("div", Gm, [t("div", null, e(u.currentInfo.time3 || "0"), 1), t("div", null, e(u.currentInfo.time4 || "0"), 1)], 512), [
                [Vt, $.value]
            ]), N(da, {
                betTypeNameMap: c.value,
                betType: d.value,
                BettingH: y.value,
                onTabID: r.value,
                OddsList: p.value,
                numberChack: b.value,
                onChangeType: C,
                onNumberTab: w,
                onOnTab: k
            }, null, 8, ["betTypeNameMap", "betType", "BettingH", "onTabID", "OddsList", "numberChack"]), N(Sm, {
                currentInfo: l.currentInfo,
                currentGame: l.currentGame,
                bettingPopupShow: g.value,
                betTypeList: T.value,
                selectInfo: v.value,
                onComputedCoin: L,
                onClearBetting: I,
                onSubmitBetting: R
            }, {
                default: D(() => [N(da, {
                    betTypeNameMap: c.value,
                    betType: d.value,
                    BettingH: y.value,
                    onTabID: r.value,
                    OddsList: p.value,
                    numberChack: b.value,
                    onChangeType: C,
                    onNumberTab: w,
                    onOnTab: k
                }, null, 8, ["betTypeNameMap", "betType", "BettingH", "onTabID", "OddsList", "numberChack"])]),
                _: 1
            }, 8, ["currentInfo", "currentGame", "bettingPopupShow", "betTypeList", "selectInfo"])]))
        }
    });
const Bm = H(Mm, [
        ["__scopeId", "data-v-61b41d1b"]
    ]),
    Dm = {
        class: "RecordNav__C"
    },
    Pm = ["onClick"],
    Am = W({
        __name: "RecordNav",
        props: {
            record: {
                type: String,
                default: "GameRecord"
            }
        },
        setup(l) {
            const i = l,
                {
                    t: o
                } = pt(),
                u = f([{
                    name: o("gameRecords"),
                    componentName: "GameRecord"
                }, {
                    name: o("chartTrends"),
                    componentName: "Trend"
                }, {
                    name: o("myGameRecords"),
                    componentName: "MyGameRecord"
                }]);
            return (m, g) => (n(), a("div", Dm, [(n(!0), a(G, null, B(u.value, (d, c) => (n(), a("div", {
                key: c,
                onClick: p => m.$emit("changeC", d.componentName),
                class: M({
                    active: i.record == d.componentName
                })
            }, e(d.name), 11, Pm))), 128))]))
        }
    });
const Hi = H(Am, [
        ["__scopeId", "data-v-a0861d49"]
    ]),
    Om = {
        class: "GameRecord__C"
    },
    Wm = {
        class: "GameRecord__C-head"
    },
    qm = {
        class: "GameRecord__C-body"
    },
    Em = {
        class: "numList"
    },
    Hm = {
        class: "numItem"
    },
    Fm = {
        class: "redNumItem"
    },
    Vm = {
        key: 1,
        class: "GameRecord__C-body-empty"
    },
    jm = {
        key: 0,
        class: "GameRecord__C-foot"
    },
    Um = {
        class: "GameRecord__C-foot-page"
    },
    Km = W({
        __name: "GameRecord",
        props: {
            typeid: {}
        },
        setup(l, {
            expose: i
        }) {
            const o = l,
                u = f([]),
                m = f(4),
                g = f(10),
                d = f(1),
                c = () => {
                    d.value--, r()
                },
                p = () => {
                    d.value++, r()
                },
                r = async (_ = !1) => {
                    if (o.typeid == null) return;
                    _ && (d.value = 1);
                    const b = await rt(Na({
                        pageSize: g.value,
                        pageNo: d.value,
                        typeId: o.typeid
                    }));
                    u.value = (b == null ? void 0 : b.data.list) || [], m.value = (b == null ? void 0 : b.data.totalPage) || 0
                };
            return i({
                getData: r
            }), Ce(() => {
                r()
            }), (_, b) => {
                const y = V("van-col"),
                    v = V("van-row"),
                    $ = V("van-icon");
                return n(), a("div", Om, [t("div", Wm, [N(v, null, {
                    default: D(() => [N(y, {
                        span: "8"
                    }, {
                        default: D(() => [E(e(_.$t("FDNumber")), 1)]),
                        _: 1
                    }), N(y, {
                        span: "12"
                    }, {
                        default: D(() => [E(e(_.$t("FDResult")), 1)]),
                        _: 1
                    }), N(y, {
                        span: "4"
                    }, {
                        default: D(() => [E(e(_.$t("FDTotal")), 1)]),
                        _: 1
                    })]),
                    _: 1
                })]), t("div", qm, [u.value.length ? (n(!0), a(G, {
                    key: 0
                }, B(u.value, (T, C) => (n(), Q(v, {
                    key: C
                }, {
                    default: D(() => [N(y, {
                        span: "8"
                    }, {
                        default: D(() => [E(e(T.issueNumber), 1)]),
                        _: 2
                    }, 1024), N(y, {
                        span: "12"
                    }, {
                        default: D(() => [t("div", Em, [(n(!0), a(G, null, B([...T.premium], (h, k) => (n(), a("div", Hm, e(h), 1))), 256))])]),
                        _: 2
                    }, 1024), N(y, {
                        span: "4"
                    }, {
                        default: D(() => [t("span", Fm, e(T.sumCount), 1)]),
                        _: 2
                    }, 1024)]),
                    _: 2
                }, 1024))), 128)) : (n(), a("div", Vm, [N(ve)]))]), u.value.length ? (n(), a("div", jm, [t("div", {
                    class: M(["GameRecord__C-foot-previous", {
                        disabled: d.value <= 1
                    }]),
                    onClick: c
                }, [N($, {
                    name: "arrow-left",
                    class: "GameRecord__C-icon",
                    size: "20"
                })], 2), t("div", Um, e(d.value) + "/" + e(m.value), 1), t("div", {
                    class: M(["GameRecord__C-foot-next", {
                        disabled: d.value >= m.value
                    }]),
                    onClick: p
                }, [N($, {
                    name: "arrow",
                    class: "GameRecord__C-icon",
                    size: "20"
                })], 2)])) : S("", !0)])
            }
        }
    });
const Xm = H(Km, [
        ["__scopeId", "data-v-c9e4cd08"]
    ]),
    Jm = {
        class: "noticeBar__container"
    },
    Qm = {
        class: "noticeBar__container-body"
    },
    Ym = {
        key: 0,
        class: "noticeBar__container-body-text"
    },
    Fe = W({
        __name: "index",
        props: {
            color: {
                default: "red"
            }
        },
        setup(l) {
            const i = l,
                o = {
                    btn: {
                        blue: "linear-gradient(272.37deg,#477bff 1.68%,#2b97ff 95.19%)",
                        red: "linear-gradient(360deg, #f54545 20.19%, #fe6868 100%)"
                    },
                    svg: {
                        blue: "#477bff",
                        red: "#f54545"
                    }
                };
            U(() => o.btn[i.color]), U(() => o.svg[i.color]);
            const u = gt(),
                m = le(),
                g = f(null);
            let d;
            d = be(() => _e(() => import("./noticeBarSpeaker-5d712521.js"), ["assets/js/noticeBarSpeaker-5d712521.js", "assets/js/page-activity-8d7959ff.js", "assets/js/modules-fbc96342.js", "assets/css/modules-66401e0a.css", "assets/js/native/index-08561a08.js", "assets/js/en-bab51ca4.js", "assets/js/rus-ecb14220.js", "assets/js/vi-82b0febd.js", "assets/js/id-16b6cb52.js", "assets/js/hd-c5b1d7e8.js", "assets/js/tha-330057b2.js", "assets/js/md-e8a5e3b0.js", "assets/js/bra-6692a9a5.js", "assets/js/my-32fb9d60.js", "assets/js/bdt-d8f19d0c.js", "assets/js/zh-7d334abd.js", "assets/js/pak-cdc12211.js", "assets/js/ar-1c9ff85b.js", "assets/css/page-activity-9df3b495.css"]));
            const c = be(() => _e(() => import("./noticeBarHot-ab6af50b.js"), ["assets/js/noticeBarHot-ab6af50b.js", "assets/js/page-activity-8d7959ff.js", "assets/js/modules-fbc96342.js", "assets/css/modules-66401e0a.css", "assets/js/native/index-08561a08.js", "assets/js/en-bab51ca4.js", "assets/js/rus-ecb14220.js", "assets/js/vi-82b0febd.js", "assets/js/id-16b6cb52.js", "assets/js/hd-c5b1d7e8.js", "assets/js/tha-330057b2.js", "assets/js/md-e8a5e3b0.js", "assets/js/bra-6692a9a5.js", "assets/js/my-32fb9d60.js", "assets/js/bdt-d8f19d0c.js", "assets/js/zh-7d334abd.js", "assets/js/pak-cdc12211.js", "assets/js/ar-1c9ff85b.js", "assets/css/page-activity-9df3b495.css"])),
                p = f(m.messageList),
                r = async () => {
                    const _ = await rt(kn({
                        pageNo: 1,
                        pageSize: 5
                    }));
                    if (_) {
                        if (m.setMessage(_.data.list), p.value = _.data.list, !p.value.length) return;
                        g.value && clearInterval(g.value), g.value = setInterval(() => {
                            p.value.push(p.value.shift())
                        }, 7e3)
                    }
                };
            return ht(() => {
                p.value || setTimeout(() => {
                    r()
                }, 1e3)
            }), (_, b) => {
                var y;
                return n(), a("div", Jm, [(n(), Q(me(s(d)), {
                    class: "notice_svg"
                })), t("div", Qm, [p.value && p.value[0] && p.value[0].siteMessage ? (n(), a("div", Ym, e((y = p.value[0]) == null ? void 0 : y.siteMessage), 1)) : S("", !0)]), t("button", {
                    onClick: b[0] || (b[0] = v => s(u).push({
                        name: "Notification"
                    }))
                }, [(n(), Q(me(s(c)))), E(" " + e(_.$t("more")), 1)])])
            }
        }
    }),
    Zm = {
        class: "Trend__C"
    },
    tb = {
        class: "Trend__C-body1"
    },
    eb = {
        class: "Trend__C-nav"
    },
    ib = ["onClick"],
    nb = {
        class: "Trend__C-body1-line"
    },
    ab = {
        key: 0,
        class: "Trend__C-body1-line"
    },
    ob = {
        class: "Trend__C-body1-line-num"
    },
    sb = {
        key: 1,
        class: "Trend__C-body1-line"
    },
    lb = {
        class: "Trend__C-body1-line-num"
    },
    cb = {
        key: 2,
        class: "Trend__C-body1-line"
    },
    rb = {
        class: "Trend__C-body1-line-num"
    },
    ub = {
        key: 3,
        class: "Trend__C-body1-line"
    },
    db = {
        class: "Trend__C-body1-line-num"
    },
    pb = {
        class: "Trend__C-head"
    },
    gb = {
        class: "Trend__C-body2"
    },
    mb = ["IssueNumber", "Number", "Colour", "rowId"],
    bb = {
        class: "Trend__C-body2-IssueNumber"
    },
    _b = {
        class: "Trend__C-body2-Num"
    },
    vb = ["id"],
    hb = {
        key: 1,
        class: "Trend__C-body2-empty"
    },
    kb = {
        key: 0,
        class: "Trend__C-foot"
    },
    fb = {
        class: "Trend__C-foot-page"
    },
    yb = W({
        __name: "Trend",
        props: {
            typeid: {}
        },
        setup(l, {
            expose: i
        }) {
            const o = l,
                u = f([]),
                m = f([]),
                g = f(),
                d = f(),
                c = f(),
                p = f(),
                r = f(),
                _ = f(["A", "B", "C", "D", "E"]),
                b = f(0),
                y = f(1),
                v = f(4);

            function $() {
                ie(() => {
                    for (let z = 0; z < m.value.length; z++) m.value[z + 1] && C(m.value[z], m.value[z + 1])
                })
            }
            const T = z => {
                b.value = z, w(!0)
            };

            function C(z, I) {
                let x = parseInt(z.number),
                    R = parseInt(I.number);
                var O = document.getElementById("myCanvas" + z.rowId);
                if (O && O.getContext) {
                    var P = O.getContext("2d");
                    P.clearRect(0, 0, O.width, O.height), P.beginPath(), P.moveTo(x == 0 ? 14 : x * 27 + 14, 0), P.lineTo(R == 0 ? 14 : R * 27 + 14, O.height), P.strokeStyle = "red", P.stroke(), P.closePath()
                }
            }
            const h = () => {
                    y.value--, L()
                },
                k = () => {
                    y.value++, L()
                },
                w = async (z = !1) => {
                    if (o.typeid == null) return;
                    L(), z && (y.value = 1);
                    const I = await rt(Ns({
                        typeId: o.typeid,
                        typeNumber: b.value + 1
                    }));
                    if (I) {
                        const x = Object.keys(I.data[0]).filter(R => R.startsWith("number_"));
                        u.value = I.data.filter(R => R.type_Number == b.value + 1).map(R => {
                            const O = {
                                list: [],
                                type: 0
                            };
                            return O.type = R.type, O.list = [], x.forEach(P => {
                                O.list.push(R[P])
                            }), O
                        })
                    }
                    g.value = u.value.find(x => x.type == 1), d.value = u.value.find(x => x.type == 2), c.value = u.value.find(x => x.type == 3), p.value = u.value.find(x => x.type == 4), r.value = u.value.find(x => x.type == 5)
                }, L = async (z = !1) => {
                    if (o.typeid == null) return;
                    z && (y.value = 1);
                    const I = await rt(Na({
                        pageSize: 10,
                        pageNo: y.value,
                        typeId: o.typeid
                    }));
                    I && (m.value = I.data.list.map((x, R) => (x.rowId = R, x.number = x.premium[b.value], x)) || []), v.value = (I == null ? void 0 : I.data.totalPage) || 0, $()
                };
            return i({
                getData: w
            }), Ce(() => {
                w()
            }), (z, I) => {
                const x = V("van-col"),
                    R = V("van-row"),
                    O = V("van-icon");
                return n(), a("div", Zm, [t("div", tb, [t("div", eb, [(n(!0), a(G, null, B(_.value, (P, K) => (n(), a("div", {
                    key: K,
                    class: M({
                        active: b.value == K
                    }),
                    onClick: X => T(K)
                }, e(P), 11, ib))), 128))]), t("div", nb, e(z.$t("trendDesc1")), 1), d.value ? (n(), a("div", ab, [t("div", null, e(z.$t("trendDesc3")), 1), t("div", ob, [(n(!0), a(G, null, B(d.value.list, (P, K) => (n(), a("div", {
                    key: "2" + K
                }, e(P), 1))), 128))])])) : S("", !0), p.value ? (n(), a("div", sb, [t("div", null, e(z.$t("trendDesc4")), 1), t("div", lb, [(n(!0), a(G, null, B(p.value.list, (P, K) => (n(), a("div", {
                    key: "4" + K
                }, e(P), 1))), 128))])])) : S("", !0), g.value ? (n(), a("div", cb, [t("div", null, e(z.$t("trendDesc5")), 1), t("div", rb, [(n(!0), a(G, null, B(g.value.list, (P, K) => (n(), a("div", {
                    key: "5" + K
                }, e(P), 1))), 128))])])) : S("", !0), c.value ? (n(), a("div", ub, [t("div", null, e(z.$t("trendDesc6")), 1), t("div", db, [(n(!0), a(G, null, B(c.value.list, (P, K) => (n(), a("div", {
                    key: "3" + K
                }, e(P), 1))), 128))])])) : S("", !0)]), t("div", pb, [N(R, null, {
                    default: D(() => [N(x, {
                        span: "8"
                    }, {
                        default: D(() => [E(e(z.$t("betIssue")), 1)]),
                        _: 1
                    }), N(x, {
                        span: "16"
                    }, {
                        default: D(() => [E(e(z.$t("number")), 1)]),
                        _: 1
                    })]),
                    _: 1
                })]), t("div", gb, [m.value.length ? (n(!0), a(G, {
                    key: 0
                }, B(m.value, (P, K) => (n(), a("div", {
                    key: K,
                    IssueNumber: P.issueNumber,
                    Number: P.number,
                    Colour: P.colour,
                    rowId: P.rowId
                }, [N(R, null, {
                    default: D(() => [N(x, {
                        span: "8"
                    }, {
                        default: D(() => [t("div", bb, e(P.issueNumber), 1)]),
                        _: 2
                    }, 1024), N(x, {
                        span: "16"
                    }, {
                        default: D(() => [t("div", _b, [t("canvas", {
                            canvas: "",
                            id: "myCanvas" + P.rowId,
                            ref_for: !0,
                            ref: "canvas",
                            class: "line-canvas"
                        }, null, 8, vb), (n(), a(G, null, B(10, X => t("div", {
                            class: M(["Trend__C-body2-Num-item", {
                                action: Number(P.number) == X - 1
                            }]),
                            key: X
                        }, e(X - 1), 3)), 64)), t("div", {
                            class: M(["Trend__C-body2-Num-BS", {
                                isB: Number(P.number) > 4
                            }])
                        }, e(Number(P.number) > 4 ? "H" : "L"), 3), t("div", {
                            class: M(["Trend__C-body2-Num-OE", {
                                isE: Number(P.number) % 2
                            }])
                        }, e(Number(P.number) % 2 ? "O" : "E"), 3)])]),
                        _: 2
                    }, 1024)]),
                    _: 2
                }, 1024)], 8, mb))), 128)) : (n(), a("div", hb, [N(ve)]))]), m.value.length ? (n(), a("div", kb, [t("div", {
                    class: M(["Trend__C-foot-previous", {
                        disabled: y.value <= 1
                    }]),
                    onClick: h
                }, [N(O, {
                    name: "arrow-left",
                    class: "Trend__C-icon",
                    size: "20"
                })], 2), t("div", fb, e(y.value) + "/" + e(v.value), 1), t("div", {
                    class: M(["Trend__C-foot-next", {
                        disabled: y.value >= v.value
                    }]),
                    onClick: k
                }, [N(O, {
                    name: "arrow",
                    class: "Trend__C-icon",
                    size: "20"
                })], 2)])) : S("", !0)])
            }
        }
    });
const $b = H(yb, [
        ["__scopeId", "data-v-bc93e4ae"]
    ]),
    Tb = {
        class: "MyGameRecordList__C"
    },
    Cb = ["onClick"],
    wb = {
        class: "MyGameRecordList__C-item-m"
    },
    Lb = {
        class: "MyGameRecordList__C-item-m-top"
    },
    Nb = {
        class: "MyGameRecordList__C-item-m-bottom"
    },
    Ib = {
        key: 0,
        class: "MyGameRecordList__C-detail"
    },
    zb = {
        class: "MyGameRecordList__C-detail-text"
    },
    xb = {
        key: 0,
        class: "MyGameRecordList__C-detail-line"
    },
    Sb = ["onClick"],
    Rb = ["src"],
    Gb = {
        class: "MyGameRecordList__C-detail-line"
    },
    Mb = {
        class: "MyGameRecordList__C-detail-line"
    },
    Bb = {
        class: "MyGameRecordList__C-detail-line"
    },
    Db = {
        class: "MyGameRecordList__C-detail-line"
    },
    Pb = {
        class: "red"
    },
    Ab = {
        class: "MyGameRecordList__C-detail-line"
    },
    Ob = {
        class: "MyGameRecordList__C-detail-line"
    },
    Wb = {
        key: 0,
        class: "numList"
    },
    qb = {
        key: 1
    },
    Eb = {
        class: "MyGameRecordList__C-detail-line"
    },
    Hb = {
        class: "line1"
    },
    Fb = {
        class: "MyGameRecordList__C-detail-line"
    },
    Vb = {
        key: 1
    },
    jb = {
        class: "MyGameRecordList__C-detail-line"
    },
    Ub = {
        key: 1
    },
    Kb = {
        class: "MyGameRecordList__C-detail-line"
    },
    Xb = W({
        __name: "MayrecordList",
        props: {
            mayrecord: {}
        },
        setup(l) {
            const {
                t: i
            } = pt(), o = f(-1), u = c => ["", "A", "B", "C", "D", "E"][c], m = c => {
                switch (c) {
                    case "L":
                        return i("k3Small");
                    case "O":
                        return i("k3Odd");
                    case "E":
                        return i("k3Even");
                    case "H":
                        return i("k3Big");
                    default:
                        return c
                }
            }, g = c => {
                o.value == c ? o.value = -1 : o.value = c
            }, d = c => {
                switch (c) {
                    case "E":
                        return "Even";
                    case "O":
                        return "Odd";
                    case "H":
                        return "Big";
                    case "L":
                        return "Small";
                    default:
                        return c
                }
            };
            return (c, p) => (n(), a("div", Tb, [(n(!0), a(G, null, B(c.mayrecord, (r, _) => (n(), a(G, {
                key: _
            }, [t("div", {
                class: "MyGameRecordList__C-item",
                onClick: se(b => g(_), ["stop", "prevent"])
            }, [t("div", {
                class: M(["MyGameRecordList__C-item-l", ["MyGameRecordList__C-item-l-" + r.selectType]])
            }, e(d(r.selectType)), 3), t("div", wb, [t("div", Lb, e(r.issueNumber), 1), t("div", Nb, e(r.addTime), 1)]), r.profitAmount ? (n(), a("div", {
                key: 0,
                class: M(["MyGameRecordList__C-item-r", {
                    success: r.state
                }])
            }, [r.profitAmount ? (n(), a("div", {
                key: 0,
                class: M({
                    success: r.state
                })
            }, e(r.state ? c.$t("success") : c.$t("fail")), 3)) : S("", !0), t("span", null, e(`${r.state?"+":"-"}${s(xt)(r.profitAmount)}`), 1)], 2)) : S("", !0)], 8, Cb), _ == o.value ? (n(), a("div", Ib, [t("div", zb, e(c.$t("detailMay")), 1), r.orderNumber ? (n(), a("div", xb, [E(e(c.$t("orderNoMay")) + " ", 1), t("div", {
                onClick: b => s(Ue)(r.orderNumber)
            }, [E(e(r.orderNumber) + " ", 1), t("img", {
                src: s(ut)("home/AllLotteryGames/WinGo", "copy")
            }, null, 8, Rb)], 8, Sb)])) : S("", !0), t("div", Gb, [E(e(c.$t("issueMay")) + " ", 1), t("div", null, e(r.issueNumber), 1)]), t("div", Mb, [E(e(c.$t("amountMay")) + " ", 1), t("div", null, e(s(xt)(r.amount)), 1)]), t("div", Bb, [E(e(c.$t("numMay")) + " ", 1), t("div", null, e(r.betCount), 1)]), t("div", Db, [E(e(c.$t("afterTaxAmount")) + " ", 1), t("div", Pb, e(s(xt)(r.realAmount)), 1)]), t("div", Ab, [E(e(c.$t("tax")) + " ", 1), t("div", null, e(s(xt)(r.fee)), 1)]), t("div", Ob, [E(e(c.$t("resultMay")) + " ", 1), r.premium ? (n(), a("div", Wb, [(n(!0), a(G, null, B(r.premium, (b, y) => (n(), a("div", {
                key: y
            }, e(b), 1))), 128))])) : (n(), a("div", qb, "--"))]), t("div", Eb, [E(e(c.$t("selectMay")) + " ", 1), t("div", Hb, [t("div", null, e(u(r.gameType)), 1), (n(!0), a(G, null, B(r.selectType.split("|"), (b, y) => (n(), a("div", {
                class: "num",
                key: y
            }, e(m(b)), 1))), 128))])]), t("div", Fb, [E(e(c.$t("statusMay")) + " ", 1), r.state != 2 ? (n(), a("div", {
                key: 0,
                class: M([r.state ? "green" : "red"])
            }, e(r.state ? c.$t("success") : c.$t("fail")), 3)) : (n(), a("div", Vb, e(c.$t("unsettled")), 1))]), t("div", jb, [E(e(c.$t("winOrLose")) + " ", 1), r.state != 2 ? (n(), a("div", {
                key: 0,
                class: M([r.state ? "green" : "red"])
            }, e(`${r.state?"+":"-"} ${s(xt)(r.profitAmount)}`), 3)) : (n(), a("div", Ub, "--"))]), t("div", Kb, [E(e(c.$t("createTime")) + " ", 1), t("div", null, e(r.addTime), 1)])])) : S("", !0)], 64))), 128))]))
        }
    });
const eo = H(Xb, [
        ["__scopeId", "data-v-1f0cbdc6"]
    ]),
    Jb = {
        class: "MyGameRecord__C"
    },
    Qb = {
        key: 0,
        class: "MyGameRecord__C-head"
    },
    Yb = {
        class: "MyGameRecord__C-body"
    },
    Zb = {
        key: 1,
        class: "MyGameRecord__C-body-empty"
    },
    t_ = {
        key: 1,
        class: "MyGameRecord__C-foot"
    },
    e_ = {
        class: "MyGameRecord__C-foot-page"
    },
    i_ = W({
        __name: "MyGameRecord",
        props: {
            typeid: {},
            goPathName: {},
            hasHead: {
                type: Boolean,
                default: !0
            }
        },
        setup(l, {
            expose: i
        }) {
            const o = l,
                u = gt(),
                m = f(4),
                g = f(20),
                d = f(1),
                c = f([]),
                p = y => {
                    u.push({
                        name: y
                    })
                },
                r = () => {
                    d.value--, b()
                },
                _ = () => {
                    d.value++, b()
                },
                b = async (y = !1) => {
                    if (o.typeid == null) return;
                    y && (d.value = 1);
                    const v = await rt(Ia({
                        pageSize: g.value,
                        pageNo: d.value,
                        typeId: o.typeid
                    }));
                    c.value = (v == null ? void 0 : v.data.list) || [], m.value = (v == null ? void 0 : v.data.totalPage) || 0
                };
            return i({
                getData: b
            }), Ce(() => {
                b()
            }), (y, v) => {
                const $ = V("van-icon");
                return n(), a("div", Jb, [y.hasHead ? (n(), a("div", Qb, [t("div", {
                    class: "MyGameRecord__C-head-moreB",
                    onClick: v[0] || (v[0] = T => p(y.goPathName))
                }, e(y.$t("more")), 1)])) : S("", !0), t("div", Yb, [c.value.length ? (n(), Q(eo, {
                    key: 0,
                    mayrecord: c.value
                }, null, 8, ["mayrecord"])) : (n(), a("div", Zb, [N(ve)]))]), c.value.length ? (n(), a("div", t_, [t("div", {
                    class: M(["MyGameRecord__C-foot-previous", {
                        disabled: d.value <= 1
                    }]),
                    onClick: r
                }, [N($, {
                    name: "arrow-left",
                    class: "MyGameRecord__C-icon",
                    size: "20"
                })], 2), t("div", e_, e(d.value) + "/" + e(m.value), 1), t("div", {
                    class: M(["MyGameRecord__C-foot-next", {
                        disabled: d.value >= m.value
                    }]),
                    onClick: _
                }, [N($, {
                    name: "arrow",
                    class: "MyGameRecord__C-icon",
                    size: "20"
                })], 2)])) : S("", !0)])
            }
        }
    });
const io = H(i_, [
        ["__scopeId", "data-v-71dd9c4e"]
    ]),
    n_ = l => (wt("data-v-734f0079"), l = l(), Lt(), l),
    a_ = {
        class: "FDP__C"
    },
    o_ = {
        class: "FDP__C-text"
    },
    s_ = {
        class: "FDP__C-list"
    },
    l_ = {
        class: "num"
    },
    c_ = {
        class: "letter"
    },
    r_ = n_(() => t("div", {
        class: "FDP__C-symbol"
    }, "=", -1)),
    u_ = {
        class: "FDP__C-sum"
    },
    d_ = W({
        __name: "premium",
        props: {
            sumCount: {
                type: Number,
                default: 0
            },
            premium: {
                type: String,
                default: "00000"
            }
        },
        setup(l) {
            const i = l,
                o = U(() => [...i.premium]),
                u = f(["A", "B", "C", "D", "E"]);
            return (m, g) => (n(), a("div", a_, [t("div", o_, e(m.$t("betResult")), 1), t("div", s_, [(n(!0), a(G, null, B(o.value, (d, c) => (n(), a("div", {
                key: c
            }, [t("div", l_, e(d), 1), t("div", c_, e(u.value[c]), 1)]))), 128))]), r_, t("div", u_, e(l.sumCount), 1)]))
        }
    });
const p_ = H(d_, [
        ["__scopeId", "data-v-734f0079"]
    ]),
    g_ = l => (wt("data-v-76bd2203"), l = l(), Lt(), l),
    m_ = {
        key: 1,
        class: "WinningTip__C-body-l1"
    },
    b_ = {
        class: "WinningTip__C-body-l2"
    },
    __ = {
        class: "line1"
    },
    v_ = {
        class: "title"
    },
    h_ = {
        class: "num"
    },
    k_ = g_(() => t("div", {
        class: "title sum"
    }, "SUM", -1)),
    f_ = {
        class: "num"
    },
    y_ = {
        class: "WinningTip__C-body-l3"
    },
    $_ = {
        key: 0,
        class: "isLose"
    },
    T_ = {
        class: "head"
    },
    C_ = {
        class: "bonus"
    },
    w_ = {
        class: "gameDetail"
    },
    L_ = {
        class: "WinningTip__C-body-l4"
    },
    N_ = ["onClick"],
    I_ = W({
        __name: "WinningTips",
        setup(l, {
            expose: i
        }) {
            const o = U(() => g.value[0] ? g.value[0].state == 0 : !1),
                u = U(() => g.value[0] || {}),
                m = f(!1),
                g = f([]),
                d = f(["A", "B", "C", "D", "E", "SUM"]);
            let c = f();
            const p = () => {
                    clearTimeout(c.value), g.value.shift(), m.value && g.value.length && (c.value = setTimeout(() => {
                        p()
                    }, 1e3 * 3))
                },
                r = () => {
                    m.value = !m.value, m.value ? c.value = setTimeout(() => {
                        p()
                    }, 1e3 * 3) : clearTimeout(c.value)
                },
                _ = y => {
                    y.list = y.premium.split(""), y.sum = y.sumCount, g.value.push(y), m.value && (c.value = setTimeout(() => {
                        p()
                    }, 1e3 * 3))
                },
                b = () => {
                    g.value = []
                };
            return i({
                showMark: _
            }), (y, v) => et((n(), a("div", {
                class: "WinningTip__C",
                onClick: p
            }, [t("div", {
                class: M(["WinningTip__C-body", {
                    isL: o.value
                }])
            }, [o.value ? (n(), a("div", {
                key: 0,
                class: M(["WinningTip__C-body-l1", {
                    isL: o.value
                }])
            }, e(y.$t("k3WarningTip1")), 3)) : (n(), a("div", m_, e(y.$t("k3WarningTip2")), 1)), t("div", b_, [E(e(y.$t("betResult")) + " ", 1), t("div", __, [(n(!0), a(G, null, B(u.value.list, ($, T) => (n(), a("div", {
                key: T
            }, [t("div", v_, e(d.value[T]), 1), t("div", h_, e($), 1)]))), 128)), t("div", null, [k_, t("div", f_, e(u.value.sum), 1)])])]), t("div", y_, [o.value ? (n(), a("div", $_, e(y.$t("k3WarningTip3")), 1)) : (n(), a(G, {
                key: 1
            }, [t("div", T_, e(y.$t("k3WarningTip4")), 1), t("div", C_, e(s(xt)(Number(u.value.winAmount))), 1)], 64)), t("div", w_, e(y.$t("k3WarningTip5")) + e(u.value.typeName) + " " + e(u.value.issueNumber), 1)]), t("div", L_, [t("div", {
                class: M(["acitveBtn", {
                    active: m.value
                }]),
                onClick: se(r, ["stop"])
            }, null, 10, N_), E(" " + e(y.$t("autoShutOff3s")), 1)]), t("div", {
                class: "closeBtn",
                onClick: b
            })], 2)], 512)), [
                [Vt, g.value.length]
            ])
        }
    });
const z_ = H(I_, [
        ["__scopeId", "data-v-76bd2203"]
    ]),
    x_ = W({
        __name: "ChangLong",
        setup(l) {
            const i = gt(),
                o = () => {
                    i.push({
                        name: "AllLotteryGames-ChangLong"
                    })
                };
            return (u, m) => (n(), a("div", {
                class: "changlongEnter",
                onClick: o
            }))
        }
    });
const Qe = H(x_, [
        ["__scopeId", "data-v-d3181efa"]
    ]),
    S_ = "/assets/mp3/di1-0f3d86cb.mp3",
    R_ = "/assets/mp3/di2-ad9aa8fb.mp3",
    G_ = ["muted"],
    M_ = t("source", {
        src: S_,
        type: "audio/mpeg"
    }, null, -1),
    B_ = [M_],
    D_ = ["muted"],
    P_ = t("source", {
        src: R_,
        type: "audio/mpeg"
    }, null, -1),
    A_ = [P_],
    Fi = W({
        __name: "audio",
        setup(l) {
            const i = f(!1);
            Ot(() => le().visibility, u => {
                u === 0 ? i.value = !0 : setTimeout(() => {
                    i.value = !1
                }, 500)
            });
            const o = () => {
                i.value = !0, ie(() => {
                    const u = document.getElementById("voice1"),
                        m = document.getElementById("voice2");
                    u.play(), m.play(), u.pause(), m.pause(), i.value = !1, document.removeEventListener("touchstart", o)
                })
            };
            return ht(() => {
                document.addEventListener("touchstart", o)
            }), (u, m) => (n(), a(G, null, [t("audio", {
                id: "voice1",
                muted: i.value
            }, B_, 8, G_), t("audio", {
                id: "voice2",
                muted: i.value
            }, A_, 8, D_)], 64))
        }
    }),
    O_ = {
        class: "FD__C"
    },
    W_ = {
        class: "FD__C-head-more"
    },
    q_ = W({
        __name: "index",
        setup(l) {
            const o = ii().query.typeId,
                u = {
                    GameRecord: Xm,
                    Trend: $b,
                    MyGameRecord: io
                },
                m = f(),
                g = f(),
                d = f(),
                c = f(),
                p = f(!1),
                r = f("GameRecord"),
                _ = gt(),
                b = Je(),
                y = b.get5D,
                v = f(0),
                $ = f(localStorage.getItem("volumeShow") || "1"),
                T = f(!1),
                C = f(null),
                h = f({
                    gameNo: "loading",
                    currentTime: "",
                    beginTime: "",
                    passTime: 180,
                    time1: 0,
                    time2: 0,
                    time3: 0,
                    time4: 0
                }),
                k = f(5),
                w = f(""),
                L = f(!1),
                z = f(null),
                I = f("00000"),
                x = f(0),
                R = U(() => y[v.value] || {}),
                O = ne(),
                P = U(() => O.getIsShowLotteryDragon);
            ht(() => {
                ct()
            }), Ke(() => {
                clearInterval(C.value), $t.value.forEach(tt => {
                    clearInterval(tt)
                }), Ct.value && clearTimeout(Ct.value)
            }), Ot(() => le().visibility, tt => {
                tt === 0 ? clearInterval(C.value) : (ct(), J(v.value))
            });
            const K = () => {
                    sessionStorage.setItem("clickedGameType", "lottery"), _.push({
                        path: "/"
                    })
                },
                X = () => {
                    $.value == "1" ? $.value = "2" : $.value = "1", localStorage.setItem("volumeShow", $.value)
                },
                at = tt => {
                    _.push({
                        name: tt
                    })
                },
                ct = () => {
                    const tt = y.findIndex(nt => nt.typeID == o);
                    J(tt !== -1 ? tt : 0)
                },
                ot = async (tt, nt = !1) => {
                    const [A, st] = await ae(zs({
                        typeId: tt
                    }));
                    I.value = st.premium, x.value = st.sumCount, nt && c.value.animationShow()
                }, J = tt => {
                    b.get5DData(), v.value = tt, z.value = y[tt].typeID, Z(z.value), ie(() => {
                        m.value.getData(z.value)
                    })
                }, Z = async (tt, nt = !1) => {
                    ot(tt, nt);
                    const [A, st] = await ae(Is({
                        typeId: tt
                    }));
                    h.value.gameNo = st.issueNumber, h.value.currentTime = st.serviceTime.replace(/-/g, "/"), h.value.beginTime = st.startTime.replace(/-/g, "/"), lt()
                }, lt = () => {
                    if (!y.length) return;
                    var tt = new Date(h.value.currentTime).getTime(),
                        nt = new Date(h.value.beginTime).getTime();
                    let A = (tt - nt) / 1e3,
                        st = y[v.value];
                    if (A > st.intervalM * 60 && (A = st.intervalM * 60), h.value.passTime = st.intervalM * 60 - A, h.value.passTime < 0) {
                        w.value = "An error occurred, please contact customer service。The game time is " + st.intervalM + " minutes,start time is " + h.value.beginTime + ",current time is" + h.value.currentTime + "!", T.value = !0;
                        return
                    }
                    Rt()
                }, Rt = () => {
                    clearInterval(C.value), Nt(!1), C.value = setInterval(function() {
                        Nt()
                    }, 1e3)
                }, Nt = (tt = !0) => {
                    if (h.value.passTime <= k.value && (L.value = !1), $.value == "1" && (h.value.passTime <= k.value && h.value.passTime > 1 ? _t(1) : h.value.passTime == 1 && _t(2)), h.value.passTime > 0) {
                        let nt = h.value.passTime;
                        h.value.time2 = Math.floor(nt / 60), h.value.time3 = Math.floor(nt % 60 / 10), h.value.time4 = Math.floor(nt % 10), h.value.passTime--
                    } else clearInterval(C.value), tt && Ht()
                }, _t = (tt = 1) => {
                    const nt = document.getElementById(`voice${tt}`);
                    nt && (nt.currentTime = 0, nt.play())
                }, Ht = () => {
                    Z(z.value, !0), d.value.getWinsUserAmount(!1), m.value.getData(!0)
                }, Kt = f({}), $t = f([]), It = tt => {
                    if (d.value.getWinsUserAmount(!1), m.value.getData(), Kt.value[tt]) return;
                    Kt.value[tt] = !0;
                    const {
                        time1: nt,
                        time2: A,
                        time3: st,
                        time4: Tt
                    } = h.value, At = (nt * 10 * 60 + A * 60 + st * 10 + Tt) * 1e3;
                    $t.value[R.value.intervalM] = setTimeout(() => {
                        dt(tt)
                    }, At)
                }, St = tt => {
                    p.value = tt
                }, Ct = f(null), dt = async tt => {
                    const [nt, A] = await ae(xs({
                        issueNumber: tt
                    }));
                    if (A.data)
                        if (A.data.state != 2) g.value.showMark(A.data), delete Kt.value[tt];
                        else {
                            Ct.value = setTimeout(() => {
                                dt(tt)
                            }, 2e3);
                            return
                        }
                };
            return (tt, nt) => {
                const A = V("NavBar");
                return n(), a("div", O_, [N(A, {
                    "left-arrow": "",
                    onClickLeft: K,
                    "background-color": "#3F3F3F",
                    headLogo: !0
                }, {
                    right: D(() => [t("div", W_, [t("div", {
                        onClick: nt[0] || (nt[0] = st => at("CustomerService"))
                    }), t("div", {
                        class: M({
                            disableVoice: $.value == "2"
                        }),
                        onClick: X
                    }, null, 2)])]),
                    _: 1
                }), N(Wi, {
                    ref_key: "WallteRef",
                    ref: d
                }, null, 512), N(Fe, {
                    key: "5d"
                }), N(qi, {
                    gameList: s(y),
                    currentGameIndex: v.value,
                    onChangeGame: J
                }, null, 8, ["gameList", "currentGameIndex"]), N(p_, {
                    premium: I.value,
                    sumCount: x.value
                }, null, 8, ["premium", "sumCount"]), N(im, {
                    ref_key: "tiemLeftRef",
                    ref: c,
                    currentInfo: h.value,
                    premium: I.value,
                    currentGame: R.value
                }, null, 8, ["currentInfo", "premium", "currentGame"]), N(Bm, {
                    currentInfo: h.value,
                    currentGame: R.value,
                    VoiceType: $.value,
                    typeid: z.value,
                    onBetting: It,
                    onChangeBettingP: St
                }, null, 8, ["currentInfo", "currentGame", "VoiceType", "typeid"]), N(Hi, {
                    record: r.value,
                    onChangeC: nt[1] || (nt[1] = st => r.value = st)
                }, null, 8, ["record"]), (n(), Q(ni, null, [(n(), Q(me(u[r.value]), {
                    ref_key: "RecordComponent",
                    ref: m,
                    typeid: z.value,
                    EmerdApi: s(za),
                    goPathName: "AllLotteryGames-BettingRecord5D"
                }, null, 8, ["typeid", "EmerdApi"]))], 1024)), N(Me, {
                    show: T.value,
                    onConfirm: nt[2] || (nt[2] = st => at("/login"))
                }, {
                    content: D(() => [t("div", null, e(w.value), 1)]),
                    _: 1
                }, 8, ["show"]), N(z_, {
                    ref_key: "WinningTipsRef",
                    ref: g
                }, null, 512), P.value ? (n(), Q(Qe, {
                    key: 0
                })) : S("", !0), N(Fi)])
            }
        }
    });
const E_ = H(q_, [
        ["__scopeId", "data-v-a43af5bc"]
    ]),
    ED = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: E_
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    H_ = {
        class: "BettingRecord5D__C"
    },
    F_ = {
        class: "BettingRecord5D__C-nav"
    },
    V_ = {
        class: "BettingRecord5D__C-list"
    },
    j_ = {
        key: 0,
        class: "BettingRecord5D__C-foot"
    },
    U_ = {
        class: "BettingRecord5D__C-foot-page"
    },
    K_ = W({
        __name: "index",
        setup(l) {
            const i = gt(),
                o = f(tr),
                u = f([]),
                m = f(0),
                g = f(1),
                d = f(4),
                c = $ => {
                    p.value = $.name, g.value = 1, r()
                },
                p = f(0),
                r = async () => {
                    const $ = await rt(Ia({
                        pageSize: 20,
                        pageNo: g.value,
                        typeId: p.value
                    }));
                    u.value = ($ == null ? void 0 : $.data.list) || [], d.value = ($ == null ? void 0 : $.data.totalPage) || 0
                }, _ = () => {
                    p.value = o.value[0].typeID, r()
                };

            function b() {
                i.go(-1)
            }
            const y = () => {
                    g.value--, r()
                },
                v = () => {
                    g.value++, r()
                };
            return ht(() => {
                _()
            }), ($, T) => {
                const C = V("van-tab"),
                    h = V("van-tabs"),
                    k = V("van-icon");
                return n(), a("div", H_, [t("div", {
                    class: "BettingRecord5D__C-head"
                }, [t("div", {
                    class: "BettingRecord5D__C-head-bcak",
                    onClick: b
                }), E(" 5D Lotre ")]), t("div", F_, [N(h, {
                    active: m.value,
                    "onUpdate:active": T[0] || (T[0] = w => m.value = w),
                    onClickTab: c
                }, {
                    default: D(() => [(n(!0), a(G, null, B(o.value, (w, L) => (n(), Q(C, {
                        key: L,
                        title: w.tabName,
                        name: w.typeID
                    }, null, 8, ["title", "name"]))), 128))]),
                    _: 1
                }, 8, ["active"])]), t("div", V_, [N(eo, {
                    mayrecord: u.value
                }, null, 8, ["mayrecord"])]), u.value.length ? (n(), a("div", j_, [t("div", {
                    class: M(["BettingRecord5D__C-foot-previous", {
                        disabled: g.value <= 1
                    }]),
                    onClick: y
                }, [N(k, {
                    name: "arrow-left",
                    class: "BettingRecord5D__C-icon",
                    size: "20"
                })], 2), t("div", U_, e(g.value) + "/" + e(d.value), 1), t("div", {
                    class: M(["BettingRecord5D__C-foot-next", {
                        disabled: g.value >= d.value
                    }]),
                    onClick: v
                }, [N(k, {
                    name: "arrow",
                    class: "BettingRecord5D__C-icon",
                    size: "20"
                })], 2)])) : S("", !0)])
            }
        }
    });
const X_ = H(K_, [
        ["__scopeId", "data-v-e54b821b"]
    ]),
    HD = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: X_
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    J_ = {
        class: "MyGameRecordList__C"
    },
    Q_ = ["onClick"],
    Y_ = {
        class: "MyGameRecordList__C-item-m"
    },
    Z_ = {
        class: "MyGameRecordList__C-item-m-top"
    },
    tv = {
        class: "MyGameRecordList__C-item-m-bottom"
    },
    ev = {
        key: 0,
        class: "MyGameRecordList__C-detail"
    },
    iv = {
        class: "MyGameRecordList__C-detail-text"
    },
    nv = {
        key: 0,
        class: "MyGameRecordList__C-detail-line"
    },
    av = ["onClick"],
    ov = ["src"],
    sv = {
        class: "MyGameRecordList__C-detail-line"
    },
    lv = {
        class: "MyGameRecordList__C-detail-line"
    },
    cv = {
        class: "MyGameRecordList__C-detail-line"
    },
    rv = {
        class: "MyGameRecordList__C-detail-line"
    },
    uv = {
        class: "red"
    },
    dv = {
        class: "MyGameRecordList__C-detail-line"
    },
    pv = {
        class: "MyGameRecordList__C-detail-line"
    },
    gv = {
        key: 0,
        class: "numList"
    },
    mv = {
        key: 1
    },
    bv = {
        class: "MyGameRecordList__C-detail-line noLine"
    },
    _v = {
        key: 0,
        class: "line1"
    },
    vv = {
        key: 1,
        class: "line1"
    },
    hv = {
        class: ""
    },
    kv = {
        class: ""
    },
    fv = {
        key: 2,
        class: "line1"
    },
    yv = {
        class: ""
    },
    $v = {
        key: 1,
        class: "btn actionBtn"
    },
    Tv = {
        key: 3,
        class: "line1"
    },
    Cv = {
        class: ""
    },
    wv = {
        key: 1,
        class: "actionBtn"
    },
    Lv = {
        class: ""
    },
    Nv = {
        class: "MyGameRecordList__C-detail-line"
    },
    Iv = {
        key: 1
    },
    zv = {
        class: "MyGameRecordList__C-detail-line"
    },
    xv = {
        key: 1
    },
    Sv = {
        class: "MyGameRecordList__C-detail-line"
    },
    Rv = W({
        __name: "MayrecordList",
        props: {
            mayrecord: {}
        },
        setup(l) {
            const {
                t: i
            } = pt(), o = f(-1), u = c => {
                switch (c) {
                    case "H":
                        return i("k3Big");
                    case "L":
                        return i("k3Small");
                    case "O":
                        return i("k3Odd");
                    case "E":
                        return i("k3Even");
                    default:
                        return c
                }
            }, m = c => {
                o.value == c ? o.value = -1 : o.value = c
            }, g = c => {
                var p, r;
                if (c.gameType == "3") {
                    if (c.selectType == "|AAA|") return "3=";
                    if (c.oneList.length) return c.oneList[0]
                }
                if (c.gameType == "4") return c.selectType == "|ABC|" ? "3≠" : c.threeList.length ? `${c.threeList.join("")}` : `${c.oneList.join("")}`;
                if ((p = c.towList) != null && p.length) return c.towList[0];
                if ((r = c.oneList) != null && r.length) switch (c.oneList[0]) {
                    case "H":
                        return "Big";
                    case "L":
                        return "Small";
                    case "O":
                        return "Odd";
                    case "E":
                        return "Even";
                    default:
                        return c.oneList[0]
                }
            }, d = c => {
                var p, r;
                if ((p = c.towList) != null && p.length) return "num";
                if ((r = c.oneList) != null && r.length) return c.oneList[0].length > 2 ? "num" : c.oneList[0]
            };
            return (c, p) => (n(), a("div", J_, [(n(!0), a(G, null, B(c.mayrecord, (r, _) => (n(), a(G, {
                key: _
            }, [t("div", {
                class: "MyGameRecordList__C-item",
                onClick: se(b => m(_), ["stop", "prevent"])
            }, [t("div", {
                class: M(["MyGameRecordList__C-item-l", ["MyGameRecordList__C-item-l-" + d(r)]])
            }, e(g(r)), 3), t("div", Y_, [t("div", Z_, e(r.issueNumber), 1), t("div", tv, e(r.addTime), 1)]), r.profitAmount ? (n(), a("div", {
                key: 0,
                class: M(["MyGameRecordList__C-item-r", {
                    success: r.state
                }])
            }, [r.profitAmount ? (n(), a("div", {
                key: 0,
                class: M({
                    success: r.state
                })
            }, e(r.state ? c.$t("success") : c.$t("fail")), 3)) : S("", !0), t("span", null, e(`${r.state?"+":"-"}${s(xt)(r.profitAmount)}`), 1)], 2)) : S("", !0)], 8, Q_), _ == o.value ? (n(), a("div", ev, [t("div", iv, e(c.$t("detailMay")), 1), r.orderNumber ? (n(), a("div", nv, [E(e(c.$t("orderNoMay")) + " ", 1), t("div", {
                onClick: b => s(Ue)(r.orderNumber)
            }, [E(e(r.orderNumber) + " ", 1), t("img", {
                src: s(ut)("home/AllLotteryGames/WinGo", "copy")
            }, null, 8, ov)], 8, av)])) : S("", !0), t("div", sv, [E(e(c.$t("issueMay")) + " ", 1), t("div", null, e(r.issueNumber), 1)]), t("div", lv, [E(e(c.$t("amountMay")) + " ", 1), t("div", null, e(s(xt)(r.amount)), 1)]), t("div", cv, [E(e(c.$t("numMay")) + " ", 1), t("div", null, e(r.betCount), 1)]), t("div", rv, [E(e(c.$t("afterTaxAmount")) + " ", 1), t("div", uv, e(s(xt)(r.realAmount)), 1)]), t("div", dv, [E(e(c.$t("tax")) + " ", 1), t("div", null, e(s(xt)(r.fee)), 1)]), t("div", pv, [E(e(c.$t("resultMay")) + " ", 1), r.premium ? (n(), a("div", gv, [(n(!0), a(G, null, B(r.premium, (b, y) => (n(), a("div", {
                key: y,
                class: M(["n" + b])
            }, null, 2))), 128))])) : (n(), a("div", mv, "--"))]), t("div", bv, [E(e(c.$t("selectMay")) + " ", 1), r.gameType == 1 ? (n(), a("div", _v, [r.oneList.length > 0 ? (n(), a(G, {
                key: 0
            }, [t("span", null, e(c.$t("k3RecordDesc1")), 1), (n(!0), a(G, null, B(r.oneList, (b, y) => (n(), a("span", {
                key: y + "1",
                class: "btn"
            }, e(u(b)), 1))), 128))], 64)) : S("", !0)])) : S("", !0), r.gameType == 2 ? (n(), a("div", vv, [r.oneList.length > 0 ? (n(), a(G, {
                key: 0
            }, [t("span", hv, e(c.$t("k3RecordDesc2")), 1), (n(!0), a(G, null, B(r.oneList, (b, y) => (n(), a("span", {
                class: "btn actionViolet",
                key: y + "1"
            }, e(b), 1))), 128))], 64)) : S("", !0), r.towList.length > 0 ? (n(), a(G, {
                key: 1
            }, [t("span", kv, e(c.$t("k3RecordDesc3")), 1), (n(!0), a(G, null, B(r.towList, (b, y) => (n(), a("span", {
                class: "btn actionRedGreen",
                key: y + "1"
            }, e(b), 1))), 128))], 64)) : S("", !0)])) : S("", !0), r.gameType == 3 ? (n(), a("div", fv, [r.oneList.length > 0 ? (n(), a(G, {
                key: 0
            }, [t("span", yv, e(c.$t("k3RecordDesc4")), 1), (n(!0), a(G, null, B(r.oneList, (b, y) => (n(), a("span", {
                class: "btn actionViolet",
                key: y + "1"
            }, e(b), 1))), 128))], 64)) : S("", !0), r.towList ? (n(), a("div", $v, e(c.$t("k3RecordDesc5")), 1)) : S("", !0)])) : S("", !0), r.gameType == 4 ? (n(), a("div", Tv, [r.oneList.length > 0 ? (n(), a(G, {
                key: 0
            }, [t("span", Cv, e(c.$t("k3RecordDesc6")), 1), (n(!0), a(G, null, B(r.oneList, (b, y) => (n(), a("span", {
                class: "actionViolet",
                key: y + "1"
            }, e(b), 1))), 128))], 64)) : S("", !0), r.towList ? (n(), a("div", wv, e(c.$t("k3RecordDesc7")), 1)) : S("", !0), r.threeList.length > 0 ? (n(), a(G, {
                key: 2
            }, [t("span", Lv, e(c.$t("k3RecordDesc8")), 1), (n(!0), a(G, null, B(r.threeList, (b, y) => (n(), a("span", {
                class: "actionViolet",
                key: y + "1"
            }, e(b), 1))), 128))], 64)) : S("", !0)])) : S("", !0)]), t("div", Nv, [E(e(c.$t("statusMay")) + " ", 1), r.state != 2 ? (n(), a("div", {
                key: 0,
                class: M([r.state ? "green" : "red"])
            }, e(r.state ? c.$t("success") : c.$t("fail")), 3)) : (n(), a("div", Iv, e(c.$t("k3RecordDesc9")), 1))]), t("div", zv, [E(e(c.$t("winOrLose")) + " ", 1), r.state != 2 ? (n(), a("div", {
                key: 0,
                class: M([r.state ? "green" : "red"])
            }, e(`${r.state?"+":"-"} ${s(xt)(r.profitAmount)}`), 3)) : (n(), a("div", xv, "--"))]), t("div", Sv, [E(e(c.$t("createTime")) + " ", 1), t("div", null, e(r.addTime), 1)])])) : S("", !0)], 64))), 128))]))
        }
    });
const no = H(Rv, [
        ["__scopeId", "data-v-ae99b594"]
    ]),
    Gv = {
        class: "BettingRecordK3__C"
    },
    Mv = {
        class: "BettingRecordK3__C-nav"
    },
    Bv = {
        class: "BettingRecordK3__C-list"
    },
    Dv = {
        key: 0,
        class: "BettingRecordK3__C-foot"
    },
    Pv = {
        class: "BettingRecordK3__C-foot-page"
    },
    Av = W({
        __name: "index",
        setup(l) {
            const i = gt(),
                o = f(er),
                u = f([]),
                m = f(0),
                g = f(1),
                d = f(4),
                c = T => {
                    p.value = T.name, g.value = 1, r()
                },
                p = f(0),
                r = async () => {
                    const T = await rt(xa({
                            pageSize: 20,
                            pageNo: g.value,
                            typeId: p.value
                        })),
                        C = (T == null ? void 0 : T.data.list) || [];
                    for (let h = 0; C.length > h; h++) {
                        let k = C[h].gameType.split(","),
                            w = C[h].selectType.split(",");
                        for (let L = 0; k.length > L; L++)
                            if (k[L] == "1" || k[L] == "2" || k[L] == "3") C[h].gameType = "1", C[h].oneList = w;
                            else if (k[L] == "5" || k[L] == "6") {
                            let z = [],
                                I = [],
                                x = [];
                            for (let R = 0; w.length > R; R++) {
                                if (w[R] == "|11|" || w[R] == "|22|" || w[R] == "|33|" || w[R] == "|44|" || w[R] == "|55|" || w[R] == "|66|") {
                                    let O = w[R].split("|");
                                    O.pop(), O.shift(), z.push(O.join())
                                }
                                if (w[R] == ":11:" || w[R] == ":22:" || w[R] == ":33:" || w[R] == ":44:" || w[R] == ":55:" || w[R] == ":66:") {
                                    let O = w[R].split(":");
                                    O.pop(), O.shift(), I.push(O.join())
                                }
                                if (w[R] == ":1:" || w[R] == ":2:" || w[R] == ":3:" || w[R] == ":4:" || w[R] == ":5:" || w[R] == ":6:") {
                                    let O = w[R].split(":");
                                    O.pop(), O.shift(), x.push(O.join())
                                }
                            }
                            C[h].gameType = "2", C[h].oneList = z, C[h].towList = !!_(I, x)
                        } else if (k[L] == "7" || k[L] == "8") {
                            let z = [],
                                I = !1;
                            for (let x = 0; w.length > x; x++) {
                                if (w[x] == "|111|" || w[x] == "|222|" || w[x] == "|333|" || w[x] == "|444|" || w[x] == "|555|" || w[x] == "|666|") {
                                    let R = w[x].split("|");
                                    R.pop(), R.shift(), z.push(R.join())
                                }
                                w[x] == "|AAA|" && (I = !0), C[h].oneList = z, C[h].towList = I, C[h].gameType = "3"
                            }
                        } else if (k[L] == "9" || k[L] == "10" || k[L] == "4") {
                            let z = [],
                                I = !1,
                                x = [];
                            for (let R = 0; w.length > R; R++) {
                                if (w[R] == "|1|" || w[R] == "|2|" || w[R] == "|3|" || w[R] == "|4|" || w[R] == "|5|" || w[R] == "|6|") {
                                    let O = w[R].split("|");
                                    O.pop(), O.shift(), z.push(O.join())
                                }
                                if (w[R] == "|ABC|" && (I = !0), w[R] == ".1." || w[R] == ".2." || w[R] == ".3." || w[R] == ".4." || w[R] == ".5." || w[R] == ".6.") {
                                    let O = w[R].split(".");
                                    O.pop(), O.shift(), x.push(O.join())
                                }
                            }
                            C[h].oneList = z, C[h].towList = I, C[h].threeList = x, C[h].gameType = "4"
                        }
                    }
                    u.value = C || [], d.value = (T == null ? void 0 : T.data.totalPage) || 0
                }, _ = (T, C) => {
                    let h = [];
                    for (var k = 0; T.length > k; k++) {
                        let L = T[k],
                            z = [];
                        for (var w = 0; C.length > w; w++) z.push(C[w]);
                        if (z.length > 0) {
                            let I = z.sort().join(",");
                            h.push(L + "|" + I)
                        }
                    }
                    return h.sort()
                }, b = () => {
                    p.value = o.value[0].typeID, r()
                };

            function y() {
                i.go(-1)
            }
            const v = () => {
                    g.value--, r()
                },
                $ = () => {
                    g.value++, r()
                };
            return ht(() => {
                b()
            }), (T, C) => {
                const h = V("van-tab"),
                    k = V("van-tabs"),
                    w = V("van-icon");
                return n(), a("div", Gv, [t("div", {
                    class: "BettingRecordK3__C-head"
                }, [t("div", {
                    class: "BettingRecordK3__C-head-bcak",
                    onClick: y
                }), E(" K3 Lotre ")]), t("div", Mv, [N(k, {
                    active: m.value,
                    "onUpdate:active": C[0] || (C[0] = L => m.value = L),
                    onClickTab: c
                }, {
                    default: D(() => [(n(!0), a(G, null, B(o.value, (L, z) => (n(), Q(h, {
                        key: z,
                        title: L.tabName,
                        name: L.typeID
                    }, null, 8, ["title", "name"]))), 128))]),
                    _: 1
                }, 8, ["active"])]), t("div", Bv, [N(no, {
                    mayrecord: u.value
                }, null, 8, ["mayrecord"])]), u.value.length ? (n(), a("div", Dv, [t("div", {
                    class: M(["BettingRecordK3__C-foot-previous", {
                        disabled: g.value <= 1
                    }]),
                    onClick: v
                }, [N(w, {
                    name: "arrow-left",
                    class: "BettingRecordK3__C-icon",
                    size: "20"
                })], 2), t("div", Pv, e(g.value) + "/" + e(d.value), 1), t("div", {
                    class: M(["BettingRecordK3__C-foot-next", {
                        disabled: g.value >= d.value
                    }]),
                    onClick: $
                }, [N(w, {
                    name: "arrow",
                    class: "BettingRecordK3__C-icon",
                    size: "20"
                })], 2)])) : S("", !0)])
            }
        }
    });
const Ov = H(Av, [
        ["__scopeId", "data-v-0d6ca188"]
    ]),
    FD = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: Ov
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    Wv = {
        class: "MyGameRecordList__C"
    },
    qv = ["onClick"],
    Ev = {
        class: "MyGameRecordList__C-item-m"
    },
    Hv = {
        class: "MyGameRecordList__C-item-m-top"
    },
    Fv = {
        class: "MyGameRecordList__C-item-m-bottom"
    },
    Vv = {
        key: 0,
        class: "MyGameRecordList__C-detail"
    },
    jv = {
        class: "MyGameRecordList__C-detail-text"
    },
    Uv = {
        key: 0,
        class: "MyGameRecordList__C-detail-line"
    },
    Kv = ["onClick"],
    Xv = ["src"],
    Jv = {
        class: "MyGameRecordList__C-detail-line"
    },
    Qv = {
        class: "MyGameRecordList__C-detail-line"
    },
    Yv = {
        class: "MyGameRecordList__C-detail-line"
    },
    Zv = {
        class: "MyGameRecordList__C-detail-line"
    },
    th = {
        class: "red"
    },
    eh = {
        class: "MyGameRecordList__C-detail-line"
    },
    ih = {
        class: "MyGameRecordList__C-detail-line"
    },
    nh = {
        key: 0
    },
    ah = {
        class: "MyGameRecordList__C-inlineB"
    },
    oh = {
        key: 0,
        class: "MyGameRecordList__C-inlineB purpleColor"
    },
    sh = {
        key: 1
    },
    lh = {
        class: "MyGameRecordList__C-detail-line"
    },
    ch = {
        class: "MyGameRecordList__C-detail-line"
    },
    rh = {
        key: 1
    },
    uh = {
        class: "MyGameRecordList__C-detail-line"
    },
    dh = {
        key: 1
    },
    ph = {
        class: "MyGameRecordList__C-detail-line"
    },
    gh = W({
        __name: "MayrecordList",
        props: {
            mayrecord: {}
        },
        setup(l) {
            const {
                t: i
            } = pt(), o = f(-1), u = p => {
                switch (p) {
                    case "big":
                        return "big";
                    case "green":
                    case "red":
                    case "violet":
                        return "";
                    default:
                        return p
                }
            }, m = p => {
                switch (p % 2) {
                    case 1:
                        return i("greenColor");
                    default:
                        return i("redColor")
                }
            }, g = p => {
                switch (p % 2) {
                    case 1:
                        return "greenColor";
                    default:
                        return "redColor"
                }
            }, d = p => {
                switch (p) {
                    case "small":
                        return i("small");
                    case "big":
                        return i("big");
                    case "green":
                        return i("green");
                    case "violet":
                        return i("purpleColor");
                    case "red":
                        return i("redColor");
                    default:
                        return p
                }
            }, c = p => {
                o.value == p ? o.value = -1 : o.value = p
            };
            return (p, r) => (n(), a("div", Wv, [(n(!0), a(G, null, B(p.mayrecord, (_, b) => (n(), a(G, {
                key: b
            }, [t("div", {
                class: "MyGameRecordList__C-item",
                onClick: se(y => c(b), ["stop", "prevent"])
            }, [t("div", {
                class: M(["MyGameRecordList__C-item-l", ["MyGameRecordList__C-item-l-" + _.selectType]])
            }, e(u(_.selectType)), 3), t("div", Ev, [t("div", Hv, e(_.issueNumber), 1), t("div", Fv, e(_.addTime), 1)]), _.profitAmount ? (n(), a("div", {
                key: 0,
                class: M(["MyGameRecordList__C-item-r", {
                    success: _.state
                }])
            }, [_.profitAmount ? (n(), a("div", {
                key: 0,
                class: M({
                    success: _.state
                })
            }, e(_.state ? p.$t("success") : p.$t("fail")), 3)) : S("", !0), t("span", null, e(`${_.state?"+":"-"}${s(xt)(_.profitAmount)}`), 1)], 2)) : S("", !0)], 8, qv), b == o.value ? (n(), a("div", Vv, [t("div", jv, e(p.$t("detailMay")), 1), _.orderNumber ? (n(), a("div", Uv, [E(e(p.$t("orderNoMay")) + " ", 1), t("div", {
                onClick: y => s(Ue)(_.orderNumber)
            }, [E(e(_.orderNumber) + " ", 1), t("img", {
                src: s(ut)("home/AllLotteryGames/WinGo", "copy")
            }, null, 8, Xv)], 8, Kv)])) : S("", !0), t("div", Jv, [E(e(p.$t("issueMay")) + " ", 1), t("div", null, e(_.issueNumber), 1)]), t("div", Qv, [E(e(p.$t("amountMay")) + " ", 1), t("div", null, e(s(xt)(_.amount)), 1)]), t("div", Yv, [E(e(p.$t("numMay")) + " ", 1), t("div", null, e(_.betCount), 1)]), t("div", Zv, [E(e(p.$t("afterTaxAmount")) + " ", 1), t("div", th, e(s(xt)(_.realAmount)), 1)]), t("div", eh, [E(e(p.$t("tax")) + " ", 1), t("div", null, e(s(xt)(_.fee)), 1)]), t("div", ih, [E(e(p.$t("resultMay")) + " ", 1), _.number ? (n(), a("div", nh, [t("div", ah, e(_.number), 1), t("div", {
                class: M(["MyGameRecordList__C-inlineB", [g(Number(_.number))]])
            }, e(m(Number(_.number))), 3), _.number == 0 || _.number == 5 ? (n(), a("div", oh, e(p.$t("purpleColor")), 1)) : S("", !0), t("div", {
                class: M(["MyGameRecordList__C-inlineB", [Number(_.number) > 4 ? "big" : "small"]])
            }, e(Number(_.number) > 4 ? p.$t("big") : p.$t("small")), 3)])) : (n(), a("div", sh, "--"))]), t("div", lh, [E(e(p.$t("selectMay")) + " ", 1), t("div", null, e(d(_.selectType)), 1)]), t("div", ch, [E(e(p.$t("statusMay")) + " ", 1), _.state != 2 ? (n(), a("div", {
                key: 0,
                class: M([_.state ? "green" : "red"])
            }, e(_.state ? p.$t("success") : p.$t("fail")), 3)) : (n(), a("div", rh, e(p.$t("k3RecordDesc9")), 1))]), t("div", uh, [E(e(p.$t("winOrLose")) + " ", 1), _.state != 2 ? (n(), a("div", {
                key: 0,
                class: M([_.state ? "green" : "red"])
            }, e(`${_.state?"+":"-"} ${s(xt)(_.profitAmount)}`), 3)) : (n(), a("div", dh, "--"))]), t("div", ph, [E(e(p.$t("createTime")) + " ", 1), t("div", null, e(_.addTime), 1)])])) : S("", !0)], 64))), 128))]))
        }
    });
const Nn = H(gh, [
        ["__scopeId", "data-v-373b3197"]
    ]),
    mh = {
        class: "BettingRecordWin__C"
    },
    bh = {
        class: "BettingRecordWin__C-nav"
    },
    _h = {
        class: "BettingRecordWin__C-list"
    },
    vh = {
        key: 0,
        class: "BettingRecordWin__C-foot"
    },
    hh = {
        class: "BettingRecordWin__C-foot-page"
    },
    kh = W({
        __name: "index",
        setup(l) {
            const i = gt(),
                o = f(ir),
                u = f([]),
                m = f(0),
                g = f(1),
                d = f(4),
                c = $ => {
                    p.value = $.name, g.value = 1, r()
                },
                p = f(0),
                r = async () => {
                    const [$, T] = await ae(fn({
                        pageSize: 20,
                        pageNo: g.value,
                        typeId: p.value
                    }));
                    u.value = T.list || [], d.value = T.totalPage
                }, _ = () => {
                    p.value = o.value[0].typeID, r()
                };

            function b() {
                i.go(-1)
            }
            const y = () => {
                    g.value--, r()
                },
                v = () => {
                    g.value++, r()
                };
            return ht(() => {
                _()
            }), ($, T) => {
                const C = V("van-tab"),
                    h = V("van-tabs"),
                    k = V("van-icon");
                return n(), a("div", mh, [t("div", {
                    class: "BettingRecordWin__C-head"
                }, [t("div", {
                    class: "BettingRecordWin__C-head-bcak",
                    onClick: b
                }), E(" Win Go ")]), t("div", bh, [N(h, {
                    active: m.value,
                    "onUpdate:active": T[0] || (T[0] = w => m.value = w),
                    onClickTab: c
                }, {
                    default: D(() => [(n(!0), a(G, null, B(o.value, (w, L) => (n(), Q(C, {
                        key: L,
                        title: w.tabName,
                        name: w.typeID
                    }, null, 8, ["title", "name"]))), 128))]),
                    _: 1
                }, 8, ["active"])]), t("div", _h, [N(Nn, {
                    mayrecord: u.value
                }, null, 8, ["mayrecord"])]), u.value.length ? (n(), a("div", vh, [t("div", {
                    class: M(["BettingRecordWin__C-foot-previous", {
                        disabled: g.value <= 1
                    }]),
                    onClick: y
                }, [N(k, {
                    name: "arrow-left",
                    class: "BettingRecordWin__C-icon",
                    size: "20"
                })], 2), t("div", hh, e(g.value) + "/" + e(d.value), 1), t("div", {
                    class: M(["BettingRecordWin__C-foot-next", {
                        disabled: g.value >= d.value
                    }]),
                    onClick: v
                }, [N(k, {
                    name: "arrow",
                    class: "BettingRecordWin__C-icon",
                    size: "20"
                })], 2)])) : S("", !0)])
            }
        }
    });
const fh = H(kh, [
        ["__scopeId", "data-v-4102d7e4"]
    ]),
    VD = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: fh
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    yh = {
        class: "BettingRecordWinTrx__C"
    },
    $h = {
        class: "BettingRecordWinTrx__C-nav"
    },
    Th = {
        class: "BettingRecordWinTrx__C-list"
    },
    Ch = {
        key: 0,
        class: "BettingRecordWinTrx__C-foot"
    },
    wh = {
        class: "BettingRecordWinTrx__C-foot-page"
    },
    Lh = W({
        __name: "index",
        setup(l) {
            const i = gt(),
                o = f(Zc),
                u = f([]),
                m = f(0),
                g = f(1),
                d = f(0),
                c = f(4),
                p = $ => {
                    d.value = $.name, g.value = 1, r()
                },
                r = async () => {
                    const [$, T] = await ae(yn({
                        pageSize: 20,
                        pageNo: g.value,
                        typeId: d.value
                    }));
                    u.value = T.list || [], c.value = T.totalPage
                }, _ = async () => {
                    d.value = o.value[0].typeID, r()
                };

            function b() {
                i.go(-1)
            }
            const y = () => {
                    g.value--, r()
                },
                v = () => {
                    g.value++, r()
                };
            return ht(() => {
                _()
            }), ($, T) => {
                const C = V("van-tab"),
                    h = V("van-tabs"),
                    k = V("van-icon");
                return n(), a("div", yh, [t("div", {
                    class: "BettingRecordWinTrx__C-head"
                }, [t("div", {
                    class: "BettingRecordWinTrx__C-head-bcak",
                    onClick: b
                }), E(" Trx Win Go ")]), t("div", $h, [N(h, {
                    active: m.value,
                    "onUpdate:active": T[0] || (T[0] = w => m.value = w),
                    onClickTab: p
                }, {
                    default: D(() => [(n(!0), a(G, null, B(o.value, (w, L) => (n(), Q(C, {
                        key: L,
                        title: w.tabName,
                        name: w.typeID
                    }, null, 8, ["title", "name"]))), 128))]),
                    _: 1
                }, 8, ["active"])]), t("div", Th, [N(Nn, {
                    mayrecord: u.value
                }, null, 8, ["mayrecord"])]), u.value.length ? (n(), a("div", Ch, [t("div", {
                    class: M(["BettingRecordWinTrx__C-foot-previous", {
                        disabled: g.value <= 1
                    }]),
                    onClick: y
                }, [N(k, {
                    name: "arrow-left",
                    class: "BettingRecordWinTrx__C-icon",
                    size: "20"
                })], 2), t("div", wh, e(g.value) + "/" + e(c.value), 1), t("div", {
                    class: M(["BettingRecordWinTrx__C-foot-next", {
                        disabled: g.value >= c.value
                    }]),
                    onClick: v
                }, [N(k, {
                    name: "arrow",
                    class: "BettingRecordWinTrx__C-icon",
                    size: "20"
                })], 2)])) : S("", !0)])
            }
        }
    });
const Nh = H(Lh, [
        ["__scopeId", "data-v-54c80bcf"]
    ]),
    jD = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: Nh
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    mt = f({
        odds: 1.5,
        money_list: [100, 1e3, 200, 5e3, 1e4],
        bet_money: 0,
        binguoType: 1,
        currentNumber: "20230610858776",
        award_result: "246",
        bet_item: "",
        trend_result: ["6", "7", "8", "9", "10", "12", "13", "14", "15", "16", "17", "18", "5"],
        trend_result2: ["123", "245", "532", "666"],
        currentMoneyIndex: 0,
        bet_number: "",
        beishu: 1,
        beishuList: [1, 5, 10, 20, 50, 100],
        currentBeishuIndex: 0,
        currentBetType: void 0,
        currentPlayId: 0,
        currentSelectType: "",
        currentOdds: "",
        drawIssnum: ""
    }),
    di = f(),
    rn = f(!1),
    pi = f(!1),
    pa = f(!0),
    ga = f(!1),
    Ih = f(!1),
    un = f("00:00"),
    zh = f(!1),
    dn = f(!0),
    {
        t: pn
    } = zi.global,
    gi = f([]),
    Ze = f([{
        value: pn("small"),
        type: 1,
        range: "3-9",
        beishu: "2.0",
        bet_amount: 0,
        key: "Small",
        groupId: 1,
        playId: 0,
        hot: !1
    }, {
        value: pn("binguoHe"),
        type: 2,
        range: "10-11",
        beishu: "3.0",
        bet_amount: 0,
        key: "Drawn",
        groupId: 1,
        playId: 0,
        hot: !1
    }, {
        value: pn("k3Big"),
        type: 3,
        range: "12-18",
        beishu: "5.0",
        bet_amount: 0,
        key: "Big",
        groupId: 1,
        playId: 0,
        hot: !1
    }]),
    mi = f(Array.from({
        length: 16
    }, (l, i) => {
        const o = i + 3;
        return {
            value: o,
            type: o < 10 ? 1 : o > 11 ? 3 : 2,
            beishu: "2.0",
            bet_amount: 0,
            hot: !1,
            groupId: 1,
            playId: 0
        }
    })),
    Ge = f({
        third: {
            amount1: 0,
            amount2: 0
        },
        two: 0,
        one: {
            amount1: 0,
            amount2: 0,
            amount3: 0
        }
    }),
    Ae = f([{
        value: "1",
        amount1: 0,
        amount2: 0,
        amount3: 0,
        hot1: !1,
        hot2: !1,
        hot3: !1
    }, {
        value: "2",
        amount1: 0,
        amount2: 0,
        amount3: 0,
        hot1: !1,
        hot2: !1,
        hot3: !1
    }, {
        value: "3",
        amount1: 0,
        amount2: 0,
        amount3: 0,
        hot1: !1,
        hot2: !1,
        hot3: !1
    }, {
        value: "4",
        amount1: 0,
        amount2: 0,
        amount3: 0,
        hot1: !1,
        hot2: !1,
        hot3: !1
    }, {
        value: "5",
        amount1: 0,
        amount2: 0,
        amount3: 0,
        hot1: !1,
        hot2: !1,
        hot3: !1
    }, {
        value: "6",
        amount1: 0,
        amount2: 0,
        amount3: 0,
        hot1: !1,
        hot2: !1,
        hot3: !1
    }, {
        value: "*",
        amount1: 0,
        amount2: 0,
        amount3: 0,
        hot1: !1,
        hot2: !1,
        hot3: !1
    }]),
    Vi = () => {
        const {
            t: l
        } = pt(), i = f(), o = U(() => [ut("home/AllLotteryGames/binguo", "dice_" + mt.value.award_result.toString()[0]), ut("home/AllLotteryGames/binguo", "dice_" + mt.value.award_result.toString()[1]), ut("home/AllLotteryGames/binguo", "dice_" + mt.value.award_result.toString()[2])]), u = U(() => mt.value.currentBetType === 1 ? "small" : mt.value.currentBetType === 2 ? "and" : "big"), m = async () => {
            const I = await rt(ar());
            I != null && I.data && (mt.value.money_list = I.data.betAmount, mt.value.beishuList = I.data.betMultiplier, mt.value.bet_money = I.data.betAmount[0])
        }, g = async () => {
            const I = await rt(or());
            if (I != null && I.data) {
                gi.value = I == null ? void 0 : I.data;
                let x = I == null ? void 0 : I.data;
                x.filter(P => P.groupId === 1).forEach(P => {
                    Number(P.betType) ? mi.value.forEach(K => {
                        P.betType === K.value + "" && (K.beishu = P.odds, K.playId = P.playId)
                    }) : Ze.value.forEach(K => {
                        K.key === P.betType && (K.beishu = P.odds, K.playId = P.playId)
                    })
                }), x.filter(P => P.groupId !== 1).forEach(P => {
                    P.groupId === 4 && (P.betType === "1" ? Ge.value.third.amount1 = P.odds : Ge.value.third.amount2 = P.odds), P.groupId === 3 && (Ge.value.two = P.odds), P.groupId === 2 && (P.betType === "1" ? Ge.value.one.amount1 = P.odds : P.betType === "2" ? Ge.value.one.amount2 = P.odds : Ge.value.one.amount3 = P.odds)
                })
            }
        }, d = async () => {
            const I = await rt(cr({
                issueNumber: mt.value.currentNumber
            }));
            I != null && I.data && (I.data.forEach(x => {
                switch (Ze.value.forEach(R => {
                        x.playId === R.playId && (R.bet_amount = x.amount)
                    }), mi.value.forEach(R => {
                        x.playId === R.playId && (R.bet_amount = x.amount)
                    }), x.playId) {
                    case 28:
                        Ae.value[Number(x.selectType[0]) - 1].amount1 = x.amount;
                        break;
                    case 29:
                        Ae.value[6].amount1 = x.amount;
                        break;
                    case 27:
                        Ae.value[Number(x.selectType[0]) - 1].amount2 = x.amount;
                        break;
                    case 24:
                        Ae.value[Number(x.selectType[0]) - 1].amount3 = x.amount;
                        break
                }
            }), await c(0), ie(() => {
                I.data.sort((O, P) => P.amount - O.amount).slice(0, 3).forEach(O => {
                    let P = Ze.value.findIndex(X => O.playId === X.playId);
                    P > -1 && (Ze.value[P].hot = !0);
                    let K = mi.value.findIndex(X => O.playId === X.playId);
                    switch (K > -1 && (mi.value[K].hot = !0), O.playId) {
                        case 28:
                            Ae.value[Number(O.selectType[0]) - 1].hot1 = !0;
                            break;
                        case 29:
                            Ae.value[6].hot1 = !0;
                            break;
                        case 27:
                            Ae.value[Number(O.selectType[0]) - 1].hot2 = !0;
                            break;
                        case 24:
                            Ae.value[Number(O.selectType[0]) - 1].hot3 = !0;
                            break
                    }
                })
            }))
        }, c = async I => {
            Ae.value.forEach(x => {
                x.hot1 = !1, x.hot2 = !1, x.hot3 = !1, I === 1 && (x.amount1 = 0, x.amount2 = 0, x.amount3 = 0)
            }), Ze.value.forEach(x => {
                I === 1 && (x.bet_amount = 0), x.hot = !1
            }), mi.value.forEach(x => {
                I === 1 && (x.bet_amount = 0), x.hot = !1
            })
        }, p = async () => {
            const I = await rt(sr());
            I && (I.data ? I.data.startTime && I.data.endTime && (mt.value.currentNumber = I == null ? void 0 : I.data.issueNumber, C(I.data.serviceTime, I.data.endTime, async () => {
                un.value = "10:00", await p(), clearInterval(i.value), setTimeout(() => {
                    r()
                }, 60 * 1e3), c(1)
            })) : dn.value = !1, await d())
        }, r = async () => {
            let I = 1;
            i.value = setInterval(async () => {
                I === 10 ? clearInterval(i.value) : (await _(), await b(), I++)
            }, 1e4)
        }, _ = async () => {
            const I = await rt(lr());
            I && (mt.value.award_result = I == null ? void 0 : I.data.result, mt.value.drawIssnum = I == null ? void 0 : I.data.issueNo)
        }, b = async () => {
            const I = await rt(Za());
            I && (mt.value.trend_result = I == null ? void 0 : I.data.map(x => x.resultSum + "").slice(0, 13).reverse(), mt.value.trend_result2 = I == null ? void 0 : I.data.map(x => x.result + "").slice(0, 4).reverse())
        }, y = I => {
            pi.value = !0, mt.value.bet_number = I.value + "", mt.value.currentBetType = I.type, mt.value.currentPlayId = I.playId, mt.value.currentOdds = I.beishu + ""
        }, v = (I, x) => {
            var R, O, P, K;
            x === 1 ? (mt.value.bet_number = I, mt.value.currentBetType = x, mt.value.currentPlayId = (R = gi.value.find(X => X.betType === "1" && X.groupId === 2)) == null ? void 0 : R.playId, mt.value.currentOdds = Ge.value.one.amount1 + "") : x === 2 ? (mt.value.bet_number = I + "," + I, I.includes("6") ? mt.value.currentBetType = 3 : I.includes("5") ? mt.value.currentBetType = 2 : mt.value.currentBetType = 1, mt.value.currentOdds = Ge.value.two + "", mt.value.currentPlayId = (O = gi.value.find(X => X.betType === "2" && X.groupId === 3)) == null ? void 0 : O.playId) : x === 3 && (mt.value.bet_number = I + "," + I + "," + I, /[123]/.test(I) ? mt.value.currentBetType = 1 : mt.value.currentBetType = 3, I.includes("*") ? (mt.value.currentOdds = Ge.value.third.amount2 + "", mt.value.currentPlayId = (P = gi.value.find(X => X.betType === "2" && X.groupId === 4)) == null ? void 0 : P.playId) : (mt.value.currentOdds = Ge.value.third.amount1 + "", mt.value.currentPlayId = (K = gi.value.find(X => X.betType === "1" && X.groupId === 4)) == null ? void 0 : K.playId)), pi.value = !0
        }, $ = async () => {
            var P;
            if (!dn.value) {
                pi.value = !1, ga.value = !0;
                return
            }
            if (!pa.value) return;
            let I = gi.value.find(K => K.playId === mt.value.currentPlayId),
                x = "";
            (I == null ? void 0 : I.groupId) === 2 || (I == null ? void 0 : I.groupId) === 3 ? x = mt.value.bet_number.split(",")[0] : (I == null ? void 0 : I.groupId) === 4 ? x = mt.value.bet_number.includes("*") ? "***" : mt.value.bet_number.split(",").join("") : x = Number(mt.value.bet_number) ? mt.value.bet_number : (P = Ze.value.find(K => K.value === mt.value.bet_number)) == null ? void 0 : P.key;
            let R = {
                issueNumber: mt.value.currentNumber,
                amount: mt.value.bet_money * mt.value.beishu,
                figure: Number(mt.value.beishu),
                gameType: (I == null ? void 0 : I.groupId) + "",
                selectType: x,
                playId: mt.value.currentPlayId
            };
            (await rt(rr(R))).data && (bn(l("code402")), pi.value = !1, d())
        }, T = (I, x) => {
            let R = new Date(I.replace(/-/g, "/"));
            return new Date(x.replace(/-/g, "/")).getTime() - R.getTime()
        }, C = (I, x, R) => {
            clearInterval(di.value), di.value = void 0;
            let O = T(I, x);
            if (O <= 1e3) throw new Error("时间不正确");
            di.value = setInterval(() => {
                if (O -= 1e3, O <= 1e3) {
                    clearInterval(di.value), R();
                    return
                }
                un.value = Ss(O, "mm:ss")
            }, 1e3)
        }, h = () => rn.value = !rn.value, k = I => {
            I === "add" ? mt.value.beishu = Number(mt.value.beishu) + 1 : mt.value.beishu = Number(mt.value.beishu) - 1
        }, w = () => {
            pi.value = !1, mt.value.currentBeishuIndex = 0, mt.value.currentMoneyIndex = 0
        }, L = () => Li.back(), z = I => I >= 1e6 ? (I / 1e6).toFixed(1).replace(/\.0$/, "") + "M" : I >= 1e3 ? (I / 1e3).toFixed(1).replace(/\.0$/, "") + "K" : I + "";
        return Ot(() => mt.value.currentMoneyIndex, I => {
            mt.value.bet_money = Number(mt.value.money_list[I])
        }, {
            immediate: !0
        }), Ot(() => mt.value.bet_number, () => {
            mt.value.currentMoneyIndex = 0, mt.value.currentBeishuIndex = 0
        }, {
            immediate: !0
        }), Ot(() => mt.value.currentBeishuIndex, I => {
            mt.value.beishu = Number(mt.value.beishuList[I])
        }, {
            immediate: !0
        }), Ke(() => {
            clearInterval(di.value)
        }), {
            store: mt,
            timer: di,
            isShowBetMoney: rn,
            filterNumberSize: u,
            handleToggleShwoMoney: h,
            handleBet: y,
            goBack: L,
            handleStep: k,
            handleCancel: w,
            isSell: dn,
            handleAlike: v,
            getBinguoConfig: m,
            getBinguoOddsList: g,
            getGameBingo18Issue: p,
            countdownTimeFun: C,
            getBingo18LastGameResult: _,
            getBingo18BetAmount: d,
            handleBetSubmit: $,
            getBingo18Last50Result: b,
            formatNum: z,
            checkRule: pa,
            resultImgList: o,
            betSizeList: Ze,
            betNumberList: mi,
            betSheetVisible: pi,
            overVisble: ga,
            alikeList: Ae,
            timeText: un,
            oddObject: Ge,
            playerRuleVisble: Ih,
            betPopTXT: zh
        }
    },
    ao = l => (wt("data-v-ebbda7cb"), l = l(), Lt(), l),
    xh = {
        class: "binguo_info"
    },
    Sh = {
        class: "binguo_award"
    },
    Rh = {
        key: 0,
        class: "main"
    },
    Gh = {
        class: "current_award"
    },
    Mh = {
        class: "tit"
    },
    Bh = {
        class: "current_number"
    },
    Dh = {
        class: "award_time"
    },
    Ph = {
        class: "award_result"
    },
    Ah = {
        class: "tit"
    },
    Oh = {
        class: "award_type"
    },
    Wh = {
        key: 1,
        class: "over_tip"
    },
    qh = {
        class: "trend"
    },
    Eh = {
        key: 0,
        class: "trend_result1"
    },
    Hh = {
        class: "text"
    },
    Fh = {
        class: "result_list"
    },
    Vh = ao(() => t("span", {
        class: "tag animation_tag"
    }, "-", -1)),
    jh = {
        key: 1,
        class: "trend_result2"
    },
    Uh = {
        class: "result_list2"
    },
    Kh = {
        class: "result_list2"
    },
    Xh = {
        class: "animation_tag"
    },
    Jh = ao(() => t("div", {
        id: "time"
    }, null, -1)),
    Qh = W({
        __name: "BinguoInfo",
        setup(l) {
            const {
                store: i,
                resultImgList: o,
                isSell: u,
                timeText: m,
                getGameBingo18Issue: g,
                getBingo18LastGameResult: d,
                getBingo18Last50Result: c
            } = Vi(), p = gt();

            function r(b) {
                let y = 0;
                return i.value.binguoType === 1 ? y = Number(b) : (y = 0, b.split("").forEach(v => {
                    y += Number(v)
                })), y < 10 ? "small" : y === 11 || y === 10 ? "sum" : "big"
            }
            const _ = () => {
                p.push({
                    path: "/home/AllLotteryGames/BinguoCount"
                })
            };
            return g(), d(), c(), (b, y) => {
                const v = V("van-icon");
                return n(), a(G, null, [t("div", xh, [t("div", Sh, [s(u) ? (n(), a("div", Rh, [t("div", Gh, [t("div", Mh, e(b.$t("currentIssNumber")), 1), t("div", Bh, e(s(i).currentNumber), 1)]), t("div", Dh, e(s(m)), 1), t("div", Ph, [t("div", Ah, e(s(i).drawIssnum), 1), t("div", Oh, [t("div", {
                    style: Jt({
                        backgroundImage: `url(${s(o)[0]}) `
                    })
                }, null, 4), s(i).binguoType !== 2 ? (n(), Q(v, {
                    key: 0,
                    name: s(ut)("home/AllLotteryGames/binguo", "add")
                }, null, 8, ["name"])) : S("", !0), t("div", {
                    style: Jt({
                        backgroundImage: `url(${s(o)[1]}) `
                    })
                }, null, 4), s(i).binguoType !== 2 ? (n(), Q(v, {
                    key: 1,
                    name: s(ut)("home/AllLotteryGames/binguo", "add")
                }, null, 8, ["name"])) : S("", !0), t("div", {
                    style: Jt({
                        backgroundImage: `url(${s(o)[2]})`
                    })
                }, null, 4)])])])) : (n(), a("div", Wh, e(b.$t("playerEnd")), 1))]), t("div", qh, [s(i).binguoType === 1 ? (n(), a("div", Eh, [t("div", Hh, e(b.$t("result")), 1), t("div", Fh, [(n(!0), a(G, null, B(s(i).trend_result, $ => (n(), a("span", {
                    class: M(["tag", `${r($)}_tag`])
                }, e($), 3))), 256)), Vh])])) : (n(), a("div", jh, [(n(!0), a(G, null, B(s(i).trend_result2, $ => (n(), a("div", Uh, [(n(!0), a(G, null, B($, T => (n(), a("span", {
                    class: M(`${r($)}_tag`)
                }, e(T), 3))), 256))]))), 256)), t("div", Kh, [(n(), a(G, null, B(3, () => t("span", Xh)), 64))])])), t("div", {
                    class: "trend_img",
                    onClick: y[0] || (y[0] = $ => _())
                })])]), Jh], 64)
            }
        }
    });
const Yh = H(Qh, [
        ["__scopeId", "data-v-ebbda7cb"]
    ]),
    Zh = l => (wt("data-v-c361e07d"), l = l(), Lt(), l),
    t1 = {
        class: "main_desk"
    },
    e1 = {
        key: 0,
        class: "rule_tip"
    },
    i1 = {
        class: "bet_size"
    },
    n1 = ["onClick"],
    a1 = {
        class: "head"
    },
    o1 = {
        class: "range"
    },
    s1 = {
        key: 0,
        class: "hot"
    },
    l1 = ["onClick"],
    c1 = {
        key: 1,
        class: "alike_box"
    },
    r1 = {
        class: "rule_tip"
    },
    u1 = {
        class: "alike"
    },
    d1 = ["onClick"],
    p1 = {
        class: "amount"
    },
    g1 = {
        class: "third_list"
    },
    m1 = {
        class: "ball"
    },
    b1 = {
        class: "ball2"
    },
    _1 = {
        key: 0,
        class: "ball_hot2"
    },
    v1 = {
        class: "rule_tip"
    },
    h1 = {
        class: "alike two_alike"
    },
    k1 = ["onClick"],
    f1 = {
        class: "amount"
    },
    y1 = {
        class: "third_list"
    },
    $1 = {
        class: "ball"
    },
    T1 = {
        class: "ball2"
    },
    C1 = {
        key: 0,
        class: "ball_hot2"
    },
    w1 = {
        class: "rule_tip"
    },
    L1 = {
        class: "alike one_alike"
    },
    N1 = ["onClick"],
    I1 = {
        class: "amount"
    },
    z1 = Zh(() => t("div", {
        class: "ball_hot"
    }, null, -1)),
    x1 = {
        class: "third_list"
    },
    S1 = {
        class: "ball"
    },
    R1 = {
        class: "ball2"
    },
    G1 = {
        key: 0,
        class: "ball_hot2"
    },
    M1 = {
        class: "rule_tip_header"
    },
    B1 = ["src"],
    D1 = {
        class: "rule_tip_dialog"
    },
    P1 = {
        class: "rule_tip_tit"
    },
    A1 = {
        class: "rule_tip_text"
    },
    O1 = W({
        __name: "BinguoMainDesk",
        setup(l) {
            const {
                t: i
            } = pt(), {
                betSizeList: o,
                betNumberList: u,
                isShowBetMoney: m,
                handleBet: g,
                store: d,
                alikeList: c,
                handleAlike: p,
                oddObject: r,
                formatNum: _
            } = Vi(), b = {
                sum: {
                    dice: "1,3,6",
                    tip1: i("result"),
                    tip2: i("binguoRuleTipText1")
                },
                third: {
                    dice: "6,6,6",
                    tip1: i("numbersMatch"),
                    tip2: i("binguoRuleTipText2")
                },
                two: {
                    dice: "6,6",
                    tip1: i("sameNum"),
                    tip2: i("binguoRuleTipText3")
                },
                one: {
                    dice: "1,2,3,5,4,6",
                    tip1: i("same"),
                    tip2: i("binguoRuleTipText4")
                }
            }, y = f(!1), v = f(), $ = () => {
                const T = document.querySelectorAll(".rule_tip");
                for (let C = 0; C < T.length; C++) T[C].addEventListener("click", () => {
                    y.value = !0, C === 0 && (v.value = b.sum), C === 1 && (v.value = b.third), C === 2 && (v.value = b.two), C === 3 && (v.value = b.one)
                })
            };
            return Ot(() => d.value.binguoType, T => {
                T === 2 && ie(() => {
                    $()
                })
            }, {
                deep: !0,
                immediate: !0
            }), (T, C) => (n(), a("div", t1, [s(d).binguoType === 2 ? (n(), a("div", e1, e(T.$t("xosoTxt60")), 1)) : S("", !0), t("div", i1, [(n(!0), a(G, null, B(s(o), h => (n(), a("div", {
                class: "size_item",
                onClick: se(k => s(g)(h), ["stop"])
            }, [t("div", a1, [t("span", null, e(s(m) && h.bet_amount ? s(_)(h.bet_amount) : ""), 1), t("span", null, e(h.beishu + "x" || ""), 1)]), t("div", {
                class: M(`value value_${h.type}`)
            }, e(h.value), 3), t("div", o1, e(h.range), 1), h.hot && s(m) ? (n(), a("div", s1)) : S("", !0)], 8, n1))), 256))]), t("div", {
                class: M(["bet_number", {
                    betAll: s(d).binguoType === 2
                }])
            }, [(n(!0), a(G, null, B(s(u), h => (n(), a("div", {
                key: h.value,
                class: "item",
                onClick: k => s(g)(h)
            }, [t("div", null, e(s(m) && h.bet_amount ? s(_)(h.bet_amount) : ""), 1), t("div", null, e(h.value), 1), t("div", null, e(h.beishu) + "X", 1), h.hot && s(m) ? (n(), a("div", {
                key: 0,
                class: M(["hot", {
                    hot2: s(d).binguoType === 2
                }])
            }, null, 2)) : S("", !0)], 8, l1))), 128))], 2), s(d).binguoType === 2 ? (n(), a("div", c1, [t("div", r1, e(T.$t("trendTXT4")) + " " + e(T.$t("odds")) + e(s(r).third.amount1) + "x " + e(T.$t("k3bet3Desc4")) + " " + e(T.$t("odds")) + e(s(r).third.amount2) + "x ", 1), t("div", u1, [(n(!0), a(G, null, B(s(c), h => (n(), a("div", {
                class: "alike_item",
                onClick: k => s(p)(h.value, 3)
            }, [t("div", p1, e(s(m) && h.amount1 ? s(_)(h.amount1) : ""), 1), t("div", g1, [(n(), a(G, null, B(3, () => t("div", m1, [t("span", b1, e(h.value), 1), h.hot1 ? (n(), a("span", _1)) : S("", !0)])), 64))])], 8, d1))), 256))]), t("div", v1, e(T.$t("trendTXT3") + T.$t("odds")) + " " + e(s(r).two) + "x", 1), t("div", h1, [(n(!0), a(G, null, B(s(c).slice(0, 6), h => (n(), a("div", {
                class: "alike_item",
                onClick: k => s(p)(h.value, 2)
            }, [t("div", f1, e(s(m) && h.amount2 ? s(_)(h.amount2) : ""), 1), t("div", y1, [(n(), a(G, null, B(2, () => t("div", $1, [t("span", T1, e(h.value), 1), h.hot2 ? (n(), a("span", C1)) : S("", !0)])), 64))])], 8, k1))), 256))]), t("div", w1, e(T.$t("binguoRuleTip1")) + e(s(r).one.amount1) + "x " + e(T.$t("binguoRuleTip2")) + e(s(r).one.amount2) + "x " + e(T.$t("binguoRuleTip3")) + " " + e(s(r).one.amount3) + "x ", 1), t("div", L1, [(n(!0), a(G, null, B(s(c).slice(0, 6), h => (n(), a("div", {
                class: "alike_item",
                onClick: k => s(p)(h.value, 1)
            }, [t("div", I1, e(s(m) && h.amount3 ? s(_)(h.amount3) : ""), 1), z1, t("div", x1, [t("span", S1, [t("span", R1, e(h.value), 1), h.hot3 ? (n(), a("span", G1)) : S("", !0)])])], 8, N1))), 256))])])) : S("", !0), N(Me, {
                show: y.value,
                "onUpdate:show": C[0] || (C[0] = h => y.value = h),
                showCloseIcon: !0,
                clickOutSide: !0,
                "show-cancel-btn": !1,
                showFooter: !1,
                isShowHeader: !1
            }, {
                title: D(() => {
                    var h;
                    return [t("div", M1, [(n(!0), a(G, null, B((h = v.value) == null ? void 0 : h.dice.split(","), k => (n(), a("img", {
                        src: s(ut)("home/AllLotteryGames/binguo", `rule_dice_${k}`),
                        alt: ""
                    }, null, 8, B1))), 256))])]
                }),
                content: D(() => {
                    var h, k;
                    return [t("div", D1, [t("div", P1, e((h = v.value) == null ? void 0 : h.tip1), 1), t("div", A1, e((k = v.value) == null ? void 0 : k.tip2), 1)])]
                }),
                footer: D(() => []),
                _: 1
            }, 8, ["show"])]))
        }
    });
const W1 = H(O1, [
        ["__scopeId", "data-v-c361e07d"]
    ]),
    q1 = {
        class: "bet_content"
    },
    E1 = {
        class: "bet_tit"
    },
    H1 = {
        class: "bet_cnt"
    },
    F1 = {
        class: "bet_item"
    },
    V1 = {
        class: "bet_item_tit"
    },
    j1 = {
        class: "bet_money_list"
    },
    U1 = ["onClick"],
    K1 = {
        class: "bet_item"
    },
    X1 = {
        class: "bet_item_tit"
    },
    J1 = {
        class: "bet_step"
    },
    Q1 = {
        class: "bet_money_list bet_beishu"
    },
    Y1 = ["onClick"],
    Z1 = {
        class: "bet_info"
    },
    tk = {
        class: "tit"
    },
    ek = {
        class: "pl",
        style: {
            color: "#fff"
        }
    },
    ik = {
        class: "bet_info"
    },
    nk = {
        class: "tit"
    },
    ak = {
        class: "pl",
        style: {
            color: "#cee98c"
        }
    },
    ok = {
        class: "bet_info"
    },
    sk = {
        class: "tit"
    },
    lk = {
        class: "pl",
        style: {
            color: "#f9bc36"
        }
    },
    ck = {
        key: 0,
        class: "recharge_tip"
    },
    rk = {
        class: "apply"
    },
    uk = {
        class: "bet_btn_group"
    },
    dk = W({
        __name: "BinguoBetSheet",
        setup(l) {
            const {
                betSheetVisible: i,
                store: o,
                betPopTXT: u,
                filterNumberSize: m,
                handleStep: g,
                checkRule: d,
                handleCancel: c,
                handleBetSubmit: p
            } = Vi(), _ = le().getUserInfo, b = gt(), y = () => {
                b.push("/wallet/recharge")
            };
            return (v, $) => {
                const T = V("van-field"),
                    C = V("van-icon"),
                    h = V("van-checkbox"),
                    k = V("van-action-sheet");
                return n(), Q(k, {
                    show: s(i),
                    "onUpdate:show": $[8] || ($[8] = w => oe(i) ? i.value = w : null),
                    closeable: !1
                }, {
                    default: D(() => [t("div", q1, [t("div", E1, e(v.$t("betting")), 1), t("div", H1, [(n(!0), a(G, null, B(s(o).bet_number.split(","), w => (n(), a("span", {
                        class: M(`${s(m)}`)
                    }, e(w), 3))), 256))]), t("div", F1, [t("div", V1, e(v.$t("amount")), 1), t("div", j1, [(n(!0), a(G, null, B(s(o).money_list, (w, L) => (n(), a("div", {
                        class: M(["money_item", {
                            monyActive: s(o).currentMoneyIndex === L
                        }]),
                        onClick: z => s(o).currentMoneyIndex = L
                    }, e(w), 11, U1))), 256))])]), t("div", K1, [t("div", X1, [t("span", null, e(v.$t("multiple")), 1), t("div", J1, [t("span", {
                        onClick: $[0] || ($[0] = w => s(g)("sub"))
                    }, "-"), N(T, {
                        modelValue: s(o).beishu,
                        "onUpdate:modelValue": $[1] || ($[1] = w => s(o).beishu = w),
                        "input-align": "center",
                        onInput: $[2] || ($[2] = w => {
                            if (9999 < Number(w.target.value)) {
                                s(o).beishu = 9999;
                                return
                            }
                            if (Number(w.target.value) < 1) {
                                s(o).beishu = 0;
                                return
                            }
                            s(o).beishu = Number(w.target.value)
                        }),
                        type: "digit",
                        class: "bet_beishu_input"
                    }, null, 8, ["modelValue"]), t("span", {
                        onClick: $[3] || ($[3] = w => s(g)("add"))
                    }, "+")])]), t("div", Q1, [(n(!0), a(G, null, B(s(o).beishuList, (w, L) => (n(), a("div", {
                        class: M(["money_item", {
                            monyActive: s(o).currentBeishuIndex === L
                        }]),
                        onClick: z => s(o).currentBeishuIndex = L
                    }, " X" + e(w), 11, Y1))), 256))])]), t("div", Z1, [t("div", tk, e(v.$t("odds")), 1), t("div", ek, e(s(o).currentOdds), 1)]), t("div", ik, [t("div", nk, e(v.$t("walletBalance")), 1), t("div", ak, e(s(_).amount), 1)]), t("div", ok, [t("div", sk, e(v.$t("betAmounts")), 1), t("div", lk, e(s(o).bet_money * s(o).beishu), 1)]), s(_).amount < s(o).bet_money * s(o).beishu ? (n(), a("div", ck, [t("div", null, [N(C, {
                        name: "warning-o",
                        size: "18"
                    }), E(" " + e(v.$t("walletTip")), 1)]), t("span", {
                        onClick: y
                    }, e(v.$t("goRecharge")) + " >>", 1)])) : S("", !0), N(h, {
                        modelValue: s(d),
                        "onUpdate:modelValue": $[5] || ($[5] = w => oe(d) ? d.value = w : null),
                        "checked-color": "#CEE98C",
                        "label-disabled": "",
                        "icon-size": "24px"
                    }, {
                        default: D(() => [t("span", rk, e(v.$t("agree")), 1), t("span", {
                            class: "rule",
                            onClick: $[4] || ($[4] = () => {
                                i.value = !1, u.value = !0
                            })
                        }, e(v.$t("presaleRules")), 1)]),
                        _: 1
                    }, 8, ["modelValue"]), t("div", uk, [t("div", {
                        class: "cancel_btn",
                        onClick: $[6] || ($[6] = (...w) => s(c) && s(c)(...w))
                    }, e(v.$t("cancel")), 1), t("div", {
                        class: M(["bet_btn", {
                            inconformity: s(_).amount < s(o).bet_money * s(o).beishu || !s(d) || s(o).bet_money * s(o).beishu === 0
                        }]),
                        onClick: $[7] || ($[7] = (...w) => s(p) && s(p)(...w))
                    }, e(v.$t("betting")), 3)])])]),
                    _: 1
                }, 8, ["show"])
            }
        }
    });
const pk = H(dk, [
    ["__scopeId", "data-v-999f9938"]
]);
const gk = {},
    In = l => (wt("data-v-65bb586b"), l = l(), Lt(), l),
    mk = {
        class: "container"
    },
    bk = {
        class: "first-paragraph"
    },
    _k = {
        class: "first-statement"
    },
    vk = {
        class: "paragraph-two"
    },
    hk = {
        class: "paragraph-two-statement"
    },
    kk = {
        class: "paragraph-three"
    },
    fk = {
        class: "paragraph-three-statement"
    },
    yk = {
        class: "svg-container"
    },
    $k = _n('<div class="first-vector" data-v-65bb586b><svg xmlns="http://www.w3.org/2000/svg" width="132" height="14" viewBox="0 0 132 14" fill="none" data-v-65bb586b><path fill-rule="evenodd" clip-rule="evenodd" d="M0 6.99997C-2.41411e-08 6.72383 0.223857 6.49997 0.499999 6.49997L119.5 6.49996C119.776 6.49996 120 6.72382 120 6.99996C120 7.27611 119.776 7.49996 119.5 7.49996L0.5 7.49997C0.223858 7.49997 2.41411e-08 7.27612 0 6.99997Z" fill="url(#paint0_linear_22_2052)" data-v-65bb586b></path><path d="M119.515 8.41418C118.734 7.63313 118.734 6.3668 119.515 5.58575L123.757 1.34311C124.538 0.562062 125.805 0.562062 126.586 1.34311L130.828 5.58575C131.609 6.3668 131.609 7.63313 130.828 8.41418L126.586 12.6568C125.805 13.4379 124.538 13.4379 123.757 12.6568L119.515 8.41418Z" fill="url(#paint1_linear_22_2052)" data-v-65bb586b></path><defs data-v-65bb586b><linearGradient id="paint0_linear_22_2052" x1="126" y1="7.00003" x2="-4.8188e-08" y2="7.00003" gradientUnits="userSpaceOnUse" data-v-65bb586b><stop stop-color="#5DBA47" data-v-65bb586b></stop><stop offset="1" stop-color="#5DBA47" stop-opacity="0" data-v-65bb586b></stop></linearGradient><linearGradient id="paint1_linear_22_2052" x1="126" y1="7.00003" x2="-4.8188e-08" y2="7.00003" gradientUnits="userSpaceOnUse" data-v-65bb586b><stop stop-color="#5DBA47" data-v-65bb586b></stop><stop offset="1" stop-color="#5DBA47" stop-opacity="0" data-v-65bb586b></stop></linearGradient></defs></svg></div>', 1),
    Tk = {
        class: "vector-heading"
    },
    Ck = _n('<div class="vector-two" data-v-65bb586b><svg xmlns="http://www.w3.org/2000/svg" width="132" height="14" viewBox="0 0 132 14" fill="none" data-v-65bb586b><path fill-rule="evenodd" clip-rule="evenodd" d="M132 6.99997C132 6.72383 131.776 6.49997 131.5 6.49997L12.5 6.49996C12.2239 6.49996 12 6.72382 12 6.99996C12 7.27611 12.2239 7.49996 12.5 7.49996L131.5 7.49997C131.776 7.49997 132 7.27612 132 6.99997Z" fill="url(#paint0_linear_22_2053)" data-v-65bb586b></path><path d="M12.4853 8.41418C13.2664 7.63313 13.2664 6.3668 12.4853 5.58575L8.24268 1.34311C7.46163 0.562062 6.1953 0.562062 5.41425 1.34311L1.17162 5.58575C0.390564 6.3668 0.390564 7.63313 1.17162 8.41418L5.41425 12.6568C6.1953 13.4379 7.46163 13.4379 8.24268 12.6568L12.4853 8.41418Z" fill="url(#paint1_linear_22_2053)" data-v-65bb586b></path><defs data-v-65bb586b><linearGradient id="paint0_linear_22_2053" x1="6.00001" y1="7.00003" x2="132" y2="7.00003" gradientUnits="userSpaceOnUse" data-v-65bb586b><stop stop-color="#5DBA47" data-v-65bb586b></stop><stop offset="1" stop-color="#5DBA47" stop-opacity="0" data-v-65bb586b></stop></linearGradient><linearGradient id="paint1_linear_22_2053" x1="6.00001" y1="7.00003" x2="132" y2="7.00003" gradientUnits="userSpaceOnUse" data-v-65bb586b><stop stop-color="#5DBA47" data-v-65bb586b></stop><stop offset="1" stop-color="#5DBA47" stop-opacity="0" data-v-65bb586b></stop></linearGradient></defs></svg></div>', 1),
    wk = {
        class: "details-container-one"
    },
    Lk = {
        class: "details-container-items"
    },
    Nk = {
        class: "first-heading"
    },
    Ik = {
        class: "fontBold"
    },
    zk = {
        class: "paragraph-inside-container"
    },
    xk = {
        class: "paragraph-title"
    },
    Sk = {
        class: "paragraph-inside-container"
    },
    Rk = {
        class: "paragraph-title"
    },
    Gk = {
        class: "paragraph-inside-container"
    },
    Mk = {
        class: "paragraph-title"
    },
    Bk = {
        class: "paragraph-inside-container"
    },
    Dk = {
        class: "paragraph-title"
    },
    Pk = {
        class: "details-container-one"
    },
    Ak = {
        class: "details-container-items"
    },
    Ok = {
        class: "first-heading"
    },
    Wk = In(() => t("span", {
        class: "fontBold"
    }, "1,2,3,4,5,6", -1)),
    qk = {
        class: "paragraph-inside-container"
    },
    Ek = {
        class: "paragraph-title"
    },
    Hk = {
        class: "details-container-one"
    },
    Fk = {
        class: "details-container-items"
    },
    Vk = {
        class: "first-heading"
    },
    jk = In(() => t("span", {
        class: "fontBold"
    }, "11,22...66", -1)),
    Uk = {
        class: "paragraph-inside-container"
    },
    Kk = {
        class: "paragraph-title"
    },
    Xk = {
        class: "details-container-one"
    },
    Jk = {
        class: "details-container-items"
    },
    Qk = {
        class: "first-heading"
    },
    Yk = In(() => t("span", {
        class: "fontBold"
    }, "111,222...666,***", -1)),
    Zk = {
        class: "paragraph-inside-container"
    },
    tf = {
        class: "paragraph-title"
    },
    ef = {
        class: "paragraph-inside-container"
    },
    nf = {
        class: "paragraph-title"
    };

function af(l, i) {
    return n(), a("div", mk, [t("div", bk, [t("p", _k, e(l.$t("binguoRuleText1")), 1)]), t("div", vk, [t("p", hk, e(l.$t("binguoRuleText2")), 1)]), t("div", kk, [t("p", fk, e(l.$t("binguoRuleText3")), 1)]), t("div", yk, [$k, t("div", Tk, e(l.$t("gamePlay")), 1), Ck]), t("div", wk, [t("div", Lk, e(l.$t("xosoTxt60")), 1), t("div", Nk, [E(e(l.$t("binguoRuleText4")) + " ", 1), t("span", Ik, e(l.$t("binguoRuleText5")), 1), E(e(l.$t("binguoRuleText6")), 1)]), t("div", zk, [t("div", xk, [t("span", null, e(l.$t("binguoRuleText7")) + ":", 1), E(e(l.$t("binguoRuleText8")), 1)])]), t("div", Sk, [t("div", Rk, [t("span", null, e(l.$t("binguoRuleText9")) + ":", 1), E(e(l.$t("binguoRuleText10")), 1)])]), t("div", Gk, [t("div", Mk, [t("span", null, e(l.$t("binguoRuleText17")) + ":", 1), E(e(l.$t("binguoRuleText18")), 1)])]), t("div", Bk, [t("div", Dk, [t("span", null, e(l.$t("binguoRuleText11")) + ",", 1), E(e(l.$t("binguoRuleText12")), 1)])])]), t("div", Pk, [t("div", Ak, e(l.$t("same")), 1), t("div", Ok, [E(e(l.$t("binguoRuleText4")) + " ", 1), Wk]), t("div", qk, [t("div", Ek, e(l.$t("binguoRuleText13")), 1)])]), t("div", Hk, [t("div", Fk, e(l.$t("sameNum")), 1), t("div", Vk, [E(e(l.$t("binguoRuleText4")), 1), jk]), t("div", Uk, [t("div", Kk, e(l.$t("binguoRuleText14")), 1)])]), t("div", Xk, [t("div", Jk, e(l.$t("numbersMatch")), 1), t("div", Qk, [E(e(l.$t("binguoRuleText4")), 1), Yk]), t("div", Zk, [t("div", tf, e(l.$t("binguoRuleText15")), 1)]), t("div", ef, [t("div", nf, e(l.$t("binguoRuleText16")), 1)])])])
}
const of = H(gk, [
    ["render", af],
    ["__scopeId", "data-v-65bb586b"]
]), sf = l => (wt("data-v-e2b24d31"), l = l(), Lt(), l), lf = {
    class: "binguo_container"
}, cf = sf(() => t("span", {
    class: "nav_title"
}, "BINGO18", -1)), rf = {
    class: "nav_right"
}, uf = {
    class: "binguo_btn_group"
}, df = ["src"], pf = {
    class: "over_dialog_tip"
}, gf = {
    class: "playerRule"
}, mf = {
    class: "playerRule"
}, bf = {
    style: {
        color: "#fff"
    }
}, _f = W({
    __name: "index",
    setup(l) {
        const {
            goBack: i,
            betPopTXT: o,
            isShowBetMoney: u,
            handleToggleShwoMoney: m,
            store: g,
            overVisble: d,
            getBinguoConfig: c,
            getBinguoOddsList: p,
            playerRuleVisble: r
        } = Vi(), _ = gt(), b = () => {
            _.push({
                path: "/home/AllLotteryGames/BinguoRecord"
            })
        };
        return ht(() => {
            c(), p()
        }), (y, v) => {
            const $ = V("van-icon"),
                T = V("NavBar");
            return n(), a("div", lf, [N(T, {
                "left-arrow": "",
                onClickLeft: s(i),
                backgroundColor: "#0a4529"
            }, {
                left: D(() => [N($, {
                    name: "arrow-left",
                    size: 24
                }), cf]),
                right: D(() => [t("div", rf, [t("div", {
                    onClick: v[0] || (v[0] = se(() => r.value = !0, ["stop"])),
                    class: "binguo_explain"
                }), t("div", {
                    class: M(["binguo_money", s(u) ? "binguo_money_look" : "binguo_money_hidden"]),
                    onClick: v[1] || (v[1] = se(() => s(m)(), ["stop"]))
                }, null, 2), t("div", {
                    onClick: v[2] || (v[2] = se(() => b(), ["stop"])),
                    class: "binguo_count1"
                })])]),
                _: 1
            }, 8, ["onClickLeft"]), t("div", uf, [t("div", {
                class: M(["btn_1", {
                    active_btn: s(g).binguoType === 1
                }]),
                onClick: v[3] || (v[3] = C => s(g).binguoType = 1)
            }, e(y.$t("binguoDesk1")), 3), t("div", {
                class: M(["btn_2", {
                    active_btn: s(g).binguoType === 2
                }]),
                onClick: v[4] || (v[4] = C => s(g).binguoType = 2)
            }, e(y.$t("binguoDesk2")), 3)]), N(Yh), N(W1), N(pk), N(Me, {
                show: s(d),
                onConfirm: v[5] || (v[5] = C => d.value = !1),
                "show-cancel-btn": !1,
                confirmText: y.$t("confirm")
            }, {
                header: D(() => [t("img", {
                    src: s(ut)("home/AllLotteryGames/binguo", "binguo_tip"),
                    alt: "",
                    class: "binguo_tip"
                }, null, 8, df)]),
                content: D(() => [t("div", pf, e(y.$t("over_dialog_tip")), 1)]),
                _: 1
            }, 8, ["show", "confirmText"]), N(Me, {
                class: "rule_dialog",
                show: s(r),
                onConfirm: v[6] || (v[6] = C => r.value = !1),
                "show-cancel-btn": !1,
                isShowHeader: !1,
                confirmText: y.$t("iKonw")
            }, {
                title: D(() => [t("div", null, e(y.$t("binguo_playerRule")), 1)]),
                content: D(() => [t("div", gf, [N(of)])]),
                _: 1
            }, 8, ["show", "confirmText"]), N(Me, {
                class: "rule_dialog",
                show: s(o),
                onConfirm: v[7] || (v[7] = C => o.value = !1),
                "show-cancel-btn": !1,
                isShowHeader: !1,
                confirmText: y.$t("iKonw")
            }, {
                title: D(() => [t("div", null, e(y.$t("presaleRules")), 1)]),
                content: D(() => [t("div", mf, [t("div", bf, e(y.$t("betPopTXT")), 1)])]),
                _: 1
            }, 8, ["show", "confirmText"])])
        }
    }
});
const vf = H(_f, [
        ["__scopeId", "data-v-e2b24d31"]
    ]),
    UD = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: vf
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    hf = {
        class: "binguo_count_tab"
    },
    kf = ["onClick"],
    ff = W({
        __name: "BinguoTab",
        setup(l) {
            const {
                store: i
            } = ai(), {
                t: o
            } = pt(), u = [{
                lable: o("betting"),
                value: 1
            }, {
                lable: o("detail"),
                value: 2
            }, {
                lable: o("thisWeek"),
                value: 3
            }, {
                lable: o("binguoLeaderboard"),
                value: 4
            }];
            return (m, g) => (n(), a("div", hf, [(n(), a(G, null, B(u, (d, c) => t("div", {
                class: M(["item", {
                    active: s(i).currentTabIndex === c
                }]),
                key: d.value,
                onClick: p => s(i).currentTabIndex = c
            }, e(d.lable), 11, kf)), 64))]))
        }
    });
const yf = H(ff, [
        ["__scopeId", "data-v-0f91ea76"]
    ]),
    $f = l => (wt("data-v-c375424d"), l = l(), Lt(), l),
    Tf = {
        class: "t-table_border"
    },
    Cf = {
        class: "t-table_th_round"
    },
    wf = {
        class: "tab_header"
    },
    Lf = {
        key: 0,
        class: "tab_default_cell"
    },
    Nf = {
        class: "tab_default_cell"
    },
    If = {
        key: 0
    },
    zf = {
        key: 0
    },
    xf = ["colspan"],
    Sf = $f(() => t("div", {
        style: {
            color: "#666",
            "font-size": "14px",
            padding: "6px",
            "text-align": "center"
        }
    }, "暂无数据", -1)),
    Rf = W({
        __name: "index",
        props: {
            dataSource: {},
            columnOptions: {},
            headerClass: {},
            bodyClass: {},
            isLockHeader: {
                type: Boolean
            },
            border: {
                type: Boolean,
                default: !0
            },
            scroll: {
                type: Boolean,
                default: !0
            },
            borderColor: {
                default: "#0B462A"
            },
            hBgColor: {
                default: "linear-gradient(180deg, #0A603E 0%, #168055 100%)"
            },
            hColor: {
                default: "#F9BC36"
            },
            align: {
                default: "center"
            },
            rowHeight: {
                default: "auto"
            },
            rowBgColor: {
                default: "#09613E"
            },
            tabWidth: {
                default: "100%"
            },
            tabHeight: {
                default: "600px"
            }
        },
        setup(l) {
            const i = l;
            vn(r => ({
                "70334ce3": r.tabWidth,
                "7c6755aa": r.tabHeight,
                "5911c82f": s(d),
                f4262ada: s(m),
                e5d07fd4: s(u),
                "41635e0d": r.hColor,
                31354248: s(g)
            }));
            const o = f([]),
                {
                    rowBgColor: u,
                    align: m,
                    hBgColor: g,
                    rowHeight: d
                } = i,
                c = () => {
                    o.value = JSON.parse(JSON.stringify(i.dataSource))
                },
                p = () => {
                    i.columnOptions.forEach((r, _) => {
                        if (r.isLockColumn) {
                            let b = document.querySelector(`.th_${r.key}_${_}`),
                                y = document.querySelectorAll(`.td_${r.key}`);
                            b.style.position = "sticky", b.style.top = "-2px", b.style.left = "0", b.style.zIndex = "11", y.forEach(v => {
                                v.style.position = "sticky", v.style.left = "0", v.style.zIndex = "10"
                            })
                        }
                    })
                };
            return ht(() => {
                p()
            }), Ot(() => i.dataSource, (r, _) => {
                r !== _ && (c(), p())
            }, {
                deep: !0
            }), (r, _) => (n(), a("div", {
                class: "cuTable",
                style: Jt({
                    ...r.scroll && {
                        overflowX: "auto"
                    },
                    ...!r.scroll && {
                        overflow: "hidden"
                    }
                })
            }, [t("div", Tf, [t("table", Cf, [t("tr", wf, [(n(!0), a(G, null, B(r.columnOptions, (b, y) => (n(), a("th", {
                style: Jt({
                    width: b.width || 100 / r.columnOptions.length + "%"
                }),
                key: y + "p",
                class: M(`th_${b.key}_${y} default_header_cell ${r.border?"":"noBorder"}`)
            }, [b.isSlotHeader ? $e(r.$slots, b.key + "_head", {
                key: 1,
                item: b
            }, void 0, !0) : (n(), a("div", Lf, e(b.title), 1))], 6))), 128))]), (n(!0), a(G, null, B(r.dataSource, (b, y) => et((n(), a("tr", {
                class: "tab_body",
                key: y + "p1"
            }, [(n(!0), a(G, null, B(r.columnOptions, (v, $) => (n(), a("td", {
                key: $ + "p2",
                class: M(`td_${v.key} default_cell ${v.cusTdClass||""} ${r.border?"":"noBorder"}`),
                style: Jt({
                    width: v.width
                })
            }, [t("div", Nf, [v.isSlot ? S("", !0) : (n(), a("span", If, e(b[v.key]), 1)), $e(r.$slots, v.key, {
                item: b
            }, void 0, !0)])], 6))), 128))])), [
                [Vt, r.dataSource && r.dataSource.length > 0]
            ])), 128)), r.dataSource.length === 0 ? (n(), a("tr", zf, [t("td", {
                colspan: r.columnOptions.length
            }, [$e(r.$slots, "empty", {}, () => [Sf], !0)], 8, xf)])) : S("", !0)])])], 4))
        }
    });
const ti = H(Rf, [
        ["__scopeId", "data-v-c375424d"]
    ]),
    Gf = {
        class: "binguo_bet_count"
    },
    Mf = {
        class: "bingtip_count_title"
    },
    Bf = {
        class: "lately"
    },
    Df = {
        class: "average_column"
    },
    Pf = {
        class: "noaverage_column"
    },
    Af = {
        class: "average_column"
    },
    Of = {
        class: "noaverage_column"
    },
    Wf = {
        class: "progress_box"
    },
    qf = {
        class: "progress"
    },
    Ef = {
        class: "tit"
    },
    Hf = {
        class: "progress"
    },
    Ff = {
        class: "tit"
    },
    Vf = {
        class: "progress"
    },
    jf = {
        class: "tit"
    },
    Uf = {
        class: "bingtip_count_title"
    },
    Kf = {
        class: "alike_column"
    },
    Xf = {
        class: "big"
    },
    Jf = {
        class: "bingtip_count_title two_title"
    },
    Qf = {
        class: "alike_column"
    },
    Yf = {
        class: "big"
    },
    Zf = W({
        __name: "BinguoBetCount",
        setup(l) {
            const {
                store: i,
                filterStyle: o
            } = ai(), {
                t: u
            } = pt(), m = U(() => {
                var p, r, _, b;
                return (p = i.smallAndBigTrend) != null && p.bigCount ? ((r = i.smallAndBigTrend) == null ? void 0 : r.bigCount) + ((_ = i.smallAndBigTrend) == null ? void 0 : _.smallCount) + ((b = i.smallAndBigTrend) == null ? void 0 : b.equalCount) : 0
            }), g = f([{
                title: u("xosoTxt60"),
                key: "number",
                isSlot: !0,
                cusTdClass: "sum_column"
            }, {
                title: u("binguoAvgCount"),
                key: "avgCount",
                isSlot: !0
            }, {
                title: u("binguoNotOpenCount"),
                key: "notOpenCount",
                isSlot: !0
            }]), d = f([{
                title: u("numbersMatch"),
                key: "number",
                isSlot: !0,
                cusTdClass: "sum_column"
            }, {
                title: u("binguoOpenCount"),
                key: "openCount",
                isSlot: !1
            }, {
                title: u("binguoAvgCount"),
                key: "avgCount",
                isSlot: !1
            }, {
                title: u("binguoNotOpenCount"),
                key: "notOpenCount",
                isSlot: !1
            }]), c = U(() => {
                let p = xi(d.value);
                return p[0].title = u("sameNum"), p
            });
            return (p, r) => {
                var b, y, v, $, T, C;
                const _ = V("van-progress");
                return n(), a("div", Gf, [t("div", Mf, e(p.$t("binguoLastIssue")), 1), t("div", Bf, [N(ti, {
                    "column-options": g.value,
                    "data-source": s(i).resultSumTrend.slice(0, 8),
                    rowHeight: "40px",
                    tabWidth: "49.6%",
                    tabHeight: "100%",
                    border: !1
                }, {
                    number: D(({
                        item: h
                    }) => [t("div", {
                        class: M(`sum_column ${s(o)(h.number)}`)
                    }, e(h.number), 3)]),
                    avgCount: D(({
                        item: h
                    }) => [t("div", Df, e(h.avgCount), 1)]),
                    notOpenCount: D(({
                        item: h
                    }) => [t("div", Pf, e(h.notOpenCount), 1)]),
                    _: 1
                }, 8, ["column-options", "data-source"]), N(ti, {
                    "column-options": g.value,
                    "data-source": s(i).resultSumTrend.slice(8, 16),
                    rowHeight: "40px",
                    tabWidth: "49.6%",
                    tabHeight: "100%",
                    border: !1
                }, {
                    number: D(({
                        item: h
                    }) => [t("div", {
                        class: M(`sum_column ${s(o)(h.number)}`)
                    }, e(h.number), 3)]),
                    avgCount: D(({
                        item: h
                    }) => [t("div", Af, e(h.avgCount), 1)]),
                    notOpenCount: D(({
                        item: h
                    }) => [t("div", Of, e(h.notOpenCount), 1)]),
                    _: 1
                }, 8, ["column-options", "data-source"])]), t("div", Wf, [t("div", qf, [t("div", Ef, [t("span", null, e(p.$t("small")), 1), t("div", null, [E(e(p.$t("binguoAppeared")), 1), t("span", null, e((b = s(i).smallAndBigTrend) == null ? void 0 : b.smallCount), 1)])]), N(_, {
                    percentage: ((y = s(i).smallAndBigTrend) == null ? void 0 : y.smallCount) / m.value * 100,
                    "stroke-width": "10",
                    "track-color": "#0A603E",
                    color: "#5DBA47"
                }, null, 8, ["percentage"])]), t("div", Hf, [t("div", Ff, [t("span", null, e(p.$t("binguoHe")), 1), t("div", null, [E(e(p.$t("binguoAppeared")), 1), t("span", null, e((v = s(i).smallAndBigTrend) == null ? void 0 : v.equalCount), 1)])]), N(_, {
                    percentage: (($ = s(i).smallAndBigTrend) == null ? void 0 : $.equalCount) / m.value * 100,
                    "stroke-width": "10",
                    "track-color": "#0A603E",
                    color: "#F9BC36"
                }, null, 8, ["percentage"])]), t("div", Vf, [t("div", jf, [t("span", null, e(p.$t("k3Big")), 1), t("div", null, [E(e(p.$t("binguoAppeared")), 1), t("span", null, e((T = s(i).smallAndBigTrend) == null ? void 0 : T.bigCount), 1)])]), N(_, {
                    percentage: ((C = s(i).smallAndBigTrend) == null ? void 0 : C.bigCount) / m.value * 100,
                    "stroke-width": "10",
                    "track-color": "#0A603E",
                    color: "#5DBA47"
                }, null, 8, ["percentage"])])]), t("div", Uf, e(p.$t("binguoThirdAlike")), 1), N(ti, {
                    "column-options": d.value,
                    "data-source": s(i).threeSameTrend,
                    rowHeight: "40px",
                    tabWidth: "100%",
                    tabHeight: "100%",
                    border: !1,
                    class: "binguoCountTable"
                }, {
                    number: D(({
                        item: h
                    }) => [t("div", Kf, [(n(!0), a(G, null, B((h.number + "").split(""), k => (n(), a("div", Xf, e(k), 1))), 256))])]),
                    _: 1
                }, 8, ["column-options", "data-source"]), t("div", Jf, e(p.$t("binguoTwoAlike")), 1), N(ti, {
                    "column-options": c.value,
                    "data-source": s(i).twoSameTrend,
                    rowHeight: "40px",
                    tabWidth: "100%",
                    tabHeight: "100%",
                    border: !1,
                    class: "binguoCountTable"
                }, {
                    number: D(({
                        item: h
                    }) => [t("div", Qf, [(n(!0), a(G, null, B((h.number + "").split(""), k => (n(), a("div", Yf, e(k), 1))), 256))])]),
                    _: 1
                }, 8, ["column-options", "data-source"])])
            }
        }
    });
const ty = H(Zf, [
        ["__scopeId", "data-v-0c2d4a4c"]
    ]),
    ki = l => (wt("data-v-f1b0d287"), l = l(), Lt(), l),
    ey = {
        class: "binguo_detail"
    },
    iy = {
        class: "bingtip_count_title"
    },
    ny = {
        class: "result1"
    },
    ay = {
        class: "column_list"
    },
    oy = {
        class: "bingtip_count_title"
    },
    sy = {
        class: "record_list"
    },
    ly = {
        class: "record_item"
    },
    cy = {
        class: "item"
    },
    ry = {
        key: 1
    },
    uy = {
        class: "bingtip_count_title"
    },
    dy = {
        class: "issueNo_head"
    },
    py = {
        class: "issue_text"
    },
    gy = {
        class: "issue_number"
    },
    my = ki(() => t("div", {
        class: "ball"
    }, "1", -1)),
    by = ki(() => t("div", {
        class: "ball"
    }, "2", -1)),
    _y = ki(() => t("div", {
        class: "ball"
    }, "3", -1)),
    vy = ki(() => t("div", {
        class: "ball"
    }, "4", -1)),
    hy = ki(() => t("div", {
        class: "ball"
    }, "5", -1)),
    ky = ki(() => t("div", {
        class: "ball"
    }, "6", -1)),
    fy = {
        class: "issueNo_column"
    },
    yy = W({
        __name: "BinguoDetail",
        setup(l) {
            const {
                t: i
            } = pt(), o = f([{
                title: i("betNumber"),
                key: "issueNo",
                isSlotHeader: !0,
                isSlot: !0,
                width: "28%"
            }, {
                title: "1",
                key: "num1",
                isSlotHeader: !0,
                isSlot: !0,
                width: "10%"
            }, {
                title: "2",
                key: "num2",
                isSlotHeader: !0,
                isSlot: !0,
                width: "10%"
            }, {
                title: "3",
                key: "num3",
                isSlotHeader: !0,
                isSlot: !0,
                width: "10%"
            }, {
                title: "4",
                key: "num4",
                isSlotHeader: !0,
                isSlot: !0,
                width: "10%"
            }, {
                title: "5",
                key: "num5",
                isSlotHeader: !0,
                isSlot: !0,
                width: "10%"
            }, {
                title: "6",
                key: "num6",
                isSlotHeader: !0,
                isSlot: !0,
                width: "10%"
            }, {
                title: i("gameRecordTotal"),
                key: "sum",
                isSlot: !0,
                width: "10%"
            }]), {
                filterStyle: u,
                last50Result: m,
                last50Record: g,
                last50RecordResult: d
            } = ai();
            return (c, p) => (n(), a("div", ey, [t("div", iy, e(c.$t("binguoLast50")), 1), t("div", ny, [(n(!0), a(G, null, B(s(m), r => (n(), a("div", ay, [(n(!0), a(G, null, B(r, _ => (n(), a("div", {
                class: M(`item ${s(u)(_)}`)
            }, e(_), 3))), 256))]))), 256))]), t("div", oy, e(c.$t("binguoLast50Record")), 1), t("div", sy, [(n(!0), a(G, null, B(s(g), r => (n(), a("div", ly, [(n(!0), a(G, null, B(r, _ => (n(), a("div", cy, [_ ? (n(), a("div", {
                key: 0,
                class: M(`${s(u)(_)}`)
            }, e(_), 3)) : (n(), a("div", ry))]))), 256))]))), 256))]), t("div", uy, e(c.$t("binguoRecordResult")), 1), N(ti, {
                "column-options": o.value,
                "data-source": s(d),
                rowHeight: "30px",
                tabWidth: "100%",
                hBgColor: "linear-gradient(180deg, #0A603E 0%, #168055 100%)",
                tabHeight: "100%",
                border: !0,
                hColor: "#FFF880"
            }, {
                issueNo_head: D(() => [t("div", dy, [t("span", py, e(c.$t("betNumber")), 1), t("span", gy, e(c.$t("binguoNumber")), 1)])]),
                num1_head: D(() => [my]),
                num2_head: D(() => [by]),
                num3_head: D(() => [_y]),
                num4_head: D(() => [vy]),
                num5_head: D(() => [hy]),
                num6_head: D(() => [ky]),
                issueNo: D(({
                    item: r
                }) => [t("div", fy, e(r.issueNo), 1)]),
                sum: D(({
                    item: r
                }) => [t("div", {
                    class: M(`sum_column ${s(u)(r.sum)}`)
                }, e(r.sum), 3)]),
                num1: D(({
                    item: r
                }) => [t("div", {
                    class: M(`num_column num_column${r.num1}`)
                }, [(n(!0), a(G, null, B(r.num1, () => (n(), a("div"))), 256))], 2)]),
                num2: D(({
                    item: r
                }) => [t("div", {
                    class: M(`num_column num_column${r.num2}`)
                }, [(n(!0), a(G, null, B(r.num2, () => (n(), a("div"))), 256))], 2)]),
                num3: D(({
                    item: r
                }) => [t("div", {
                    class: M(`num_column num_column${r.num3}`)
                }, [(n(!0), a(G, null, B(r.num3, () => (n(), a("div"))), 256))], 2)]),
                num4: D(({
                    item: r
                }) => [t("div", {
                    class: M(`num_column num_column${r.num4}`)
                }, [(n(!0), a(G, null, B(r.num4, () => (n(), a("div"))), 256))], 2)]),
                num5: D(({
                    item: r
                }) => [t("div", {
                    class: M(`num_column num_column${r.num5}`)
                }, [(n(!0), a(G, null, B(r.num5, () => (n(), a("div"))), 256))], 2)]),
                num6: D(({
                    item: r
                }) => [t("div", {
                    class: M(`num_column num_column${r.num6}`)
                }, [(n(!0), a(G, null, B(r.num6, () => (n(), a("div"))), 256))], 2)]),
                _: 1
            }, 8, ["column-options", "data-source"])]))
        }
    });
const $y = H(yy, [
        ["__scopeId", "data-v-f1b0d287"]
    ]),
    zn = l => (wt("data-v-596004d5"), l = l(), Lt(), l),
    Ty = {
        class: "trend_container"
    },
    Cy = {
        class: "trend_header"
    },
    wy = {
        class: "trend_header_title"
    },
    Ly = zn(() => t("span", null, "7", -1)),
    Ny = zn(() => t("br", null, null, -1)),
    Iy = zn(() => t("span", null, "100", -1)),
    zy = ["src"],
    xy = ["src"],
    Sy = {
        class: "trend_table"
    },
    Ry = {
        class: "trend_tip"
    },
    Gy = {
        class: "tip_text"
    },
    My = {
        key: 0
    },
    By = {
        key: 0
    },
    Dy = {
        class: "custom_column"
    },
    Py = {
        class: "custom_column winmount_column"
    },
    Ay = W({
        __name: "BinguoTrend",
        setup(l) {
            const {
                store: i
            } = ai(), {
                t: o
            } = pt(), u = f([{
                title: "Top",
                key: "rankID",
                isSlot: !0,
                width: "20%",
                cusTdClass: "rankID_column"
            }, {
                title: o("account"),
                key: "userName",
                width: "38%",
                isSlot: !0
            }, {
                title: o("winningAmount"),
                width: "42%",
                key: "winAmount",
                isSlot: !0
            }]), m = gt(), g = () => {
                i.isTrend || m.back()
            };
            return (d, c) => (n(), a("div", Ty, [t("div", Cy, [t("div", wy, [E(e(d.$t("binguoLately")), 1), Ly, E(e(d.$t("days")), 1), Ny, E(" " + e(d.$t("binguoQian")), 1), Iy, E(e(d.$t("binguoMin") + d.$t("binguoPaimin")), 1)]), t("img", {
                src: s(ut)("home/AllLotteryGames/binguo", "trend1"),
                class: "trend1",
                alt: ""
            }, null, 8, zy), t("img", {
                src: s(ut)("home/AllLotteryGames/binguo", "trend2"),
                class: "trend2",
                alt: ""
            }, null, 8, xy)]), t("div", Sy, [t("div", Ry, [t("div", Gy, [E(e(s(i).isTrend ? d.$t("binguoMyLead") : d.$t("binguoNotBoard")) + " ", 1), s(i).isTrend ? S("", !0) : (n(), a("br", My)), E(" " + e(s(i).isTrend ? "" : d.$t("binguoGoPlay")), 1)]), t("div", {
                class: "trend_go",
                onClick: g
            }, [E(e(s(i).isTrend ? s(i).userRank : "GO") + " ", 1), s(i).isTrend ? (n(), a("span", By, e(d.$t("binguoMin")), 1)) : S("", !0)])]), N(ti, {
                "column-options": u.value,
                "data-source": s(i).trendList,
                rowHeight: "50px",
                tabWidth: "100%",
                hBgColor: "linear-gradient(180deg, #13AB62 0%, #0F6946 100%)",
                tabHeight: "100%",
                border: !1,
                hColor: "#FFF880"
            }, {
                rankID: D(({
                    item: p
                }) => [t("div", {
                    class: M(["rankID_column", `${p.rankID<4?"top_"+p.rankID:"rank_text"}`])
                }, e(p.rankID > 3 ? p.rankID : ""), 3)]),
                userName: D(({
                    item: p
                }) => [t("div", Dy, e(p.userName), 1)]),
                winAmount: D(({
                    item: p
                }) => [t("div", Py, e(s(xt)(p.winAmount)), 1)]),
                _: 1
            }, 8, ["column-options", "data-source"])])]))
        }
    });
const Oy = H(Ay, [
        ["__scopeId", "data-v-596004d5"]
    ]),
    Wy = {
        class: "last7Day_container"
    },
    qy = {
        class: "bingtip_count_title"
    },
    Ey = {
        class: "column_time"
    },
    Hy = {
        key: 0,
        class: "result"
    },
    Fy = {
        class: "quan"
    },
    Vy = {
        key: 0,
        class: "result"
    },
    jy = {
        class: "quan"
    },
    Uy = {
        key: 0,
        class: "result"
    },
    Ky = {
        class: "quan"
    },
    Xy = {
        key: 0,
        class: "result"
    },
    Jy = {
        class: "quan"
    },
    Qy = {
        key: 0,
        class: "result"
    },
    Yy = {
        class: "quan"
    },
    Zy = {
        key: 0,
        class: "result"
    },
    t0 = {
        class: "quan"
    },
    e0 = {
        key: 0,
        class: "result"
    },
    i0 = {
        class: "quan"
    },
    n0 = W({
        __name: "BinguoLast7Day",
        setup(l) {
            const {
                store: i,
                columnOptions: o,
                filterStyle: u
            } = ai();
            return (m, g) => (n(), a("div", Wy, [t("div", qy, e(m.$t("binguoLast7Result")), 1), N(ti, {
                "column-options": s(o),
                "data-source": s(i).last7Day,
                rowHeight: "40px",
                "tab-height": "1200px"
            }, {
                issueEndTime: D(({
                    item: d
                }) => [t("div", Ey, e(d.issueEndTime), 1)]),
                time_index_0: D(({
                    item: d
                }) => {
                    var c, p, r;
                    return [d.time_index_0 ? (n(), a("div", Hy, [t("div", Fy, [(n(!0), a(G, null, B((c = d.time_index_0) == null ? void 0 : c.result.split(""), _ => (n(), a("div", null, e(_), 1))), 256))]), t("div", {
                        class: M(["result_sum", s(u)((p = d.time_index_0) == null ? void 0 : p.resultSum)])
                    }, e((r = d.time_index_0) == null ? void 0 : r.resultSum), 3)])) : S("", !0)]
                }),
                time_index_1: D(({
                    item: d
                }) => {
                    var c, p, r;
                    return [d.time_index_1 ? (n(), a("div", Vy, [t("div", jy, [(n(!0), a(G, null, B((c = d.time_index_1) == null ? void 0 : c.result.split(""), _ => (n(), a("div", null, e(_), 1))), 256))]), t("div", {
                        class: M(["result_sum", s(u)((p = d.time_index_1) == null ? void 0 : p.resultSum)])
                    }, e((r = d.time_index_1) == null ? void 0 : r.resultSum), 3)])) : S("", !0)]
                }),
                time_index_2: D(({
                    item: d
                }) => {
                    var c, p, r;
                    return [d.time_index_2 ? (n(), a("div", Uy, [t("div", Ky, [(n(!0), a(G, null, B((c = d.time_index_2) == null ? void 0 : c.result.split(""), _ => (n(), a("div", null, e(_), 1))), 256))]), t("div", {
                        class: M(["result_sum", s(u)((p = d.time_index_2) == null ? void 0 : p.resultSum)])
                    }, e((r = d.time_index_2) == null ? void 0 : r.resultSum), 3)])) : S("", !0)]
                }),
                time_index_3: D(({
                    item: d
                }) => {
                    var c, p, r;
                    return [d.time_index_3 ? (n(), a("div", Xy, [t("div", Jy, [(n(!0), a(G, null, B((c = d.time_index_3) == null ? void 0 : c.result.split(""), _ => (n(), a("div", null, e(_), 1))), 256))]), t("div", {
                        class: M(["result_sum", s(u)((p = d.time_index_3) == null ? void 0 : p.resultSum)])
                    }, e((r = d.time_index_3) == null ? void 0 : r.resultSum), 3)])) : S("", !0)]
                }),
                time_index_4: D(({
                    item: d
                }) => {
                    var c, p, r;
                    return [d.time_index_4 ? (n(), a("div", Qy, [t("div", Yy, [(n(!0), a(G, null, B((c = d.time_index_4) == null ? void 0 : c.result.split(""), _ => (n(), a("div", null, e(_), 1))), 256))]), t("div", {
                        class: M(["result_sum", s(u)((p = d.time_index_4) == null ? void 0 : p.resultSum)])
                    }, e((r = d.time_index_4) == null ? void 0 : r.resultSum), 3)])) : S("", !0)]
                }),
                time_index_5: D(({
                    item: d
                }) => {
                    var c, p, r;
                    return [d.time_index_5 ? (n(), a("div", Zy, [t("div", t0, [(n(!0), a(G, null, B((c = d.time_index_5) == null ? void 0 : c.result.split(""), _ => (n(), a("div", null, e(_), 1))), 256))]), t("div", {
                        class: M(["result_sum", s(u)((p = d.time_index_5) == null ? void 0 : p.resultSum)])
                    }, e((r = d.time_index_5) == null ? void 0 : r.resultSum), 3)])) : S("", !0)]
                }),
                time_index_6: D(({
                    item: d
                }) => {
                    var c, p, r;
                    return [d.time_index_6 ? (n(), a("div", e0, [t("div", i0, [(n(!0), a(G, null, B((c = d.time_index_6) == null ? void 0 : c.result.split(""), _ => (n(), a("div", null, e(_), 1))), 256))]), t("div", {
                        class: M(["result_sum", s(u)((p = d.time_index_6) == null ? void 0 : p.resultSum)])
                    }, e((r = d.time_index_6) == null ? void 0 : r.resultSum), 3)])) : S("", !0)]
                }),
                _: 1
            }, 8, ["column-options", "data-source"])]))
        }
    });
const a0 = H(n0, [
        ["__scopeId", "data-v-5e5628ad"]
    ]),
    o0 = {
        class: "binguo_count"
    },
    s0 = W({
        __name: "index",
        setup(l) {
            const {
                store: i,
                getTrendstatistics: o,
                getLotteryRankList: u,
                getLotteryResult7Day: m,
                getBingo18Last50Result: g
            } = ai(), d = gt(), c = () => {
                d.back()
            };
            return Ot(() => i.currentTabIndex, p => {
                switch (p) {
                    case 0:
                        o();
                        break;
                    case 1:
                        g();
                        break;
                    case 2:
                        m();
                        break;
                    case 3:
                        u();
                        break
                }
            }, {
                immediate: !0
            }), (p, r) => {
                const _ = V("NavBar");
                return n(), a("div", o0, [N(_, {
                    "left-arrow": "",
                    onClickLeft: c,
                    backgroundColor: "#0a4529",
                    title: `${p.$t("binguoCount")}`
                }, null, 8, ["title"]), N(yf), s(i).currentTabIndex === 0 ? (n(), Q(ty, {
                    key: 0
                })) : S("", !0), s(i).currentTabIndex === 1 ? (n(), Q($y, {
                    key: 1
                })) : S("", !0), s(i).currentTabIndex === 2 ? (n(), Q(a0, {
                    key: 2
                })) : S("", !0), s(i).currentTabIndex === 3 ? (n(), Q(Oy, {
                    key: 3
                })) : S("", !0)])
            }
        }
    });
const KD = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: s0
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    ji = l => (wt("data-v-1f6155ee"), l = l(), Lt(), l),
    l0 = {
        class: "body-container"
    },
    c0 = {
        class: "MyGameRecordList__C"
    },
    r0 = ["onClick"],
    u0 = {
        class: "MyGameRecordList__C_left"
    },
    d0 = {
        class: "MyGameRecordList__C-item-m"
    },
    p0 = {
        class: "MyGameRecordList__C-item-m-top"
    },
    g0 = {
        class: "MyGameRecordList__C-item-m-bottom"
    },
    m0 = {
        key: 0
    },
    b0 = {
        key: 0,
        class: "MyGameRecordList__C-detail"
    },
    _0 = {
        class: "detail_title"
    },
    v0 = {
        class: "detail_item"
    },
    h0 = {
        class: "item_title"
    },
    k0 = {
        class: "item_result"
    },
    f0 = ["onClick"],
    y0 = ji(() => t("path", {
        d: "M6.5 6.2158V3.90625C6.5 3.1296 7.1296 2.5 7.90625 2.5H20.0938C20.8704 2.5 21.5 3.1296 21.5 3.90625V16.0938C21.5 16.8704 20.8704 17.5 20.0938 17.5H17.7582",
        stroke: "#87C7AF",
        "stroke-width": "2",
        "stroke-linecap": "round",
        "stroke-linejoin": "round"
    }, null, -1)),
    $0 = ji(() => t("path", {
        d: "M16.0938 6.5H3.90625C3.1296 6.5 2.5 7.1296 2.5 7.90625V20.0938C2.5 20.8704 3.1296 21.5 3.90625 21.5H16.0938C16.8704 21.5 17.5 20.8704 17.5 20.0938V7.90625C17.5 7.1296 16.8704 6.5 16.0938 6.5Z",
        fill: "#87C7AF",
        stroke: "#87C7AF",
        "stroke-width": "2",
        "stroke-linejoin": "round"
    }, null, -1)),
    T0 = [y0, $0],
    C0 = {
        class: "detail_item"
    },
    w0 = {
        class: "item_title"
    },
    L0 = {
        class: "item_result"
    },
    N0 = ["onClick"],
    I0 = ji(() => t("path", {
        d: "M6.5 6.2158V3.90625C6.5 3.1296 7.1296 2.5 7.90625 2.5H20.0938C20.8704 2.5 21.5 3.1296 21.5 3.90625V16.0938C21.5 16.8704 20.8704 17.5 20.0938 17.5H17.7582",
        stroke: "#87C7AF",
        "stroke-width": "2",
        "stroke-linecap": "round",
        "stroke-linejoin": "round"
    }, null, -1)),
    z0 = ji(() => t("path", {
        d: "M16.0938 6.5H3.90625C3.1296 6.5 2.5 7.1296 2.5 7.90625V20.0938C2.5 20.8704 3.1296 21.5 3.90625 21.5H16.0938C16.8704 21.5 17.5 20.8704 17.5 20.0938V7.90625C17.5 7.1296 16.8704 6.5 16.0938 6.5Z",
        fill: "#87C7AF",
        stroke: "#87C7AF",
        "stroke-width": "2",
        "stroke-linejoin": "round"
    }, null, -1)),
    x0 = [I0, z0],
    S0 = {
        class: "detail_item"
    },
    R0 = {
        class: "item_title"
    },
    G0 = {
        class: "item_result"
    },
    M0 = {
        class: "detail_item"
    },
    B0 = {
        class: "item_title"
    },
    D0 = {
        class: "item_result"
    },
    P0 = {
        class: "detail_item"
    },
    A0 = {
        class: "item_title"
    },
    O0 = {
        class: "item_result"
    },
    W0 = {
        class: "detail_item"
    },
    q0 = {
        class: "item_title"
    },
    E0 = {
        class: "item_result"
    },
    H0 = {
        class: "detail_item"
    },
    F0 = {
        class: "item_title"
    },
    V0 = {
        class: "item_result"
    },
    j0 = {
        class: "detail_item"
    },
    U0 = {
        class: "item_title"
    },
    K0 = {
        class: "item_result"
    },
    X0 = {
        class: "draw_result"
    },
    J0 = {
        class: "detail_item"
    },
    Q0 = {
        class: "item_title"
    },
    Y0 = {
        key: 1,
        class: "item_result"
    },
    Z0 = {
        class: "detail_item"
    },
    t2 = {
        class: "item_title"
    },
    e2 = {
        class: "detail_item"
    },
    i2 = {
        class: "item_title"
    },
    n2 = {
        class: "item_result"
    },
    a2 = {
        class: "detail_item"
    },
    o2 = {
        class: "item_title"
    },
    s2 = {
        class: "item_result"
    },
    l2 = W({
        __name: "RecordList",
        props: {
            mayrecord: {}
        },
        setup(l) {
            const {
                t: i
            } = pt(), {
                filterGameType: o
            } = ai(), u = f(-1), m = c => {
                u.value == c ? u.value = -1 : u.value = c
            }, g = (c, p) => {
                if (p == 1) switch (c) {
                    case 0:
                        return i("bettingResultState3");
                    case 1:
                        return i("hasWon");
                    case 2:
                        return i("bettingResultState1");
                    case 3:
                        return i("xosoTxt76");
                    default:
                        return ""
                } else switch (c) {
                    case 0:
                        return "fail";
                    case 1:
                        return "success";
                    case 2:
                        return "wait";
                    case 3:
                        return "ing";
                    default:
                        return "ing"
                }
            }, d = c => {
                switch (c) {
                    case "Big":
                        return i("big");
                    case "Drawn":
                        return i("binguoHe");
                    case "Small":
                        return i("small");
                    default:
                        return c
                }
            };
            return (c, p) => (n(), a("div", l0, [t("div", c0, [(n(!0), a(G, null, B(c.mayrecord, (r, _) => (n(), a(G, {
                key: _
            }, [t("div", {
                class: "MyGameRecordList__C-item",
                onClick: b => m(_)
            }, [t("div", {
                class: M(["MyGameRecordList__C-item-l", s(o)(Number(r.gameType), r.selectType).className])
            }, e(d(r.selectType)), 3), t("div", u0, [t("div", d0, [t("div", p0, e(r.issueNumber), 1), t("div", g0, e(r.addTime), 1)]), t("div", {
                class: M(["MyGameRecordList__C-item-r", g(r.state, 2)])
            }, [t("div", {
                class: M(g(r.state, 2))
            }, e(g(r.state, 1)), 3), r.premium ? (n(), a("span", m0, e(s(xt)(r.profitAmount)), 1)) : S("", !0)], 2)])], 8, r0), _ == u.value ? (n(), a("div", b0, [t("div", _0, e(c.$t("details")), 1), t("div", v0, [t("div", h0, e(c.$t("orderNoMay")), 1), t("div", k0, [E(e(r.orderNumber) + " ", 1), (n(), a("svg", {
                onClick: b => s(Ue)(r.orderNumber),
                xmlns: "http://www.w3.org/2000/svg",
                width: "24",
                height: "24",
                viewBox: "0 0 24 24",
                fill: "none"
            }, T0, 8, f0))])]), t("div", C0, [t("div", w0, e(c.$t("issueMay")), 1), t("div", L0, [E(e(r.issueNumber) + " ", 1), (n(), a("svg", {
                onClick: b => s(Ue)(r.issueNumber),
                xmlns: "http://www.w3.org/2000/svg",
                width: "24",
                height: "24",
                viewBox: "0 0 24 24",
                fill: "none"
            }, x0, 8, N0))])]), t("div", S0, [t("div", R0, e(c.$t("gamePlay")), 1), t("div", G0, e(s(o)(Number(r.gameType), r.selectType).playerName), 1)]), t("div", M0, [t("div", B0, e(c.$t("amountMay")), 1), t("div", D0, e(r.amount), 1)]), t("div", P0, [t("div", A0, e(c.$t("multiple")), 1), t("div", O0, e(r.figure), 1)]), t("div", W0, [t("div", q0, e(c.$t("afterTaxAmount")), 1), t("div", E0, e(r.realAmount), 1)]), t("div", H0, [t("div", F0, e(c.$t("tax")), 1), t("div", V0, e(r.serviceCharge || "-"), 1)]), t("div", j0, [t("div", U0, e(c.$t("winTips3")), 1), t("div", K0, [t("div", {
                class: M(["draw_num", `${r.sumCount?s(o)(Number(r.gameType),r.selectType).className:""}`])
            }, e(r.sumCount || "-"), 3), r.premium ? (n(!0), a(G, {
                key: 0
            }, B(r.premium.split(""), b => (n(), a("div", X0, e(b), 1))), 256)) : S("", !0)])]), t("div", J0, [t("div", Q0, e(c.$t("betting")), 1), r.gameType === "2" || r.gameType === "1" ? (n(), a("div", {
                key: 0,
                class: M(["item_result item_bet", `${s(o)(Number(r.gameType),r.selectType).className}`])
            }, e(r.selectType), 3)) : (n(), a("div", Y0, [(n(!0), a(G, null, B(r.selectType.split(""), b => (n(), a("div", {
                class: M(["item_result item_bet item_alike", `${s(o)(Number(r.gameType),r.selectType).className}`])
            }, e(b), 3))), 256))]))]), t("div", Z0, [t("div", t2, e(c.$t("statusMay")), 1), t("div", {
                class: M(["item_result", g(r.state, 2)])
            }, e(g(r.state, 1)), 3)]), t("div", e2, [t("div", i2, e(c.$t("winOrLose")), 1), t("div", n2, e(r.profitAmount ? s(xt)(r.profitAmount) : "-"), 1)]), t("div", a2, [t("div", o2, e(c.$t("createTime")), 1), t("div", s2, e(r.addTime), 1)])])) : S("", !0)], 64))), 128))])]))
        }
    });
const c2 = H(l2, [
        ["__scopeId", "data-v-1f6155ee"]
    ]),
    r2 = {
        class: "record-container"
    },
    u2 = {
        class: "WinTrx__C-head-more"
    },
    d2 = W({
        __name: "index",
        setup(l) {
            const i = gt(),
                o = () => {
                    i.back()
                },
                u = f([]),
                m = f({
                    pageSize: 20
                }),
                g = () => {},
                d = () => {},
                c = f("");
            return (p, r) => {
                const _ = V("NavBar");
                return n(), a("div", r2, [N(_, {
                    "left-arrow": "",
                    onClickLeft: o,
                    "background-color": "#0a4529",
                    title: p.$t("xosoTxt73")
                }, {
                    right: D(() => [t("div", u2, [t("div", {
                        onClick: r[0] || (r[0] = b => g())
                    }), t("div", {
                        class: M({
                            disableVoice: c.value == "2"
                        }),
                        onClick: d
                    }, null, 2)])]),
                    _: 1
                }, 8, ["title"]), N(Ta, {
                    list: u.value,
                    "onUpdate:list": r[1] || (r[1] = b => u.value = b),
                    pageQuery: m.value,
                    "onUpdate:pageQuery": r[2] || (r[2] = b => m.value = b),
                    api: s(nr),
                    distance: 100,
                    ref: "listRef",
                    isAutoLoad: !0
                }, {
                    content: D(() => [N(c2, {
                        mayrecord: u.value
                    }, null, 8, ["mayrecord"])]),
                    _: 1
                }, 8, ["list", "pageQuery", "api"])])
            }
        }
    });
const p2 = H(d2, [
        ["__scopeId", "data-v-121431cd"]
    ]),
    XD = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: p2
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    g2 = l => (wt("data-v-e6d02863"), l = l(), Lt(), l),
    m2 = {
        class: "Betting__Popup"
    },
    b2 = {
        class: "Betting__Popup-head"
    },
    _2 = {
        class: "Betting__Popup-head-title"
    },
    v2 = {
        class: "Betting__Popup-head-selectName"
    },
    h2 = {
        class: "Betting__Popup-body"
    },
    k2 = {
        class: "Betting__Popup-body-line"
    },
    f2 = {
        class: "Betting__Popup-body-line-list"
    },
    y2 = ["onClick"],
    $2 = {
        class: "Betting__Popup-body-line"
    },
    T2 = {
        class: "Betting__Popup-body-line-btnL"
    },
    C2 = {
        class: "Betting__Popup-body-line"
    },
    w2 = g2(() => t("div", null, null, -1)),
    L2 = {
        class: "Betting__Popup-body-line-list"
    },
    N2 = ["onClick"],
    I2 = {
        class: "Betting__Popup-body-line"
    },
    z2 = {
        class: "Betting__Popup-foot"
    },
    x2 = {
        class: "Betting__Popup-foot-s bgcolor"
    },
    S2 = {
        class: "Betting__Popup-PreSale"
    },
    R2 = {
        class: "Betting__Popup-PreSale-head"
    },
    G2 = {
        class: "Betting__Popup-PreSale-body"
    },
    M2 = {
        class: "Betting__Popup-PreSale-foot"
    },
    B2 = W({
        __name: "BettingPopup",
        props: {
            selectInfo: {
                type: Object,
                default: () => ({})
            },
            bettingPopupShow: {
                type: Boolean,
                default: f(!1)
            },
            actionItem: {
                type: Object,
                default: () => ({})
            }
        },
        emits: ["update:bettingPopupShow", "update:selectInfo", "clearBetting", "submitBetting"],
        setup(l, {
            emit: i
        }) {
            const o = l,
                {
                    t: u
                } = pt(),
                m = f(!1),
                g = f(!0),
                d = U(() => o.actionItem.scopeList || []),
                c = f([1, 5, 10, 20, 50, 100]),
                p = U({
                    get() {
                        return o.bettingPopupShow || !1
                    },
                    set(C) {
                        i("update:bettingPopupShow", C)
                    }
                }),
                r = C => {
                    switch (C) {
                        case 1:
                            o.selectInfo.count > 1 && (o.selectInfo.count--, T());
                            break;
                        case 2:
                            o.selectInfo.count++, T();
                            break
                    }
                },
                _ = C => {
                    C > 0 && (o.selectInfo.count = parseInt(C), T())
                },
                b = C => {
                    o.selectInfo.count = C, T()
                },
                y = C => {
                    o.selectInfo.coin = C, T()
                },
                v = () => {
                    m.value = !1, g.value = !0
                },
                $ = () => {
                    g.value ? i("submitBetting") : Te(u("agreePresaleRules"))
                },
                T = () => {
                    o.selectInfo.allCoin = o.selectInfo.coin * o.selectInfo.count
                };
            return (C, h) => {
                const k = V("van-field"),
                    w = V("van-popup"),
                    L = zt("throttle-click");
                return n(), a(G, null, [N(w, {
                    show: p.value,
                    "onUpdate:show": h[6] || (h[6] = z => p.value = z),
                    position: "bottom",
                    round: !0,
                    "close-on-click-overlay": !1
                }, {
                    default: D(() => [t("div", m2, [t("div", b2, [t("div", _2, e(l.actionItem.lotteryName), 1), t("div", v2, [t("span", null, e(s(u)("choose")), 1), t("span", null, e(l.selectInfo.selectCon), 1)])]), t("div", h2, [t("div", k2, [E(e(s(u)("amount")) + " ", 1), t("div", f2, [(n(!0), a(G, null, B(d.value, (z, I) => (n(), a("div", {
                        key: I,
                        class: M(["Betting__Popup-body-line-item", {
                            bgcolor: l.selectInfo.coin == z
                        }]),
                        onClick: x => y(z)
                    }, e(z), 11, y2))), 128))])]), t("div", $2, [E(e(s(u)("numbers")) + " ", 1), t("div", T2, [t("div", {
                        class: M(["Betting__Popup-btn border", {
                            bgcolor: l.selectInfo.count > 0
                        }]),
                        onClick: h[0] || (h[0] = z => r(1))
                    }, "-", 2), N(k, {
                        class: "Betting__Popup-input",
                        modelValue: l.selectInfo.count,
                        "onUpdate:modelValue": h[1] || (h[1] = z => l.selectInfo.count = z),
                        type: "digit",
                        maxlength: 4,
                        onInput: _
                    }, null, 8, ["modelValue"]), t("div", {
                        class: "Betting__Popup-btn bgcolor border",
                        onClick: h[2] || (h[2] = z => r(2))
                    }, "+")])]), t("div", C2, [w2, t("div", L2, [(n(!0), a(G, null, B(c.value, (z, I) => (n(), a("div", {
                        key: I,
                        class: M(["Betting__Popup-body-line-item", {
                            bgcolor: l.selectInfo.count == z
                        }]),
                        onClick: x => b(z)
                    }, " X" + e(z), 11, N2))), 128))])]), t("div", I2, [t("span", {
                        class: M(["Betting__Popup-agree", {
                            active: g.value
                        }]),
                        onClick: h[3] || (h[3] = z => g.value = !g.value)
                    }, e(s(u)("agree")), 3), t("span", {
                        onClick: h[4] || (h[4] = z => m.value = !0),
                        class: "Betting__Popup-preSaleShow"
                    }, e(s(u)("presaleRules")), 1)])]), t("div", z2, [t("div", {
                        class: "Betting__Popup-foot-c",
                        onClick: h[5] || (h[5] = z => i("clearBetting"))
                    }, e(s(u)("cancel")), 1), et((n(), a("div", x2, [E(e(s(u)("totalAmount")) + " " + e(s(xt)(l.selectInfo.count * l.selectInfo.coin || 0)), 1)])), [
                        [L, {
                            handler: $,
                            wait: 2e3
                        }]
                    ])])])]),
                    _: 1
                }, 8, ["show"]), N(w, {
                    show: m.value,
                    "onUpdate:show": h[7] || (h[7] = z => m.value = z),
                    "close-on-click-overlay": !1,
                    round: ""
                }, {
                    default: D(() => [t("div", S2, [t("div", R2, e(s(u)("presaleRules")), 1), t("div", G2, e(C.$t("betPopTXT")), 1), t("div", M2, [t("div", {
                        class: "Betting__Popup-PreSale-foot-btn",
                        onClick: v
                    }, e(s(u)("iKonw")), 1)])])]),
                    _: 1
                }, 8, ["show"])], 64)
            }
        }
    });
const D2 = H(B2, [
        ["__scopeId", "data-v-e6d02863"]
    ]),
    P2 = {
        class: "changLong__C"
    },
    A2 = {
        class: "changLong__C-bet"
    },
    O2 = {
        class: "changLong__C-bet-l"
    },
    W2 = {
        class: "num"
    },
    q2 = {
        class: "time"
    },
    E2 = {
        class: "other"
    },
    H2 = {
        class: "remark"
    },
    F2 = {
        class: "issue"
    },
    V2 = ["onClick"],
    j2 = ["onClick"],
    U2 = ["onClick"],
    K2 = ["onClick"],
    X2 = ["onClick"],
    J2 = ["onClick"],
    Q2 = ["onClick"],
    Y2 = ["onClick"],
    Z2 = ["onClick"],
    t$ = ["onClick"],
    e$ = ["onClick"],
    ma = 5,
    i$ = W({
        __name: "Bet",
        setup(l) {
            const i = zi.global.t,
                o = f(!1),
                u = f({}),
                m = f({
                    coin: 0,
                    count: 1,
                    allCoin: 0,
                    gametype: 0,
                    typeid: 1,
                    issuenumber: "2020",
                    selecttype: 1,
                    selectCon: ""
                }),
                g = ts([]);
            let d = null;
            const c = (k, w, L, z, I) => {
                    if (g.value[w].action = L, u.value = k, m.value.selectCon = z, m.value.coin = k.scopeList[0], m.value.typeid = k.type, m.value.gametype = k.bettingGameType, k.type > 4) I == "big" ? m.value.selecttype = "H" : I == "small" ? m.value.selecttype = "L" : m.value.selecttype = I;
                    else {
                        const x = {
                            red: 10,
                            green: 11,
                            violet: 12,
                            big: 13,
                            small: 14
                        };
                        m.value.selecttype = x[I]
                    }
                    m.value.issuenumber = k.issueNumber, o.value = !0
                },
                p = f(!1),
                r = async () => {
                    if (d && clearInterval(d), p.value) return;
                    p.value = !0;
                    const k = await rt(Rs({
                        gameType: -1
                    }));
                    if (p.value = !1, !k) return;
                    const w = k.data.serviceTime;
                    g.value = k.data.list.map(L => {
                        let z = new Date(w).getTime(),
                            I = new Date(L.startTime).getTime(),
                            x = (z - I) / 1e3;
                        return x > L.intervalM * 60 && (x = L.intervalM * 60), L.scopeList = L.scope.split("|").map(R => Number(R)), L.passTime = Math.floor(L.intervalM * 60 - x), L.time1 = 0, L.time2 = Math.floor(L.passTime / 60), L.time3 = Math.floor(L.passTime % 60 / 10), L.time4 = Math.floor(L.passTime % 10), L
                    }), d = setInterval(function() {
                        _()
                    }, 1e3)
                }, _ = () => {
                    const k = g.value.length;
                    let w = !1;
                    for (let L = 0; L < k; L++) {
                        let z = g.value[L];
                        if (z.passTime < ma && z.issueNumber == u.value.issueNumber && b(), z.passTime > 0) z.time2 = Math.floor(z.passTime / 60), z.time3 = Math.floor(z.passTime % 60 / 10), z.time4 = Math.floor(z.passTime % 10), z.passTime--;
                        else {
                            w = !1, clearInterval(d), r();
                            break
                        }
                        w = z.time3 + z.time4 == 0
                    }
                    es(g), w && (clearInterval(d), r())
                }, b = () => {
                    o.value = !1;
                    let k = g.value.findIndex(w => JSON.stringify(w) == JSON.stringify(u.value));
                    k != -1 && (g.value[k].action = 0), m.value.coin = u.value.scopeList ? u.value.scopeList[0] : 0, m.value.count = 1, u.value = {}
                }, y = () => {
                    const {
                        typeid: k = 0
                    } = m.value;
                    k && (k < 5 ? $() : k < 9 ? C() : T())
                }, v = k => k < 5 ? "winGo" : k < 9 ? "Fd" : "k3", $ = async () => {
                    const k = await rt(Sa({
                        typeId: m.value.typeid,
                        issuenumber: m.value.issuenumber,
                        amount: m.value.coin,
                        betCount: Number(m.value.count),
                        gameType: m.value.gametype,
                        selectType: m.value.selecttype
                    }));
                    (k == null ? void 0 : k.code) === 0 && (Te(i("code" + k.msgCode)), b())
                }, T = async () => {
                    let {
                        coin: k,
                        count: w,
                        issuenumber: L,
                        gametype: z,
                        selecttype: I,
                        typeid: x
                    } = m.value;
                    const R = await rt(Ra({
                        amount: k,
                        betCount: Number(w),
                        gameType: z.toString(),
                        selectType: I,
                        typeId: x,
                        issuenumber: L
                    }));
                    (R == null ? void 0 : R.code) === 0 && (Te(i("code" + R.msgCode)), b())
                }, C = async () => {
                    let {
                        coin: k,
                        count: w,
                        issuenumber: L,
                        gametype: z,
                        selecttype: I,
                        typeid: x
                    } = m.value;
                    const R = {
                            issuenumber: L,
                            typeId: x,
                            amount: k,
                            betCount: Number(w),
                            gameType: z,
                            selectType: I
                        },
                        O = await rt(La(R));
                    (O == null ? void 0 : O.code) === 0 && (Te(i("code" + O.msgCode)), b())
                }, h = k => k == "H" ? "B" : k.trim() == "L" ? "S" : k;
            return ht(() => {
                r()
            }), Ke(() => {
                clearInterval(d)
            }), Ot(() => le().visibility, k => {
                r()
            }), (k, w) => (n(), a(G, null, [t("div", P2, [(n(!0), a(G, null, B(g.value, (L, z) => (n(), a("div", A2, [t("div", O2, [t("div", {
                class: M(["titel", [v(L.type)]])
            }, e(L.lotteryName), 3), t("div", W2, [E(e(L.issueNumber) + " ", 1), t("span", q2, e(`${L.time1}${L.time2}:${L.time3}${L.time4}`), 1)]), t("div", E2, [t("div", H2, e(L.remark), 1), t("div", {
                class: M(["gameResult", "bg-" + L.gameResult])
            }, e(h(L.gameResult)), 3), t("div", F2, e(L.issue) + e(k.$t("betIssues")), 1)])]), t("div", {
                class: M(["changLong__C-bet-r", {
                    disable: L.passTime < ma
                }])
            }, [L.gameType == 0 ? (n(), a(G, {
                key: 0
            }, [t("div", {
                class: M({
                    active: L.action == 1,
                    big: !0
                }),
                onClick: I => c(L, z, 1, k.$t("betBig"), "big")
            }, e(k.$t("betBig")), 11, V2), t("div", {
                class: M({
                    active: L.action == 2,
                    small: !0
                }),
                onClick: I => c(L, z, 2, k.$t("betSmall"), "small")
            }, e(k.$t("betSmall")), 11, j2)], 64)) : S("", !0), L.gameType == 1 ? (n(), a(G, {
                key: 1
            }, [t("div", {
                class: M({
                    active: L.action == 1,
                    red: !0
                }),
                onClick: I => c(L, z, 1, k.$t("betRed"), "red")
            }, e(k.$t("betRed")), 11, U2), t("div", {
                class: M({
                    active: L.action == 2,
                    green: !0
                }),
                onClick: I => c(L, z, 2, k.$t("betGreen"), "green")
            }, e(k.$t("betGreen")), 11, K2), t("div", {
                class: M({
                    active: L.action == 3,
                    violet: !0
                }),
                onClick: I => c(L, z, 3, k.$t("betPurple"), "violet")
            }, e(k.$t("betPurple")), 11, X2)], 64)) : S("", !0), L.gameType == 2 ? (n(), a(G, {
                key: 2
            }, [t("div", {
                class: M({
                    active: L.action == 1,
                    O: !0
                }),
                onClick: I => c(L, z, 1, k.$t("betOdd"), "O")
            }, e(k.$t("betOdd")), 11, J2), t("div", {
                class: M({
                    active: L.action == 2,
                    E: !0
                }),
                onClick: I => c(L, z, 2, k.$t("betEven"), "E")
            }, e(k.$t("betEven")), 11, Q2)], 64)) : S("", !0), L.gameType == 3 ? (n(), a(G, {
                key: 3
            }, [t("div", {
                class: M({
                    active: L.action == 1,
                    O: !0
                }),
                onClick: I => c(L, z, 1, k.$t("betWithSingle"), "O")
            }, e(k.$t("betWithSingle")), 11, Y2), t("div", {
                class: M({
                    active: L.action == 2,
                    E: !0
                }),
                onClick: I => c(L, z, 2, k.$t("betWithDouble"), "E")
            }, e(k.$t("betWithDouble")), 11, Z2)], 64)) : S("", !0), L.gameType == 4 ? (n(), a(G, {
                key: 4
            }, [t("div", {
                class: M({
                    active: L.action == 1,
                    H: !0
                }),
                onClick: I => c(L, z, 1, k.$t("betWithBig"), "H")
            }, e(k.$t("betWithBig")), 11, t$), t("div", {
                class: M({
                    active: L.action == 2,
                    L: !0
                }),
                onClick: I => c(L, z, 2, k.$t("betWithSmall"), "L")
            }, e(k.$t("betWithSmall")), 11, e$)], 64)) : S("", !0)], 2)]))), 256))]), N(D2, {
                bettingPopupShow: o.value,
                selectInfo: m.value,
                actionItem: u.value,
                onClearBetting: b,
                onSubmitBetting: y
            }, null, 8, ["bettingPopupShow", "selectInfo", "actionItem"])], 64))
        }
    });
const n$ = H(i$, [
        ["__scopeId", "data-v-823188e5"]
    ]),
    a$ = {
        class: "MyGameRecord__C"
    },
    o$ = {
        key: 0,
        class: "MyGameRecord__C-head"
    },
    s$ = {
        class: "MyGameRecord__C-body"
    },
    l$ = {
        key: 1,
        class: "MyGameRecord__C-body-empty"
    },
    c$ = {
        key: 1,
        class: "MyGameRecord__C-foot"
    },
    r$ = {
        class: "MyGameRecord__C-foot-page"
    },
    u$ = W({
        __name: "MyGameRecord",
        props: {
            typeid: {},
            ApiFun: {},
            goPathName: {},
            hasHead: {
                type: Boolean,
                default: !0
            }
        },
        setup(l, {
            expose: i
        }) {
            const o = l,
                u = gt(),
                m = f(4),
                g = f(20),
                d = f(1),
                c = f([]),
                p = y => {
                    u.push({
                        name: y
                    })
                },
                r = () => {
                    d.value--, b()
                },
                _ = () => {
                    d.value++, b()
                },
                b = async (y = !1) => {
                    if (o.typeid == null) return;
                    y && (d.value = 1);
                    const [v, $] = await ae(o.ApiFun({
                        pageSize: g.value,
                        pageNo: d.value,
                        typeId: o.typeid
                    }));
                    $ && (c.value = ($ == null ? void 0 : $.list) || [], m.value = ($ == null ? void 0 : $.totalPage) || 0)
                };
            return i({
                getData: b
            }), Ce(() => {
                b()
            }), (y, v) => {
                const $ = V("van-icon");
                return n(), a("div", a$, [y.hasHead ? (n(), a("div", o$, [t("div", {
                    class: "MyGameRecord__C-head-moreB",
                    onClick: v[0] || (v[0] = T => p(y.goPathName))
                }, e(y.$t("more")), 1)])) : S("", !0), t("div", s$, [c.value.length ? (n(), Q(Nn, {
                    key: 0,
                    mayrecord: c.value
                }, null, 8, ["mayrecord"])) : (n(), a("div", l$, [N(ve)]))]), c.value.length ? (n(), a("div", c$, [t("div", {
                    class: M(["MyGameRecord__C-foot-previous", {
                        disabled: d.value <= 1
                    }]),
                    onClick: r
                }, [N($, {
                    name: "arrow-left",
                    class: "MyGameRecord__C-icon",
                    size: "20"
                })], 2), t("div", r$, e(d.value) + "/" + e(m.value), 1), t("div", {
                    class: M(["MyGameRecord__C-foot-next", {
                        disabled: d.value >= m.value
                    }]),
                    onClick: _
                }, [N($, {
                    name: "arrow",
                    class: "MyGameRecord__C-icon",
                    size: "20"
                })], 2)])) : S("", !0)])
            }
        }
    });
const xn = H(u$, [
        ["__scopeId", "data-v-27897c55"]
    ]),
    d$ = {
        class: "MyGameRecord__C"
    },
    p$ = {
        key: 0,
        class: "MyGameRecord__C-head"
    },
    g$ = {
        class: "MyGameRecord__C-body"
    },
    m$ = {
        key: 1,
        class: "MyGameRecord__C-body-empty"
    },
    b$ = {
        key: 1,
        class: "MyGameRecord__C-foot"
    },
    _$ = {
        class: "MyGameRecord__C-foot-page"
    },
    v$ = W({
        __name: "MyGameRecord",
        props: {
            typeid: {},
            goPathName: {},
            hasHead: {
                type: Boolean,
                default: !0
            }
        },
        setup(l, {
            expose: i
        }) {
            const o = l,
                u = gt(),
                m = f(4),
                g = f(20),
                d = f(1),
                c = f([]),
                p = v => {
                    u.push({
                        name: v
                    })
                },
                r = () => {
                    d.value--, b()
                },
                _ = () => {
                    d.value++, b()
                },
                b = async (v = !1) => {
                    if (o.typeid == null) return;
                    v && (d.value = 1);
                    const $ = await rt(xa({
                            pageSize: g.value,
                            pageNo: d.value,
                            typeId: o.typeid
                        })),
                        T = ($ == null ? void 0 : $.data.list) || [];
                    for (let C = 0; T.length > C; C++) {
                        let h = T[C].gameType.split(","),
                            k = T[C].selectType.split(",");
                        for (let w = 0; h.length > w; w++)
                            if (h[w] == "1" || h[w] == "2" || h[w] == "3") T[C].gameType = "1", T[C].oneList = k;
                            else if (h[w] == "5" || h[w] == "6") {
                            let L = [],
                                z = [],
                                I = [];
                            for (let x = 0; k.length > x; x++) {
                                if (k[x] == "|11|" || k[x] == "|22|" || k[x] == "|33|" || k[x] == "|44|" || k[x] == "|55|" || k[x] == "|66|") {
                                    let R = k[x].split("|");
                                    R.pop(), R.shift(), L.push(R.join())
                                }
                                if (k[x] == ":11:" || k[x] == ":22:" || k[x] == ":33:" || k[x] == ":44:" || k[x] == ":55:" || k[x] == ":66:") {
                                    let R = k[x].split(":");
                                    R.pop(), R.shift(), z.push(R.join())
                                }
                                if (k[x] == ":1:" || k[x] == ":2:" || k[x] == ":3:" || k[x] == ":4:" || k[x] == ":5:" || k[x] == ":6:") {
                                    let R = k[x].split(":");
                                    R.pop(), R.shift(), I.push(R.join())
                                }
                            }
                            T[C].gameType = "2", T[C].oneList = L, T[C].towList = y(z, I)
                        } else if (h[w] == "7" || h[w] == "8") {
                            let L = [],
                                z = !1;
                            for (let I = 0; k.length > I; I++) {
                                if (k[I] == "|111|" || k[I] == "|222|" || k[I] == "|333|" || k[I] == "|444|" || k[I] == "|555|" || k[I] == "|666|") {
                                    let x = k[I].split("|");
                                    x.pop(), x.shift(), L.push(x.join())
                                }
                                k[I] == "|AAA|" && (z = !0), T[C].oneList = L, T[C].towList = z, T[C].gameType = "3"
                            }
                        } else if (h[w] == "9" || h[w] == "10" || h[w] == "4") {
                            let L = [],
                                z = !1,
                                I = [];
                            for (let x = 0; k.length > x; x++) {
                                if (k[x] == "|1|" || k[x] == "|2|" || k[x] == "|3|" || k[x] == "|4|" || k[x] == "|5|" || k[x] == "|6|") {
                                    let R = k[x].split("|");
                                    R.pop(), R.shift(), L.push(R.join())
                                }
                                if (k[x] == "|ABC|" && (z = !0), k[x] == ".1." || k[x] == ".2." || k[x] == ".3." || k[x] == ".4." || k[x] == ".5." || k[x] == ".6.") {
                                    let R = k[x].split(".");
                                    R.pop(), R.shift(), I.push(R.join())
                                }
                            }
                            T[C].oneList = L, T[C].towList = z, T[C].threeList = I, T[C].gameType = "4"
                        }
                    }
                    c.value = T || [], m.value = ($ == null ? void 0 : $.data.totalPage) || 0
                }, y = (v, $) => {
                    let T = [];
                    for (var C = 0; v.length > C; C++) {
                        let k = v[C],
                            w = [];
                        for (var h = 0; $.length > h; h++) w.push($[h]);
                        if (w.length > 0) {
                            let L = w.sort().join(",");
                            T.push(k + "|" + L)
                        }
                    }
                    return T.sort()
                };
            return i({
                getData: b
            }), Ce(() => {
                b()
            }), (v, $) => {
                const T = V("van-icon");
                return n(), a("div", d$, [v.hasHead ? (n(), a("div", p$, [t("div", {
                    class: "MyGameRecord__C-head-moreB",
                    onClick: $[0] || ($[0] = C => p(v.goPathName))
                }, e(v.$t("more")), 1)])) : S("", !0), t("div", g$, [c.value.length ? (n(), Q(no, {
                    key: 0,
                    mayrecord: c.value
                }, null, 8, ["mayrecord"])) : (n(), a("div", m$, [N(ve)]))]), c.value.length ? (n(), a("div", b$, [t("div", {
                    class: M(["MyGameRecord__C-foot-previous", {
                        disabled: d.value <= 1
                    }]),
                    onClick: r
                }, [N(T, {
                    name: "arrow-left",
                    class: "MyGameRecord__C-icon",
                    size: "20"
                })], 2), t("div", _$, e(d.value) + "/" + e(m.value), 1), t("div", {
                    class: M(["MyGameRecord__C-foot-next", {
                        disabled: d.value >= m.value
                    }]),
                    onClick: _
                }, [N(T, {
                    name: "arrow",
                    class: "MyGameRecord__C-icon",
                    size: "20"
                })], 2)])) : S("", !0)])
            }
        }
    });
const oo = H(v$, [
        ["__scopeId", "data-v-f398e520"]
    ]),
    h$ = {
        class: "BetRecord__C"
    },
    k$ = W({
        __name: "BetRecord",
        setup(l) {
            const i = {
                    Win: xn,
                    FD: io,
                    K3: oo
                },
                o = f(),
                u = f(0),
                m = f(0),
                g = f([{
                    name: "WinGo",
                    com: "Win"
                }, {
                    name: "5D Lotre",
                    com: "FD"
                }, {
                    name: "K3Lotre",
                    com: "K3"
                }]),
                d = f(["1min", "3min", "5min", "10min"]),
                c = f(1),
                p = () => {
                    c.value = u.value * 4 + m.value + 1, ie(() => {
                        o.value && o.value.getData()
                    })
                };
            return ht(() => {
                p()
            }), (r, _) => {
                const b = V("van-tab"),
                    y = V("van-tabs");
                return n(), a("div", h$, [N(y, {
                    class: "BetRecord__C-gameTab",
                    active: u.value,
                    "onUpdate:active": _[1] || (_[1] = v => u.value = v),
                    onClick: p
                }, {
                    default: D(() => [(n(!0), a(G, null, B(g.value, (v, $) => (n(), Q(b, {
                        key: $,
                        title: v.name
                    }, {
                        default: D(() => [N(y, {
                            class: "BetRecord__C-timeTab",
                            active: m.value,
                            "onUpdate:active": _[0] || (_[0] = T => m.value = T)
                        }, {
                            default: D(() => [(n(!0), a(G, null, B(d.value, (T, C) => (n(), Q(b, {
                                key: C,
                                title: T
                            }, null, 8, ["title"]))), 128))]),
                            _: 2
                        }, 1032, ["active"])]),
                        _: 2
                    }, 1032, ["title"]))), 128))]),
                    _: 1
                }, 8, ["active"]), (n(), Q(me(i[g.value[u.value].com]), {
                    ref_key: "RecRef",
                    ref: o,
                    typeid: c.value,
                    "has-head": !1,
                    ApiFun: s(fn),
                    "go-path-name": "0"
                }, null, 8, ["typeid", "ApiFun"]))])
            }
        }
    });
const f$ = H(k$, [
        ["__scopeId", "data-v-a67b8652"]
    ]),
    y$ = {
        class: "changLong__C"
    },
    $$ = W({
        __name: "index",
        setup(l) {
            const i = gt(),
                o = f(0);

            function u() {
                i.go(-1)
            }
            return ht(() => {}), (m, g) => {
                const d = V("NavBar"),
                    c = V("van-tab"),
                    p = V("van-tabs");
                return n(), a("div", y$, [N(d, {
                    "left-arrow": "",
                    title: m.$t("loongAssistant"),
                    "background-color": "#3F3F3F",
                    onClickLeft: u
                }, null, 8, ["title"]), N(p, {
                    class: "changLong__C-tab",
                    active: o.value,
                    "onUpdate:active": g[0] || (g[0] = r => o.value = r)
                }, {
                    default: D(() => [N(c, {
                        title: m.$t("latestLoong")
                    }, null, 8, ["title"]), N(c, {
                        title: m.$t("myBet")
                    }, null, 8, ["title"])]),
                    _: 1
                }, 8, ["active"]), o.value == 0 ? (n(), Q(n$, {
                    key: 0
                })) : (n(), Q(f$, {
                    key: 1
                }))])
            }
        }
    });
const T$ = H($$, [
        ["__scopeId", "data-v-07c65734"]
    ]),
    JD = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: T$
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    C$ = l => (wt("data-v-a5c2a933"), l = l(), Lt(), l),
    w$ = {
        class: "K3TL__C"
    },
    L$ = {
        class: "K3TL__C-l1"
    },
    N$ = {
        class: "left"
    },
    I$ = {
        class: "K3TL__C-l2"
    },
    z$ = {
        class: "K3TL__C-time"
    },
    x$ = C$(() => t("div", {
        notime: ""
    }, ":", -1)),
    S$ = {
        class: "K3TL__C-l3"
    },
    R$ = {
        class: "box"
    },
    G$ = W({
        __name: "TimeLeft",
        props: {
            currentInfo: {
                type: Object,
                default: () => ({
                    gameNo: "loading",
                    currentTime: "",
                    beginTime: "",
                    passTime: 180,
                    time1: 0,
                    time2: 0,
                    time3: 0,
                    time4: 0
                })
            },
            premium: {
                type: String,
                default: "666"
            },
            currentGame: {
                type: Object,
                default: () => ({})
            }
        },
        setup(l) {
            const i = l,
                o = U(() => [...i.premium]),
                u = f(!1),
                m = Je(),
                g = () => {
                    u.value = !0, m.getK3Rule(i.currentGame.typeID)
                };
            return (d, c) => (n(), a(G, null, [t("div", w$, [t("div", L$, [t("div", N$, [t("div", null, e(d.$t("k3Number")), 1), t("div", {
                class: "K3TL__C-rule",
                onClick: g
            }, e(d.$t("winTrxIndicate")), 1)]), t("div", null, e(d.$t("k3TimeLeftToBuy")), 1)]), t("div", I$, [t("div", null, e(i.currentInfo.gameNo), 1), t("div", z$, [t("div", null, e(l.currentInfo.time1), 1), t("div", null, e(l.currentInfo.time2), 1), x$, t("div", null, e(l.currentInfo.time3), 1), t("div", null, e(l.currentInfo.time4), 1)])]), t("div", S$, [t("div", R$, [(n(!0), a(G, null, B(o.value, (p, r) => (n(), a("div", {
                key: r,
                class: M(["num" + p])
            }, null, 2))), 128))])])]), N(Ei, {
                howPlayShow: u.value,
                gamePresentation: l.currentGame.gamePresentation,
                onClose: c[0] || (c[0] = p => u.value = !1)
            }, null, 8, ["howPlayShow", "gamePresentation"])], 64))
        }
    });
const M$ = H(G$, [
        ["__scopeId", "data-v-a5c2a933"]
    ]),
    B$ = {
        class: "K3B__C-bettingList"
    },
    D$ = ["onClick"],
    P$ = {
        key: 1,
        class: ""
    },
    A$ = {
        key: 2,
        class: "K3B__C-odds-rate"
    },
    O$ = {
        key: 3,
        class: "K3B__C-odds-rate"
    },
    W$ = {
        key: 4,
        class: "K3B__C-odds-rate"
    },
    q$ = W({
        __name: "Betting1",
        props: {
            OddsList: {},
            betnumList: {}
        },
        emits: ["showP", "upAll"],
        setup(l, {
            expose: i,
            emit: o
        }) {
            const u = l,
                {
                    t: m
                } = pt(),
                g = f([{
                    num: 3,
                    odds: 191.16,
                    chack: !1
                }, {
                    num: 4,
                    odds: 63.72,
                    chack: !1
                }, {
                    num: 5,
                    odds: 31.86,
                    chack: !1
                }, {
                    num: 6,
                    odds: 19.11,
                    chack: !1
                }, {
                    num: 7,
                    odds: 12.74,
                    chack: !1
                }, {
                    num: 8,
                    odds: 9.1,
                    chack: !1
                }, {
                    num: 9,
                    odds: 7.64,
                    chack: !1
                }, {
                    num: 10,
                    odds: 7.08,
                    chack: !1
                }, {
                    num: 11,
                    odds: 7.08,
                    chack: !1
                }, {
                    num: 12,
                    odds: 7.64,
                    chack: !1
                }, {
                    num: 13,
                    odds: 9.1,
                    chack: !1
                }, {
                    num: 14,
                    odds: 12.74,
                    chack: !1
                }, {
                    num: 15,
                    odds: 19.11,
                    chack: !1
                }, {
                    num: 16,
                    odds: 31.86,
                    chack: !1
                }, {
                    num: 17,
                    odds: 63.72,
                    chack: !1
                }, {
                    num: 18,
                    odds: 191.16,
                    chack: !1
                }, {
                    num: "A",
                    odds: 2,
                    chack: !1
                }, {
                    num: "B",
                    odds: 2,
                    chack: !1
                }, {
                    num: "C",
                    odds: 2,
                    chack: !1
                }, {
                    num: "D",
                    odds: 2,
                    chack: !1
                }]),
                d = y => {
                    switch (y) {
                        case "A":
                            return m("k3Big");
                        case "B":
                            return m("k3Small");
                        case "C":
                            return m("k3Odd");
                        case "D":
                            return m("k3Even");
                        default:
                            return y
                    }
                },
                c = (y, v) => {
                    v < 16 ? g.value[v].chack ? _(y, v) : (u.betnumList.push(y.num), g.value[v].chack = !0) : p(y, v), u.betnumList.length > 0 ? o("showP", !0) : o("showP", !1), o("upAll")
                },
                p = (y, v) => {
                    switch (v) {
                        case 16:
                            r(y, v, 17);
                            break;
                        case 17:
                            r(y, v, 16);
                            break;
                        case 18:
                            r(y, v, 19);
                            break;
                        case 19:
                            r(y, v, 18);
                            break
                    }
                },
                r = (y, v, $) => {
                    g.value[$].chack && _(g.value[$], $), g.value[v].chack ? _(y, v) : (u.betnumList.push(y.num), g.value[v].chack = !0)
                },
                _ = (y, v) => {
                    g.value[v].chack = !1;
                    let $ = u.betnumList.indexOf(y.num);
                    $ > -1 && u.betnumList.splice($, 1)
                };
            return i({
                clearList: () => {
                    g.value = g.value.map(y => (y.chack = !1, y))
                }
            }), (y, v) => (n(), a("div", B$, [(n(!0), a(G, null, B(g.value, ($, T) => (n(), a("div", {
                class: M("num num" + $.num),
                key: T,
                onClick: C => c($, T)
            }, [T < 16 ? (n(), a("div", {
                key: 0,
                class: M(T % 2 == 0 ? "ball rball" : "ball gball")
            }, [t("div", {
                class: M("K3B__C-odds-bet num" + $.num)
            }, e(d($.num)), 3)], 2)) : (n(), a("div", P$, e(d($.num)), 1)), T < 16 ? (n(), a("div", A$, e(u.OddsList[T] && (u.OddsList[T].playRate || u.OddsList[T].playRate_Original)) + "X ", 1)) : T < 18 ? (n(), a("div", O$, e(u.OddsList[16] && (u.OddsList[16].playRate || u.OddsList[16].playRate_Original)) + "X ", 1)) : (n(), a("div", W$, e(u.OddsList[17] && (u.OddsList[17].playRate || u.OddsList[17].playRate_Original)) + "X ", 1))], 10, D$))), 128))]))
        }
    });
const E$ = H(q$, [
        ["__scopeId", "data-v-546758b4"]
    ]),
    H$ = {
        class: "K3B__C-betting2"
    },
    F$ = {
        class: "K3B__C-betting2-tip1"
    },
    V$ = {
        key: 0
    },
    j$ = {
        class: "K3B__C-betting2-line1 mb30"
    },
    U$ = ["onClick"],
    K$ = {
        class: "K3B__C-betting2-tip1"
    },
    X$ = {
        key: 0
    },
    J$ = {
        class: "K3B__C-betting2-line2"
    },
    Q$ = ["onClick"],
    Y$ = {
        class: ""
    },
    Z$ = {
        class: "K3B__C-betting2-line3"
    },
    t3 = ["onClick"],
    e3 = {
        class: ""
    },
    i3 = W({
        __name: "Betting2",
        props: {
            OddsList: {},
            numList: {},
            betnumList: {},
            numTow: {},
            numOne: {},
            numChack: {
                type: Boolean
            }
        },
        emits: ["showP", "upAll", "selectNum", "onQuestion"],
        setup(l, {
            emit: i
        }) {
            const o = l,
                u = (d, c, p) => {
                    let r = d.num,
                        _ = d.num + "" + d.num;
                    if (p == 1)
                        if (o.numList[c].chackOne) {
                            o.numList[c].chackOne = !1;
                            let b = o.numTow.indexOf(_);
                            b > -1 && o.numTow.splice(b, 1)
                        } else {
                            o.numList[c].chackOne = !0, o.numList[c].chackTow = !1;
                            let b = o.numOne.indexOf(r);
                            b > -1 && o.numOne.splice(b, 1), o.numTow.push(_)
                        }
                    else if (o.numList[c].chackTow) {
                        o.numList[c].chackTow = !1;
                        let b = o.numOne.indexOf(r);
                        b > -1 && o.numOne.splice(b, 1)
                    } else {
                        o.numList[c].chackTow = !0, o.numList[c].chackOne = !1;
                        let b = o.numTow.indexOf(_);
                        b > -1 && o.numTow.splice(b, 1), o.numOne.push(r)
                    }
                    i("selectNum"), o.numTow.length > 0 && o.numOne.length > 0 || o.betnumList.length > 0 ? i("showP", !0) : i("showP", !1)
                },
                m = (d, c) => {
                    let p = d.num + "" + d.num;
                    if (o.numList[c].chack) {
                        o.numList[c].chack = !1;
                        let r = o.betnumList.indexOf(p);
                        r > -1 && o.betnumList.splice(r, 1)
                    } else o.betnumList.push(p), o.betnumList.sort(), o.numList[c].chack = !0;
                    o.numChack || o.betnumList.length > 0 || o.numTow.length > 0 && o.numOne.length > 0 ? i("showP", !0) : i("showP", !1)
                },
                g = (d, c) => {
                    i("onQuestion", d, c)
                };
            return ht(() => {}), (d, c) => {
                const p = V("van-icon");
                return n(), a("div", H$, [t("div", F$, [E(e(d.$t("k3bet2Desc1")), 1), d.OddsList[20] ? (n(), a("span", V$, "(" + e(d.OddsList[20].playRate ? d.OddsList[20].playRate : d.OddsList[20].playRate_Original) + ")", 1)) : S("", !0), N(p, {
                    onClick: c[0] || (c[0] = r => g(d.$t("k3bet2Desc2"), [5, 5])),
                    class: "icon",
                    color: "",
                    size: "16",
                    name: "question"
                })]), t("div", j$, [(n(!0), a(G, null, B(d.numList, (r, _) => (n(), a("div", {
                    class: M({
                        active: r.chack
                    }),
                    key: _,
                    onClick: b => m(r, _)
                }, [t("div", null, e(r.num) + e(r.num), 1)], 10, U$))), 128))]), t("div", K$, [E(e(d.$t("k3bet2Desc3")), 1), d.OddsList[19] ? (n(), a("span", X$, "(" + e(d.OddsList[19].playRate ? d.OddsList[19].playRate : d.OddsList[19].playRate_Original) + ")", 1)) : S("", !0), N(p, {
                    onClick: c[1] || (c[1] = r => g(d.$t("k3bet2Desc4"), [6, 1, 6])),
                    class: "icon",
                    color: "",
                    size: "16",
                    name: "question"
                })]), t("div", J$, [(n(!0), a(G, null, B(d.numList, (r, _) => (n(), a("div", {
                    class: M({
                        active: r.chackOne
                    }),
                    key: _,
                    onClick: b => u(r, _, 1)
                }, [t("div", Y$, e(r.num) + e(r.num), 1)], 10, Q$))), 128))]), t("div", Z$, [(n(!0), a(G, null, B(d.numList, (r, _) => (n(), a("div", {
                    class: M({
                        active: r.chackTow
                    }),
                    key: _,
                    onClick: b => u(r, _, 2)
                }, [t("div", e3, e(r.num), 1)], 10, t3))), 128))])])
            }
        }
    });
const n3 = H(i3, [
        ["__scopeId", "data-v-383785d4"]
    ]),
    a3 = {
        class: "K3B__C-betting3"
    },
    o3 = {
        class: "K3B__C-betting3-tip1"
    },
    s3 = {
        key: 0
    },
    l3 = {
        class: "K3B__C-betting3-line1 mb30"
    },
    c3 = ["onClick"],
    r3 = {
        class: "K3B__C-betting3-tip1"
    },
    u3 = {
        key: 0
    },
    d3 = W({
        __name: "Betting3",
        props: {
            OddsList: {},
            numList: {},
            betnumList: {},
            numChack: {},
            numTow: {},
            numOne: {}
        },
        emits: ["showP", "upAll", "selectNum", "cNumChack", "onQuestion"],
        setup(l, {
            emit: i
        }) {
            const o = l,
                u = (d, c) => {
                    let p = d.num + "" + d.num + d.num;
                    if (o.numList[c].chack) {
                        o.numList[c].chack = !1;
                        let r = o.betnumList.indexOf(p);
                        r > -1 && o.betnumList.splice(r, 1)
                    } else o.betnumList.push(p), o.betnumList.sort(), o.numList[c].chack = !0;
                    o.numChack || o.betnumList.length > 0 || o.numTow.length > 0 && o.numOne.length > 0 ? i("showP", !0) : i("showP", !1)
                },
                m = () => {
                    i("cNumChack"), ie(() => {
                        o.numChack || o.betnumList.length > 0 || o.numTow.length > 1 || o.numOne.length > 2 ? i("showP", !0) : i("showP", !1)
                    })
                },
                g = (d, c) => {
                    i("onQuestion", d, c)
                };
            return ht(() => {}), (d, c) => {
                const p = V("van-icon");
                return n(), a("div", a3, [t("div", o3, [E(e(d.$t("k3bet3Desc1")) + " ", 1), d.OddsList[21] ? (n(), a("span", s3, "(" + e(d.OddsList[21].playRate ? d.OddsList[21].playRate : d.OddsList[21].playRate_Original) + ")", 1)) : S("", !0), N(p, {
                    onClick: c[0] || (c[0] = r => g(d.$t("k3bet3Desc2"), [6, 6, 6])),
                    class: "icon",
                    color: "#D9AC4F",
                    size: "16",
                    name: "question"
                })]), t("div", l3, [(n(!0), a(G, null, B(d.numList, (r, _) => (n(), a("div", {
                    class: M({
                        active: r.chack
                    }),
                    key: _,
                    onClick: b => u(r, _)
                }, [t("div", null, e(r.num) + e(r.num) + e(r.num), 1)], 10, c3))), 128))]), t("div", r3, [E(e(d.$t("k3bet3Desc3")) + " ", 1), d.OddsList[22] ? (n(), a("span", u3, "(" + e(d.OddsList[22].playRate ? d.OddsList[22].playRate : d.OddsList[22].playRate_Original) + ")", 1)) : S("", !0), N(p, {
                    onClick: c[1] || (c[1] = r => g(d.$t("k3bet3Desc5"), [7, 7, 7])),
                    class: "icon",
                    color: "#D9AC4F",
                    size: "16",
                    name: "question"
                })]), t("div", {
                    class: M(["K3B__C-betting3-btn", {
                        active: o.numChack
                    }]),
                    onClick: m
                }, e(d.$t("k3bet3Desc4")), 3)])
            }
        }
    });
const p3 = H(d3, [
        ["__scopeId", "data-v-1ace94bb"]
    ]),
    g3 = {
        class: "K3B__C-betting4"
    },
    m3 = {
        class: "K3B__C-betting4-tip1"
    },
    b3 = {
        key: 0
    },
    _3 = {
        class: "K3B__C-betting4-line1 mb30"
    },
    v3 = ["onClick"],
    h3 = {
        class: "K3B__C-betting4-tip1"
    },
    k3 = {
        key: 0
    },
    f3 = {
        class: "K3B__C-betting4-tip1"
    },
    y3 = {
        key: 0
    },
    $3 = {
        class: "K3B__C-betting4-line1"
    },
    T3 = ["onClick"],
    C3 = W({
        __name: "Betting4",
        props: {
            OddsList: {},
            numList: {},
            numTow: {},
            numOne: {},
            numChack: {},
            betnumList: {}
        },
        emits: ["showP", "upAll", "selectNum", "cNumChack", "onQuestion"],
        setup(l, {
            emit: i
        }) {
            const o = l,
                u = (d, c, p) => {
                    if (p == 1)
                        if (o.numList[c].chackOne) {
                            o.numList[c].chackOne = !1;
                            var r = o.numOne.indexOf(d.num);
                            r > -1 && o.numOne.splice(r, 1)
                        } else o.numList[c].chackOne = !0, o.numOne.push(d.num), o.numOne.sort();
                    else if (o.numList[c].chackTow) {
                        o.numList[c].chackTow = !1;
                        var c = o.numTow.indexOf(d.num);
                        c > -1 && o.numTow.splice(c, 1)
                    } else o.numList[c].chackTow = !0, o.numTow.push(d.num), o.numTow.sort();
                    o.numChack || o.numTow.length > 1 || o.numOne.length > 2 ? i("showP", !0) : i("showP", !1)
                },
                m = (d, c) => {
                    i("onQuestion", d, c)
                },
                g = () => {
                    i("cNumChack"), ie(() => {
                        o.numChack || o.betnumList.length > 0 || o.numTow.length > 1 || o.numOne.length > 2 ? i("showP", !0) : i("showP", !1)
                    })
                };
            return ht(() => {}), (d, c) => {
                const p = V("van-icon");
                return n(), a("div", g3, [t("div", m3, [E(e(d.$t("k3bet4Desc1")) + " ", 1), d.OddsList[23] ? (n(), a("span", b3, "(" + e(d.OddsList[23].playRate ? d.OddsList[23].playRate : d.OddsList[23].playRate_Original) + ")", 1)) : S("", !0), N(p, {
                    onClick: c[0] || (c[0] = r => m(d.$t("k3bet4Desc2"), [1, 2, 4])),
                    class: "icon",
                    color: "#D9AC4F",
                    size: "16",
                    name: "question"
                })]), t("div", _3, [(n(!0), a(G, null, B(d.numList, (r, _) => (n(), a("div", {
                    class: M({
                        active: r.chackOne
                    }),
                    key: _,
                    onClick: b => u(r, _, 1)
                }, [t("div", null, e(r.num), 1)], 10, v3))), 128))]), t("div", h3, [E(e(d.$t("k3bet4Desc3")) + " ", 1), d.OddsList[24] ? (n(), a("span", k3, "(" + e(d.OddsList[24].playRate ? d.OddsList[24].playRate : d.OddsList[24].playRate_Original) + ")", 1)) : S("", !0), N(p, {
                    onClick: c[1] || (c[1] = r => m(d.$t("k3bet4Desc4"), [1, 2, 3])),
                    class: "icon",
                    color: "#D9AC4F",
                    size: "16",
                    name: "question"
                })]), t("div", {
                    class: M(["K3B__C-betting4-btn", {
                        active: d.numChack
                    }]),
                    onClick: g
                }, e(d.$t("betPopDesc7")), 3), t("div", f3, [E(e(d.$t("k3bet4Desc5")) + " ", 1), d.OddsList[18] ? (n(), a("span", y3, "(" + e(d.OddsList[18].playRate ? d.OddsList[18].playRate : d.OddsList[18].playRate_Original) + ")", 1)) : S("", !0), N(p, {
                    onClick: c[2] || (c[2] = r => m(d.$t("k3bet4Desc6"), [1, 2])),
                    class: "icon",
                    color: "#D9AC4F",
                    size: "16",
                    name: "question"
                })]), t("div", $3, [(n(!0), a(G, null, B(d.numList, (r, _) => (n(), a("div", {
                    class: M({
                        active: r.chackTow
                    }),
                    key: _,
                    onClick: b => u(r, _, 2)
                }, [t("div", null, e(r.num), 1)], 10, T3))), 128))])])
            }
        }
    });
const w3 = H(C3, [
        ["__scopeId", "data-v-6741c1eb"]
    ]),
    L3 = l => (wt("data-v-d519a2ac"), l = l(), Lt(), l),
    N3 = {
        class: "Betting__Popup-body"
    },
    I3 = {
        key: 0,
        class: "Betting__Popup-type1"
    },
    z3 = {
        class: "title"
    },
    x3 = {
        class: "list"
    },
    S3 = {
        key: 0,
        class: "Betting__Popup-type2"
    },
    R3 = {
        class: "title"
    },
    G3 = {
        class: "list"
    },
    M3 = {
        key: 1,
        class: "Betting__Popup-type2"
    },
    B3 = {
        class: "title"
    },
    D3 = {
        class: "list"
    },
    P3 = ["innerHTML"],
    A3 = {
        key: 0,
        class: "Betting__Popup-type2"
    },
    O3 = {
        class: "title"
    },
    W3 = {
        class: "list"
    },
    q3 = {
        key: 1,
        class: "title"
    },
    E3 = {
        key: 2,
        class: "Betting__Popup-type2-r"
    },
    H3 = {
        key: 0,
        class: "Betting__Popup-type2"
    },
    F3 = {
        class: "title"
    },
    V3 = {
        class: "list"
    },
    j3 = {
        key: 1,
        class: "title"
    },
    U3 = {
        key: 2,
        class: "Betting__Popup-type2-r"
    },
    K3 = {
        key: 3,
        class: "Betting__Popup-type2"
    },
    X3 = {
        class: "title"
    },
    J3 = {
        class: "list"
    },
    Q3 = {
        class: "Betting__Popup-body-line"
    },
    Y3 = {
        class: "Betting__Popup-body-line-list"
    },
    Z3 = ["onClick"],
    t5 = {
        class: "Betting__Popup-body-line"
    },
    e5 = {
        class: "Betting__Popup-body-line-btnL"
    },
    i5 = {
        class: "Betting__Popup-body-line"
    },
    n5 = L3(() => t("div", null, null, -1)),
    a5 = {
        class: "Betting__Popup-body-line-list"
    },
    o5 = ["onClick"],
    s5 = {
        class: "Betting__Popup-body-line"
    },
    l5 = {
        class: "Betting__Popup-foot"
    },
    c5 = {
        class: "Betting__Popup-foot-s bgcolor"
    },
    r5 = {
        class: "Betting__Popup-PreSale"
    },
    u5 = {
        class: "Betting__Popup-PreSale-head"
    },
    d5 = {
        class: "Betting__Popup-PreSale-body"
    },
    p5 = {
        class: "Betting__Popup-PreSale-foot"
    },
    g5 = W({
        __name: "BettingPopup",
        props: {
            currentInfo: {},
            currentGame: {},
            bettingPopupShow: {},
            betTypeList: {},
            betnumList: {},
            numTow: {},
            numOne: {},
            actNav: {},
            numTowList: {},
            numChack: {}
        },
        emits: ["update:bettingPopupShow", "update:selectInfo", "clearBetting", "submitBetting"],
        setup(l, {
            expose: i,
            emit: o
        }) {
            const u = l,
                {
                    t: m
                } = pt(),
                g = f(!1),
                d = f(!0),
                c = U(() => u.currentGame.betMultiple.split("|"));
            Ot(() => u.bettingPopupShow, () => {
                p.value.coin = Number(u.betTypeList[0]), p.value.count = c.value[0]
            });
            const p = f({
                coin: 0,
                count: c.value[0],
                allCoin: 0,
                gametype: 0,
                typeid: 1,
                issuenumber: "",
                selecttype: "1"
            });
            Ot(() => c, () => {
                p.value.count = c.value[0]
            }, {
                deep: !0,
                immediate: !0
            });
            let r = U({
                get() {
                    return h(), u.bettingPopupShow || !1
                },
                set(I) {
                    o("update:bettingPopupShow", I)
                }
            });
            const _ = I => {
                    switch (I) {
                        case 1:
                            p.value.count > 1 && (p.value.count--, h());
                            break;
                        case 2:
                            p.value.count++, h();
                            break
                    }
                },
                b = I => {
                    I > 0 && (p.value.count = parseInt(I), h())
                },
                y = I => {
                    p.value.count = I, h()
                },
                v = I => {
                    p.value.coin = I, h()
                },
                $ = () => {
                    g.value = !1, d.value = !0
                },
                T = async () => {
                    if (!d.value) {
                        Te(m("agreePresaleRules"));
                        return
                    }
                    let {
                        coin: I,
                        count: x,
                        selecttype: R
                    } = p.value;
                    if (x == 0) return qt(m("bteNoCount"));
                    let O = null,
                        P = u.betnumList;
                    if (u.actNav === 0 && u.betnumList.length) {
                        O = C(u.betnumList), P.sort();
                        for (let X = 0; P.length > X; X++) P[X] == "A" && (P[X] = "H"), P[X] == "B" && (P[X] = "L"), P[X] == "C" && (P[X] = "O"), P[X] == "D" && (P[X] = "E");
                        R = P.join(",")
                    } else if (u.actNav == 1) {
                        let X = [],
                            at = "",
                            ct = "";
                        if (P.length > 0) {
                            let ot = [];
                            for (let J = 0; P.length > J; J++) {
                                let Z = "|" + P[J] + "|";
                                ot.push(Z)
                            }
                            ct = ot.join(","), X.push(6)
                        }
                        if (u.numTowList.length > 0) {
                            let ot = [],
                                J = [];
                            for (let Z = 0; u.numOne.length > Z; Z++) {
                                let lt = ":" + u.numOne[Z] + ":";
                                ot.push(lt), ot = ot.sort()
                            }
                            for (let Z = 0; u.numTow.length > Z; Z++) {
                                let lt = ":" + u.numTow[Z] + ":";
                                J.push(lt), J = J.sort()
                            }
                            at = J.join(",") + "," + ot.join(","), X.push(5)
                        }
                        X = X.sort((ot, J) => ot - J), O = X.join(","), at && (R = at), ct && (R = ct), at && ct && (R = at + "," + ct)
                    } else if (u.actNav == 2) {
                        let X = [],
                            at = "",
                            ct = "";
                        if (P.length > 0) {
                            let ot = [];
                            for (let J = 0; P.length > J; J++) {
                                let Z = "|" + P[J] + "|";
                                ot.push(Z), ot = ot.sort()
                            }
                            at = ot.join(","), X.push(7)
                        }
                        u.numChack && (ct = "|AAA|", X.push(8)), X = X.sort((ot, J) => ot - J), O = X.join(","), at && (R = at), ct && (R = ct), at && ct && (R = at + "," + ct)
                    } else if (u.actNav == 3) {
                        let X = [],
                            at = "",
                            ct = "",
                            ot = "";
                        if (u.numOne.length > 2) {
                            let J = [];
                            for (let Z = 0; u.numOne.length > Z; Z++) {
                                let lt = "|" + u.numOne[Z] + "|";
                                J.push(lt), J = J.sort()
                            }
                            at = J.join(","), X.push(9)
                        }
                        if (u.numChack && (ct = "|ABC|", X.push(10)), u.numTow.length > 1) {
                            let J = [];
                            for (let Z = 0; u.numTow.length > Z; Z++) {
                                let lt = "." + u.numTow[Z] + ".";
                                J.push(lt), J = J.sort()
                            }
                            ot = J.join(","), X.push(4)
                        }
                        X = X.sort((J, Z) => J - Z), O = X.join(","), ot && (R = ot), at && (R = at), ct && (R = ct), at && ct && (R = at + "," + ct), ot && at && (R = ot + "," + at), ot && ct && (R = ot + "," + ct), ot && at && ct && (R = ot + "," + at + "," + ct)
                    }
                    const K = await rt(Ra({
                        amount: I,
                        betCount: Number(x),
                        gameType: O,
                        selectType: R,
                        typeId: u.currentGame.typeID,
                        issuenumber: u.currentInfo.gameNo
                    }));
                    (K == null ? void 0 : K.code) === 0 ? (Te(m("code" + (K == null ? void 0 : K.msgCode))), o("submitBetting", u.currentInfo.gameNo)) : o("clearBetting")
                }, C = I => {
                    let x = [];
                    for (let R = 0; I.length > R; R++) {
                        if (I[R] == "3" || I[R] == "4" || I[R] == "5" || I[R] == "6" || I[R] == "7" || I[R] == "8" || I[R] == "9" || I[R] == "10" || I[R] == "11" || I[R] == "12" || I[R] == "13" || I[R] == "14" || I[R] == "15" || I[R] == "16" || I[R] == "17" || I[R] == "18") {
                            x.push(1);
                            continue
                        }
                        if (I[R] == "A" || I[R] == "B") {
                            x.push(2);
                            continue
                        }
                        if (I[R] == "C" || I[R] == "D") {
                            x.push(3);
                            continue
                        }
                    }
                    return x = x.sort(function(R, O) {
                        return R - O
                    }), [...new Set(x)].join(",")
                }, h = () => {
                    const I = u.betnumList.length + k() + (u.numChack ? 1 : 0) + w(u.numOne, 3) + w(u.numTow);
                    p.value.allCoin = p.value.coin * p.value.count * I
                }, k = () => {
                    const I = u.numTowList.length;
                    return I && u.numTowList[0].split("|")[1].split(",").length * I
                }, w = (I, x = 2) => {
                    if (u.actNav != 3) return 0;

                    function R(P) {
                        let K = 1;
                        for (let X = 2; X <= P; X++) K *= X;
                        return K
                    }
                    const O = I.length;
                    return O < x ? 0 : R(O) / (R(x) * R(O - x))
                }, L = I => {
                    switch (I) {
                        case "A":
                            return m("betBig");
                        case "B":
                            return m("betSmall");
                        case "C":
                            return m("betOdd");
                        case "D":
                            return m("betEven");
                        default:
                            return I
                    }
                }, z = I => {
                    let x = I.split("|"),
                        R = "";
                    return x.forEach(O => {
                        R += `<div>${O}</div>`
                    }), R
                };
            return i({
                setAllCoin: h
            }), (I, x) => {
                const R = V("van-field"),
                    O = V("van-popup"),
                    P = zt("throttle-click");
                return n(), a(G, null, [N(O, {
                    show: s(r),
                    "onUpdate:show": x[6] || (x[6] = K => oe(r) ? r.value = K : r = K),
                    position: "bottom",
                    style: {
                        "box-shadow": "0px -18px 40px rgba(37, 37, 60, 0.26)",
                        background: "#3A3A3A"
                    },
                    round: !0,
                    overlay: !1,
                    "close-on-click-overlay": !1,
                    "lock-scroll": !1
                }, {
                    default: D(() => [t("div", N3, [I.actNav === 0 && I.betnumList.length ? (n(), a("div", I3, [t("p", z3, e(I.$t("betPopDesc1")), 1), t("div", x3, [(n(!0), a(G, null, B(I.betnumList, (K, X) => (n(), a("div", {
                        class: M(K % 2 === 0 ? "green" : "red num" + K),
                        key: X
                    }, e(L(K)), 3))), 128))])])) : S("", !0), I.actNav === 1 ? (n(), a(G, {
                        key: 1
                    }, [I.betnumList.length ? (n(), a("div", S3, [t("p", R3, e(I.$t("betPopDesc2")), 1), t("div", G3, [(n(!0), a(G, null, B(I.betnumList, (K, X) => (n(), a("div", {
                        key: X,
                        class: "Betting__Popup-type2-d"
                    }, e(L(K)), 1))), 128))])])) : S("", !0), I.numTowList.length ? (n(), a("div", M3, [t("p", B3, e(I.$t("betPopDesc3")), 1), t("div", D3, [(n(!0), a(G, null, B(I.numTowList, (K, X) => (n(), a("div", {
                        key: X,
                        class: "Betting__Popup-type2-o",
                        innerHTML: z(K)
                    }, null, 8, P3))), 128))])])) : S("", !0)], 64)) : S("", !0), I.actNav === 2 ? (n(), a(G, {
                        key: 2
                    }, [I.betnumList.length ? (n(), a("div", A3, [t("p", O3, e(I.$t("betPopDesc4")), 1), t("div", W3, [(n(!0), a(G, null, B(I.betnumList, (K, X) => (n(), a("div", {
                        key: X,
                        class: "Betting__Popup-type2-d"
                    }, e(L(K)), 1))), 128))])])) : S("", !0), I.numChack ? (n(), a("p", q3, e(I.$t("betPopDesc5")), 1)) : S("", !0), I.numChack ? (n(), a("div", E3, e(I.$t("k3bet3Desc4")), 1)) : S("", !0)], 64)) : S("", !0), I.actNav === 3 ? (n(), a(G, {
                        key: 3
                    }, [I.numOne.length > 2 ? (n(), a("div", H3, [t("p", F3, e(I.$t("betPopDesc6")), 1), t("div", V3, [(n(!0), a(G, null, B(I.numOne, (K, X) => (n(), a("div", {
                        key: X,
                        class: "Betting__Popup-type2-d"
                    }, e(L(K)), 1))), 128))])])) : S("", !0), I.numChack ? (n(), a("p", j3, e(I.$t("betPopDesc7")), 1)) : S("", !0), I.numChack ? (n(), a("div", U3, e(I.$t("betPopDesc7")), 1)) : S("", !0), I.numTow.length > 1 ? (n(), a("div", K3, [t("p", X3, e(I.$t("betPopDesc8")), 1), t("div", J3, [(n(!0), a(G, null, B(I.numTow, (K, X) => (n(), a("div", {
                        key: X,
                        class: "Betting__Popup-type2-d"
                    }, e(L(K)), 1))), 128))])])) : S("", !0)], 64)) : S("", !0), t("div", Q3, [E(e(s(m)("amount")) + " ", 1), t("div", Y3, [(n(!0), a(G, null, B(I.betTypeList, (K, X) => (n(), a("div", {
                        key: X,
                        class: M(["Betting__Popup-body-line-item", {
                            bgcolor: p.value.coin == K
                        }]),
                        onClick: at => v(K)
                    }, e(K), 11, Z3))), 128))])]), t("div", t5, [E(e(s(m)("numbers")) + " ", 1), t("div", e5, [t("div", {
                        class: M(["Betting__Popup-btn", {
                            bgcolor: p.value.count > 0
                        }]),
                        onClick: x[0] || (x[0] = K => _(1))
                    }, "-", 2), N(R, {
                        class: "Betting__Popup-input",
                        modelValue: p.value.count,
                        "onUpdate:modelValue": x[1] || (x[1] = K => p.value.count = K),
                        type: "digit",
                        maxlength: 4,
                        onInput: b
                    }, null, 8, ["modelValue"]), t("div", {
                        class: "Betting__Popup-btn bgcolor",
                        onClick: x[2] || (x[2] = K => _(2))
                    }, "+")])]), t("div", i5, [n5, t("div", a5, [(n(!0), a(G, null, B(c.value, (K, X) => (n(), a("div", {
                        key: X,
                        class: M(["Betting__Popup-body-line-item border", {
                            bgcolor: p.value.count == K
                        }]),
                        onClick: at => y(K)
                    }, " X" + e(K), 11, o5))), 128))])]), t("div", s5, [t("span", {
                        class: M(["Betting__Popup-agree", {
                            active: d.value
                        }]),
                        onClick: x[3] || (x[3] = K => d.value = !d.value)
                    }, e(s(m)("agree")), 3), t("span", {
                        onClick: x[4] || (x[4] = K => g.value = !0),
                        class: "Betting__Popup-preSaleShow"
                    }, e(s(m)("presaleRules")), 1)])]), t("div", l5, [t("div", {
                        class: "Betting__Popup-foot-c",
                        onClick: x[5] || (x[5] = K => o("clearBetting"))
                    }, e(s(m)("cancel")), 1), et((n(), a("div", c5, [E(e(s(m)("totalAmount")) + " " + e(s(xt)(p.value.allCoin || 0)), 1)])), [
                        [P, {
                            handler: T,
                            wait: 2e3
                        }]
                    ])])]),
                    _: 1
                }, 8, ["show"]), N(O, {
                    show: g.value,
                    "onUpdate:show": x[7] || (x[7] = K => g.value = K),
                    "close-on-click-overlay": !1,
                    round: ""
                }, {
                    default: D(() => [t("div", r5, [t("div", u5, e(s(m)("presaleRules")), 1), t("div", d5, e(I.$t("betPopTXT")), 1), t("div", p5, [t("div", {
                        class: "Betting__Popup-PreSale-foot-btn",
                        onClick: $
                    }, e(s(m)("iKonw")), 1)])])]),
                    _: 1
                }, 8, ["show"])], 64)
            }
        }
    });
const m5 = H(g5, [
        ["__scopeId", "data-v-d519a2ac"]
    ]),
    b5 = {
        class: "K3B__C"
    },
    _5 = {
        class: "K3B__C-mark"
    },
    v5 = {
        class: "K3B__C-nav"
    },
    h5 = ["onClick"],
    k5 = {
        class: "qpopup-box"
    },
    f5 = {
        class: "qpopup-box-list"
    },
    y5 = {
        class: "qpopup-box-txt"
    },
    $5 = W({
        __name: "Betting",
        props: {
            currentInfo: {
                type: Object,
                default: () => ({})
            },
            ProhibitBuyTime: {
                type: Number,
                default: 5
            },
            currentGame: {
                type: Object,
                default: () => ({})
            }
        },
        emits: ["betting", "changeBettingP"],
        setup(l, {
            expose: i,
            emit: o
        }) {
            const u = l,
                {
                    t: m
                } = pt(),
                g = {
                    bt1: E$,
                    bt2: n3,
                    bt3: p3,
                    bt4: w3
                },
                d = f(),
                c = f(),
                p = f([]),
                r = f(0),
                _ = f([{
                    name: m("totalBet"),
                    comp: "bt1"
                }, {
                    name: m("sameNum"),
                    comp: "bt2"
                }, {
                    name: m("numbersMatch"),
                    comp: "bt3"
                }, {
                    name: m("numbersUnmatch"),
                    comp: "bt4"
                }]),
                b = f([{
                    num: 1,
                    chack: !1,
                    chackOne: !1,
                    chackTow: !1
                }, {
                    num: 2,
                    chack: !1,
                    chackOne: !1,
                    chackTow: !1
                }, {
                    num: 3,
                    chack: !1,
                    chackOne: !1,
                    chackTow: !1
                }, {
                    num: 4,
                    chack: !1,
                    chackOne: !1,
                    chackTow: !1
                }, {
                    num: 5,
                    chack: !1,
                    chackOne: !1,
                    chackTow: !1
                }, {
                    num: 6,
                    chack: !1,
                    chackOne: !1,
                    chackTow: !1
                }]),
                y = f([]),
                v = f([]),
                $ = f([]),
                T = f(!1),
                C = f([]),
                h = f(!1),
                k = U(() => (u.currentInfo.passTime < u.ProhibitBuyTime && L(), u.currentInfo.passTime < u.ProhibitBuyTime)),
                w = U(() => u.currentGame.scope ? u.currentGame.scope.split("|").map(ot => Number(ot)) : []),
                L = () => {
                    h.value = !1, z()
                },
                z = () => {
                    c.value.clearList && c.value.clearList(), y.value = [], v.value = [], $.value = [], T.value = !1, C.value = [], b.value = [{
                        num: 1,
                        chack: !1,
                        chackOne: !1,
                        chackTow: !1
                    }, {
                        num: 2,
                        chack: !1,
                        chackOne: !1,
                        chackTow: !1
                    }, {
                        num: 3,
                        chack: !1,
                        chackOne: !1,
                        chackTow: !1
                    }, {
                        num: 4,
                        chack: !1,
                        chackOne: !1,
                        chackTow: !1
                    }, {
                        num: 5,
                        chack: !1,
                        chackOne: !1,
                        chackTow: !1
                    }, {
                        num: 6,
                        chack: !1,
                        chackOne: !1,
                        chackTow: !1
                    }]
                },
                I = async () => {
                    const ot = await rt(Gs());
                    p.value = (ot == null ? void 0 : ot.data) || []
                }, x = () => {
                    d.value.setAllCoin()
                }, R = ot => {
                    r.value = ot, h.value = !1, z()
                }, O = () => {
                    let ot = [];
                    for (let J = 0; v.value.length > J; J++) {
                        let Z = v.value[J],
                            lt = [];
                        for (let Rt = 0; $.value.length > Rt; Rt++) lt.push($.value[Rt]);
                        if (lt.length > 0) {
                            let Rt = lt.sort().join(",");
                            ot.push(Z + "|" + Rt)
                        }
                    }
                    C.value = ot.sort()
                }, P = async ot => {
                    o("betting", ot), h.value = !1, z()
                }, K = f(!1), X = f([]), at = f(""), ct = (ot, J) => {
                    at.value = ot, X.value = J, K.value = !0
                };
            return ht(() => {
                I()
            }), i({
                bettingPopupShow: h
            }), (ot, J) => {
                const Z = V("van-popup");
                return n(), a("div", b5, [et(t("div", _5, [t("div", null, e(u.currentInfo.time3 || "0"), 1), t("div", null, e(u.currentInfo.time4 || "0"), 1)], 512), [
                    [Vt, k.value]
                ]), t("div", v5, [(n(!0), a(G, null, B(_.value, (lt, Rt) => (n(), a("div", {
                    key: Rt,
                    class: M({
                        active: r.value == Rt
                    }),
                    onClick: Nt => R(Rt)
                }, e(lt.name), 11, h5))), 128))]), (n(), Q(me(g[_.value[r.value].comp]), {
                    ref_key: "BetRef",
                    ref: c,
                    OddsList: p.value,
                    numList: b.value,
                    numTow: v.value,
                    numOne: $.value,
                    numChack: T.value,
                    betnumList: y.value,
                    onSelectNum: O,
                    onShowP: J[0] || (J[0] = lt => h.value = lt),
                    onUpAll: x,
                    onCNumChack: J[1] || (J[1] = lt => T.value = !T.value),
                    onOnQuestion: ct
                }, null, 40, ["OddsList", "numList", "numTow", "numOne", "numChack", "betnumList"])), N(m5, {
                    ref_key: "betPopupRef",
                    ref: d,
                    currentInfo: u.currentInfo,
                    bettingPopupShow: h.value,
                    numTow: v.value,
                    numOne: $.value,
                    betTypeList: w.value,
                    numTowList: C.value,
                    currentGame: l.currentGame,
                    actNav: r.value,
                    betnumList: y.value,
                    numChack: T.value,
                    onClearBetting: L,
                    onSubmitBetting: P
                }, null, 8, ["currentInfo", "bettingPopupShow", "numTow", "numOne", "betTypeList", "numTowList", "currentGame", "actNav", "betnumList", "numChack"]), N(Z, {
                    class: "qpopup",
                    show: K.value,
                    "onUpdate:show": J[2] || (J[2] = lt => K.value = lt),
                    "close-on-click-overlay": !1,
                    closeable: "",
                    "close-icon": "close",
                    "close-icon-position": "bottom-left",
                    round: ""
                }, {
                    default: D(() => [t("div", k5, [t("div", f5, [(n(!0), a(G, null, B(X.value, (lt, Rt) => (n(), a("div", {
                        class: M("num num" + lt),
                        key: Rt
                    }, null, 2))), 128))]), t("div", y5, e(at.value), 1)])]),
                    _: 1
                }, 8, ["show"])])
            }
        }
    });
const T5 = H($5, [
        ["__scopeId", "data-v-4b0cace2"]
    ]),
    C5 = {
        class: "GameRecord__C"
    },
    w5 = {
        class: "GameRecord__C-head"
    },
    L5 = {
        class: "GameRecord__C-body"
    },
    N5 = {
        class: "GameRecord__C-body-premium"
    },
    I5 = {
        key: 1,
        class: "GameRecord__C-body-empty"
    },
    z5 = {
        key: 0,
        class: "GameRecord__C-foot"
    },
    x5 = {
        class: "GameRecord__C-foot-page"
    },
    S5 = W({
        __name: "GameRecord",
        props: {
            typeid: {}
        },
        setup(l, {
            expose: i
        }) {
            const o = l,
                u = f([]),
                m = f(4),
                g = f(10),
                d = f(1),
                c = () => {
                    d.value--, r()
                },
                p = () => {
                    d.value++, r()
                },
                r = async (_ = !1) => {
                    if (o.typeid == null) return;
                    _ && (d.value = 1);
                    const [b, y] = await ae($n({
                        pageSize: g.value,
                        pageNo: d.value,
                        typeId: o.typeid
                    }));
                    u.value = y.list || [], m.value = y.totalPage
                };
            return i({
                getData: r
            }), Ce(() => {
                r()
            }), (_, b) => {
                const y = V("van-col"),
                    v = V("van-row"),
                    $ = V("van-icon");
                return n(), a("div", C5, [t("div", w5, [N(v, null, {
                    default: D(() => [N(y, {
                        span: "10"
                    }, {
                        default: D(() => [E(e(_.$t("gameRecordNum")), 1)]),
                        _: 1
                    }), N(y, {
                        span: "4"
                    }, {
                        default: D(() => [E(e(_.$t("gameRecordTotal")), 1)]),
                        _: 1
                    }), N(y, {
                        span: "10"
                    }, {
                        default: D(() => [E(e(_.$t("gameRecordResult")), 1)]),
                        _: 1
                    })]),
                    _: 1
                })]), t("div", L5, [u.value.length ? (n(!0), a(G, {
                    key: 0
                }, B(u.value, (T, C) => (n(), Q(v, {
                    key: C
                }, {
                    default: D(() => [N(y, {
                        span: "8"
                    }, {
                        default: D(() => [E(e(T.issueNumber), 1)]),
                        _: 2
                    }, 1024), N(y, {
                        span: "1"
                    }, {
                        default: D(() => [t("span", null, e(T.sumCount), 1)]),
                        _: 2
                    }, 1024), N(y, {
                        span: "4"
                    }, {
                        default: D(() => [t("span", null, e(T.sumCount > 10 ? _.$t("big") : _.$t("small")), 1)]),
                        _: 2
                    }, 1024), N(y, {
                        span: "4"
                    }, {
                        default: D(() => [t("span", null, e(T.sumCount % 2 ? _.$t("k3Odd") : _.$t("k3Even")), 1)]),
                        _: 2
                    }, 1024), N(y, {
                        span: "6"
                    }, {
                        default: D(() => [t("div", N5, [(n(!0), a(G, null, B(T.premium, (h, k) => (n(), a("div", {
                            key: k,
                            class: M("n" + h)
                        }, null, 2))), 128))])]),
                        _: 2
                    }, 1024)]),
                    _: 2
                }, 1024))), 128)) : (n(), a("div", I5, [N(ve)]))]), u.value.length ? (n(), a("div", z5, [t("div", {
                    class: M(["GameRecord__C-foot-previous", {
                        disabled: d.value <= 1
                    }]),
                    onClick: c
                }, [N($, {
                    name: "arrow-left",
                    class: "GameRecord__C-icon",
                    size: "20"
                })], 2), t("div", x5, e(d.value) + "/" + e(m.value), 1), t("div", {
                    class: M(["GameRecord__C-foot-next", {
                        disabled: d.value >= m.value
                    }]),
                    onClick: p
                }, [N($, {
                    name: "arrow",
                    class: "GameRecord__C-icon",
                    size: "20"
                })], 2)])) : S("", !0)])
            }
        }
    });
const R5 = H(S5, [
        ["__scopeId", "data-v-bc985eb8"]
    ]),
    G5 = {
        class: "Trend__C"
    },
    M5 = {
        class: "Trend__C-head"
    },
    B5 = {
        class: "Trend__C-body"
    },
    D5 = {
        class: "Trend__C-body-premium"
    },
    P5 = {
        class: "Trend__C-body-gameText"
    },
    A5 = {
        key: 1,
        class: "Trend__C-body-empty"
    },
    O5 = {
        key: 0,
        class: "Trend__C-foot"
    },
    W5 = {
        class: "Trend__C-foot-page"
    },
    q5 = W({
        __name: "Trend",
        props: {
            typeid: {}
        },
        setup(l, {
            expose: i
        }) {
            const o = l,
                {
                    t: u
                } = pt(),
                m = f([]),
                g = f(4),
                d = f(10),
                c = f(1),
                p = () => {
                    c.value--, _()
                },
                r = () => {
                    c.value++, _()
                },
                _ = async (v = !1) => {
                    if (o.typeid == null) return;
                    v && (c.value = 1);
                    const [$, T] = await ae($n({
                        pageSize: d.value,
                        pageNo: c.value,
                        typeId: o.typeid
                    }));
                    m.value = T.list.map(C => {
                        let h = [0, 0, 0, 0, 0, 0],
                            k = C.premium.split("").map(Number),
                            w = C.premium.split("").map(Number);
                        for (let L = 0; h.length > L; L++) h[k[L] - 1] = k[L];
                        return C.Premiums = h, C.AllEqual = y(w), C
                    }) || [], g.value = T.totalPage
                }, b = f([u("trendTXT1"), u("trendTXT2"), u("trendTXT3"), u("trendTXT4")]), y = v => {
                    let $ = [0, 0, 0, 0, 0, 0],
                        T = v.sort(),
                        C = 2;
                    for (let h = 0; h < T.length - 1; h++) T[h] == T[h + 1] && ($[T[h] - 1] = C++);
                    return $
                };
            return i({
                getData: _
            }), Ce(() => {
                _()
            }), (v, $) => {
                const T = V("van-col"),
                    C = V("van-row"),
                    h = V("van-icon");
                return n(), a("div", G5, [t("div", M5, [N(C, null, {
                    default: D(() => [N(T, {
                        span: "8"
                    }, {
                        default: D(() => [E(e(v.$t("trendNumber")), 1)]),
                        _: 1
                    }), N(T, {
                        span: "6"
                    }, {
                        default: D(() => [E(e(v.$t("trendResult")), 1)]),
                        _: 1
                    }), N(T, {
                        span: "10"
                    }, {
                        default: D(() => [E(e(v.$t("trendNum")), 1)]),
                        _: 1
                    })]),
                    _: 1
                })]), t("div", B5, [m.value.length ? (n(!0), a(G, {
                    key: 0
                }, B(m.value, (k, w) => (n(), Q(C, {
                    key: w
                }, {
                    default: D(() => [N(T, {
                        span: "8"
                    }, {
                        default: D(() => [E(e(k.issueNumber), 1)]),
                        _: 2
                    }, 1024), N(T, {
                        span: "6"
                    }, {
                        default: D(() => [t("div", D5, [(n(!0), a(G, null, B(k.premium, (L, z) => (n(), a("div", {
                            key: z,
                            class: M("n" + L)
                        }, null, 2))), 128))])]),
                        _: 2
                    }, 1024), N(T, {
                        span: "10"
                    }, {
                        default: D(() => [t("div", P5, [t("span", null, e(b.value[k.gameType]), 1)])]),
                        _: 2
                    }, 1024)]),
                    _: 2
                }, 1024))), 128)) : (n(), a("div", A5, [N(ve)]))]), m.value.length ? (n(), a("div", O5, [t("div", {
                    class: M(["Trend__C-foot-previous", {
                        disabled: c.value <= 1
                    }]),
                    onClick: p
                }, [N(h, {
                    name: "arrow-left",
                    class: "Trend__C-icon",
                    size: "20"
                })], 2), t("div", W5, e(c.value) + "/" + e(g.value), 1), t("div", {
                    class: M(["Trend__C-foot-next", {
                        disabled: c.value >= g.value
                    }]),
                    onClick: r
                }, [N(h, {
                    name: "arrow",
                    class: "Trend__C-icon",
                    size: "20"
                })], 2)])) : S("", !0)])
            }
        }
    });
const E5 = H(q5, [
        ["__scopeId", "data-v-e311f3d1"]
    ]),
    H5 = {
        key: 1,
        class: "WinningTip__C-body-l1"
    },
    F5 = {
        class: "WinningTip__C-body-l2"
    },
    V5 = {
        class: "line1"
    },
    j5 = {
        class: "line2"
    },
    U5 = {
        class: "yuan"
    },
    K5 = {
        class: "WinningTip__C-body-l3"
    },
    X5 = {
        key: 0,
        class: "isLose"
    },
    J5 = {
        class: "head"
    },
    Q5 = {
        class: "bonus"
    },
    Y5 = {
        class: "gameDetail"
    },
    Z5 = {
        class: "WinningTip__C-body-l4"
    },
    tT = ["onClick"],
    eT = W({
        __name: "WinningTips",
        setup(l, {
            expose: i
        }) {
            const o = U(() => g.value[0] ? g.value[0].state == 0 : !1),
                u = U(() => g.value[0] || {}),
                m = f(!1),
                g = f([]);
            let d = f();
            const c = () => {
                    clearTimeout(d.value), g.value.shift(), m.value && g.value.length && (d.value = setTimeout(() => {
                        c()
                    }, 1e3 * 3))
                },
                p = () => {
                    m.value = !m.value, m.value ? d.value = setTimeout(() => {
                        c()
                    }, 1e3 * 3) : clearTimeout(d.value)
                },
                r = b => {
                    b.list = b.premium.split(""), b.sum = Number(b.list[0]) + Number(b.list[1]) + Number(b.list[2]), g.value.push(b), m.value && (d.value = setTimeout(() => {
                        c()
                    }, 1e3 * 3))
                },
                _ = () => {
                    g.value = []
                };
            return i({
                showMark: r
            }), (b, y) => et((n(), a("div", {
                class: "WinningTip__C",
                onClick: c
            }, [t("div", {
                class: M(["WinningTip__C-body", {
                    isL: o.value
                }])
            }, [o.value ? (n(), a("div", {
                key: 0,
                class: M(["WinningTip__C-body-l1", {
                    isL: o.value
                }])
            }, e(b.$t("k3WarningTip1")), 3)) : (n(), a("div", H5, e(b.$t("k3WarningTip2")), 1)), t("div", F5, [t("div", V5, [(n(!0), a(G, null, B(u.value.list, (v, $) => (n(), a("div", {
                class: M(["n" + v])
            }, null, 2))), 256))]), t("div", j5, [t("div", null, e(u.value.premium), 1), t("div", U5, e(u.value.sum > 10 ? b.$t("big") : b.$t("small")), 1), t("div", null, e(u.value.sum % 2 ? b.$t("k3Odd") : b.$t("k3Even")), 1)])]), t("div", K5, [o.value ? (n(), a("div", X5, e(b.$t("k3WarningTip3")), 1)) : (n(), a(G, {
                key: 1
            }, [t("div", J5, e(b.$t("k3WarningTip4")), 1), t("div", Q5, e(s(xt)(Number(u.value.winAmount))), 1)], 64)), t("div", Y5, e(b.$t("k3WarningTip5")) + e(u.value.typeName) + " " + e(u.value.issueNumber), 1)]), t("div", Z5, [t("div", {
                class: M(["acitveBtn", {
                    active: m.value
                }]),
                onClick: se(p, ["stop"])
            }, null, 10, tT), E(" " + e(b.$t("autoShutOff3s")), 1)]), t("div", {
                class: "closeBtn",
                onClick: _
            })], 2)], 512)), [
                [Vt, g.value.length]
            ])
        }
    });
const iT = H(eT, [
        ["__scopeId", "data-v-af2e7991"]
    ]),
    nT = {
        class: "K3__C"
    },
    aT = {
        class: "K3__C-head-more"
    },
    oT = W({
        __name: "index",
        setup(l) {
            const o = ii().query.typeId,
                u = {
                    GameRecord: R5,
                    Trend: E5,
                    MyGameRecord: oo
                },
                m = f(),
                g = f(),
                d = f(),
                c = f(!1),
                p = f("GameRecord"),
                r = gt(),
                _ = Je(),
                b = _.getK3,
                y = f(0),
                v = f(localStorage.getItem("volumeShow") || "1"),
                $ = f(!1),
                T = f([]),
                C = f(null),
                h = f({
                    gameNo: "loading",
                    currentTime: "",
                    beginTime: "",
                    passTime: 180,
                    time1: 0,
                    time2: 0,
                    time3: 0,
                    time4: 0
                }),
                k = f("666"),
                w = f(5),
                L = f(""),
                z = f(!1),
                I = f(null),
                x = U(() => b[y.value] || {}),
                R = ne(),
                O = U(() => R.getIsShowLotteryDragon);
            ht(() => {
                at()
            }), Ke(() => {
                clearInterval(C.value), clearInterval(Ht.value), St.value.forEach(A => {
                    clearInterval(A)
                }), tt.value && clearTimeout(tt.value)
            }), Ot(() => le().visibility, A => {
                A === 0 ? clearInterval(C.value) : (at(), ot(y.value))
            });
            const P = () => {
                    sessionStorage.setItem("clickedGameType", "lottery"), r.push({
                        path: "/"
                    })
                },
                K = () => {
                    v.value == "1" ? v.value = "2" : v.value = "1", localStorage.setItem("volumeShow", v.value)
                },
                X = A => {
                    r.push({
                        name: A
                    })
                },
                at = () => {
                    const A = b.findIndex(st => st.typeID == o);
                    ot(A !== -1 ? A : 0)
                },
                ct = async (A, st = !1) => {
                    const Tt = await rt(Bs({
                        typeId: A
                    }));
                    Tt && (k.value = Tt.data.premium, st && $t(k.value))
                }, ot = A => {
                    _.getK3Data(), y.value = A, I.value = b[A].typeID, J(I.value), ie(() => {
                        m.value.getData(I.value)
                    })
                }, J = async (A, st = !1) => {
                    ct(A, st);
                    const [Tt, At] = await ae(Ms({
                        typeId: A
                    }));
                    h.value.gameNo = At.issueNumber, h.value.currentTime = At.serviceTime.replace(/-/g, "/"), h.value.beginTime = At.startTime.replace(/-/g, "/"), Z()
                }, Z = () => {
                    if (!b.length) return;
                    var A = new Date(h.value.currentTime).getTime(),
                        st = new Date(h.value.beginTime).getTime();
                    let Tt = (A - st) / 1e3,
                        At = b[y.value];
                    if (Tt > At.intervalM * 60 && (Tt = At.intervalM * 60), h.value.passTime = At.intervalM * 60 - Tt, h.value.passTime < 0) {
                        L.value = "An error occurred, please contact customer service。The game time is " + At.intervalM + " minutes,start time is " + h.value.beginTime + ",current time is" + h.value.currentTime + "!", $.value = !0;
                        return
                    }
                    lt()
                }, lt = () => {
                    clearInterval(C.value), Rt(!1), C.value = setInterval(function() {
                        Rt()
                    }, 1e3)
                }, Rt = (A = !0) => {
                    if (h.value.passTime <= w.value && (z.value = !1), v.value == "1" && (h.value.passTime <= w.value && h.value.passTime > 1 ? Nt(1) : h.value.passTime == 1 && Nt(2)), h.value.passTime > 0) {
                        let st = h.value.passTime;
                        h.value.time2 = Math.floor(st / 60), h.value.time3 = Math.floor(st % 60 / 10), h.value.time4 = Math.floor(st % 10), h.value.passTime--
                    } else clearInterval(C.value), A && _t()
                }, Nt = (A = 1) => {
                    const st = document.getElementById(`voice${A}`);
                    st && st.play()
                }, _t = () => {
                    J(I.value, !0), d.value.getWinsUserAmount(!1), m.value.getData(!0)
                }, Ht = f(null), Kt = (A, st) => {
                    if (A >= 0 && st > 0 && st >= A) {
                        let Tt = st - A + 1;
                        return Math.floor(Math.random() * Tt + A)
                    } else return 0
                }, $t = A => {
                    Ht.value || (Ht.value = setInterval(function() {
                        for (var st = [], Tt = 0; 3 > Tt; Tt++) st.push(Kt(1, 6));
                        k.value = st.join("")
                    }, 50)), setTimeout(function() {
                        clearInterval(Ht.value), k.value = A, Ht.value = null
                    }, 2e3)
                }, It = f({}), St = f([]), Ct = A => {
                    if (d.value.getWinsUserAmount(!1), m.value.getData(), It.value[A]) return;
                    It.value[A] = !0;
                    const {
                        time1: st,
                        time2: Tt,
                        time3: At,
                        time4: fe
                    } = h.value, ce = (st * 10 * 60 + Tt * 60 + At * 10 + fe) * 1e3;
                    St.value[x.value.intervalM] = setTimeout(() => {
                        nt(A)
                    }, ce)
                }, dt = A => {
                    c.value = A
                }, tt = f(null), nt = async A => {
                    const st = await rt(Ds({
                        issueNumber: A
                    }));
                    if (st) {
                        if (!(st.data.state != 2)) {
                            tt.value = setTimeout(() => {
                                nt(A)
                            }, 2e3);
                            return
                        }
                        g.value.showMark(st.data), delete It.value[A]
                    }
                };
            return (A, st) => {
                const Tt = V("NavBar");
                return n(), a("div", nT, [N(Tt, {
                    "left-arrow": "",
                    onClickLeft: P,
                    "background-color": "#3F3F3F",
                    headLogo: !0
                }, {
                    right: D(() => [t("div", aT, [t("div", {
                        onClick: st[0] || (st[0] = At => X("CustomerService"))
                    }), t("div", {
                        class: M({
                            disableVoice: v.value == "2"
                        }),
                        onClick: K
                    }, null, 2)])]),
                    _: 1
                }), N(Wi, {
                    ref_key: "WallteRef",
                    ref: d
                }, null, 512), N(Fe, {
                    siteMsg: T.value,
                    key: "k3"
                }, null, 8, ["siteMsg"]), N(qi, {
                    gameList: s(b),
                    currentGameIndex: y.value,
                    onChangeGame: ot
                }, null, 8, ["gameList", "currentGameIndex"]), N(M$, {
                    currentInfo: h.value,
                    premium: k.value,
                    currentGame: x.value
                }, null, 8, ["currentInfo", "premium", "currentGame"]), N(T5, {
                    currentInfo: h.value,
                    currentGame: x.value,
                    VoiceType: v.value,
                    typeid: I.value,
                    onBetting: Ct,
                    onChangeBettingP: dt
                }, null, 8, ["currentInfo", "currentGame", "VoiceType", "typeid"]), N(Hi, {
                    record: p.value,
                    onChangeC: st[1] || (st[1] = At => p.value = At)
                }, null, 8, ["record"]), (n(), Q(ni, null, [(n(), Q(me(u[p.value]), {
                    ref_key: "RecordComponent",
                    ref: m,
                    typeid: I.value,
                    ApiFun: s(yn),
                    listApi: s($n),
                    EmerdApi: s(Ga),
                    goPathName: "AllLotteryGames-BettingRecordK3"
                }, null, 8, ["typeid", "ApiFun", "listApi", "EmerdApi"]))], 1024)), N(Me, {
                    show: $.value,
                    onConfirm: st[2] || (st[2] = At => X("/login"))
                }, {
                    content: D(() => [t("div", null, e(L.value), 1)]),
                    _: 1
                }, 8, ["show"]), N(iT, {
                    ref_key: "WinningTipsRef",
                    ref: g
                }, null, 512), O.value ? (n(), Q(Qe, {
                    key: 0
                })) : S("", !0), N(Fi)])
            }
        }
    });
const sT = H(oT, [
        ["__scopeId", "data-v-aca05fdb"]
    ]),
    QD = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: sT
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    Ui = l => (wt("data-v-bf406892"), l = l(), Lt(), l),
    lT = {
        class: "TimeLeft__C"
    },
    cT = {
        class: "box"
    },
    rT = {
        class: "tit"
    },
    uT = {
        class: "citycon"
    },
    dT = Ui(() => t("div", {
        class: "citybg"
    }, null, -1)),
    pT = {
        class: "font30"
    },
    gT = {
        class: "playmethod"
    },
    mT = {
        key: 0,
        class: "odds"
    },
    bT = Ui(() => t("div", {
        class: "line"
    }, "|", -1)),
    _T = {
        class: "odd"
    },
    vT = {
        key: 1,
        class: "color8"
    },
    hT = {
        class: "bettingcut"
    },
    kT = {
        class: "font22"
    },
    fT = {
        class: "info"
    },
    yT = Ui(() => t("div", {
        class: "illustratebg"
    }, null, -1)),
    $T = {
        class: "font24"
    },
    TT = {
        class: "issue"
    },
    CT = Ui(() => t("div", {
        class: "issuebg"
    }, null, -1)),
    wT = {
        class: "font26"
    },
    LT = {
        class: "closure"
    },
    NT = {
        class: "closuretime"
    },
    IT = {
        class: "closurtimes"
    },
    zT = W({
        __name: "TimeLeft",
        props: {
            defaultcityname: {
                type: String,
                default: ""
            },
            defaultplayname: {
                type: String,
                default: ""
            },
            defaultexpiredate: {
                type: String,
                default: ""
            },
            issue: {
                type: String,
                default: ""
            },
            time: {
                type: String,
                default: ""
            },
            odds: {
                type: Number,
                default: 0
            },
            colorId: {
                type: Number,
                default: 0
            },
            areId: {
                type: Number,
                default: 0
            }
        },
        setup(l) {
            const i = l,
                o = gt(),
                u = () => {
                    o.push({
                        name: "AllLotteryGames-Play",
                        query: {
                            id: i.areId,
                            gVSs: 1
                        }
                    })
                };
            return (m, g) => (n(), a("div", lT, [t("div", cT, [t("div", rT, [t("div", uT, [dT, t("div", pT, e(l.defaultcityname), 1)]), t("div", gT, e(m.$t("code" + l.defaultplayname)), 1), l.colorId != 8 ? (n(), a("div", mT, [t("div", null, e(m.$t("odds")), 1), bT, t("div", _T, "1:" + e(l.odds), 1)])) : S("", !0), l.colorId == 8 ? (n(), a("div", vT)) : S("", !0), t("div", hT, [t("div", kT, e(m.$t("xosoTxt91")), 1), t("div", null, e(l.defaultexpiredate), 1)])]), t("div", fT, [t("div", {
                class: "playillustrate",
                onClick: u
            }, [yT, t("div", $T, e(m.$t("lotteryManual")), 1)]), t("div", TT, [CT, t("div", wT, e(l.issue), 1)]), t("div", LT, [t("div", NT, e(m.$t("xosoTxt92")), 1), t("div", IT, [(n(!0), a(G, null, B(l.time.split(""), (d, c) => (n(), a("div", {
                class: M(d == ":" ? "red" : "redsqure"),
                key: c
            }, e(d), 3))), 128))])])])])]))
        }
    });
const xT = H(zT, [
        ["__scopeId", "data-v-bf406892"]
    ]),
    Sn = l => (wt("data-v-2753fe43"), l = l(), Lt(), l),
    ST = {
        class: "TimeLeft__C"
    },
    RT = {
        class: "box"
    },
    GT = {
        class: "tit"
    },
    MT = {
        class: "citycon"
    },
    BT = Sn(() => t("div", {
        class: "citybg"
    }, null, -1)),
    DT = {
        class: "font30"
    },
    PT = {
        key: 0,
        class: "playmethod"
    },
    AT = {
        class: "odd"
    },
    OT = {
        class: "odds"
    },
    WT = {
        class: "result"
    },
    qT = {
        class: "info"
    },
    ET = Sn(() => t("div", {
        class: "illustratebg"
    }, null, -1)),
    HT = {
        class: "font24"
    },
    FT = {
        class: "issue"
    },
    VT = Sn(() => t("div", {
        class: "issuebg"
    }, null, -1)),
    jT = {
        class: "font26"
    },
    UT = {
        key: 0,
        class: "closure isShowPreparing"
    },
    KT = {
        key: 1,
        class: "closure"
    },
    XT = {
        class: "closuretime"
    },
    JT = {
        class: "closurtimes"
    },
    QT = W({
        __name: "TimeLeftF",
        props: {
            defaultcityname: {
                type: String,
                default: ""
            },
            defaultplayname: {
                type: String,
                default: ""
            },
            issue: {
                type: String,
                default: ""
            },
            time: {
                type: String,
                default: ""
            },
            odds: {
                type: Number,
                default: 0
            },
            colorId: {
                type: Number,
                default: 0
            },
            areId: {
                type: Number,
                default: 0
            },
            resultList: {
                type: Object,
                default: {}
            },
            isShowPreparing: {
                type: Boolean,
                defauft: !1
            }
        },
        setup(l) {
            const i = l,
                o = gt(),
                u = U(() => {
                    var d, c;
                    let g = (d = i.resultList) != null && d.openingResult ? (c = i.resultList) == null ? void 0 : c.openingResult.find(p => p.resultType == 0).result : "";
                    return Array.isArray(g) && (g = g[0]), g
                }),
                m = () => {
                    o.push({
                        name: "AllLotteryGames-Play",
                        query: {
                            id: i.areId,
                            gVSs: 2
                        }
                    })
                };
            return (g, d) => {
                var c;
                return n(), a("div", ST, [t("div", RT, [t("div", GT, [t("div", MT, [BT, t("div", DT, e(l.defaultcityname), 1)]), l.colorId != 8 ? (n(), a("div", PT, [t("div", null, "(" + e(g.$t("code" + l.defaultplayname)) + ")", 1), t("div", AT, "1:" + e(l.odds), 1)])) : S("", !0), t("div", OT, [t("div", null, e(g.$t("betResult")), 1), t("div", null, e((c = l.resultList) == null ? void 0 : c.issueNumber), 1), t("div", WT, [(n(!0), a(G, null, B(u.value.split(""), (p, r) => (n(), a("span", {
                    key: r
                }, e(p), 1))), 128))])])]), t("div", qT, [t("div", {
                    class: "playillustrate",
                    onClick: m
                }, [ET, t("div", HT, e(g.$t("lotteryManual")), 1)]), t("div", FT, [VT, t("div", jT, e(l.issue), 1)]), l.isShowPreparing ? (n(), a("div", UT, e(g.$t("preparing")), 1)) : S("", !0), l.isShowPreparing ? S("", !0) : (n(), a("div", KT, [t("div", XT, e(g.$t("xosoTxt91")), 1), t("div", JT, [(n(!0), a(G, null, B(l.time.split(""), (p, r) => (n(), a("div", {
                    class: M(p == ":" ? "red" : "redsqure"),
                    key: r
                }, e(p), 3))), 128))])]))])])])
            }
        }
    });
const YT = H(QT, [
        ["__scopeId", "data-v-2753fe43"]
    ]),
    ZT = {
        class: "ColorsContainer"
    },
    tC = W({
        __name: "ColorsAndPlay",
        props: {
            gameCategoryList: {
                type: Array,
                default: () => []
            },
            colortab: {
                type: Number,
                default: 0
            },
            playtab: {
                type: Number,
                default: 0
            }
        },
        emits: ["colorupdate", "update"],
        setup(l, {
            emit: i
        }) {
            const o = l,
                u = f(o.colortab),
                m = f(o.playtab),
                g = U(() => {
                    var p;
                    return ((p = o.gameCategoryList[u.value]) == null ? void 0 : p.gamePlayList) || []
                });

            function d(p) {
                i("colorupdate", p.item.categoryId, p.index)
            }

            function c({
                item: p,
                index: r
            }) {
                i("update", p.playId, r, p.playNameCode, p.betType)
            }
            return Ot(() => o.playtab, () => {
                m.value = o.playtab
            }), Ot(() => o.colortab, () => {
                u.value = o.colortab
            }), (p, r) => (n(), a("div", ZT, [N(ei, {
                list: l.gameCategoryList,
                active: u.value,
                "onUpdate:active": r[0] || (r[0] = _ => u.value = _),
                tabClassName: "ColorsMethod",
                onOnClickTab: d
            }, {
                default: D(({
                    item: _,
                    index: b
                }) => [t("div", {
                    class: M(["coloritem", {
                        active: b === u.value
                    }])
                }, e(p.$t("code" + _.categoryNameCode)), 3)]),
                _: 1
            }, 8, ["list", "active"]), N(ei, {
                list: g.value,
                active: m.value,
                "onUpdate:active": r[1] || (r[1] = _ => m.value = _),
                tabClassName: "PlayMethod",
                onOnClickTab: c
            }, {
                default: D(({
                    item: _,
                    index: b
                }) => [t("div", {
                    class: M(["playitem", {
                        active: b === m.value
                    }])
                }, e(p.$t("code" + _.playNameCode)), 3)]),
                _: 1
            }, 8, ["list", "active"])]))
        }
    });
const Ki = l => (wt("data-v-a286200c"), l = l(), Lt(), l),
    eC = {
        class: "NumberSelectContainer"
    },
    iC = {
        class: "NumberSelectContainer-mark"
    },
    nC = {
        class: "NumberTabContent"
    },
    aC = {
        key: 0,
        class: "selectcontainer"
    },
    oC = {
        class: "selectbutton"
    },
    sC = {
        class: "selectcontent"
    },
    lC = {
        class: "selectheader"
    },
    cC = {
        class: "selectball"
    },
    rC = ["onClick"],
    uC = {
        key: 1,
        class: "selectcontainer"
    },
    dC = {
        class: "selectbutton"
    },
    pC = {
        class: "selectcontent"
    },
    gC = {
        class: "selectheader"
    },
    mC = {
        class: "selectball"
    },
    bC = ["onClick"],
    _C = {
        key: 2,
        class: "selectcontainer"
    },
    vC = {
        class: "selectbutton"
    },
    hC = {
        class: "selectcontent"
    },
    kC = {
        class: "selectheader"
    },
    fC = {
        class: "selectball"
    },
    yC = ["onClick"],
    $C = {
        key: 3,
        class: "selectcontainer"
    },
    TC = {
        class: "selectbutton"
    },
    CC = {
        class: "selectcontent"
    },
    wC = {
        class: "selectheader"
    },
    LC = {
        class: "selectball"
    },
    NC = ["onClick"],
    IC = {
        class: "quickcontainer"
    },
    zC = {
        key: 0,
        class: "intervalcontainer"
    },
    xC = ["onClick"],
    SC = {
        key: 1,
        class: "randomcontainer"
    },
    RC = {
        class: "randomheader"
    },
    GC = Ki(() => t("div", {
        class: "redline"
    }, null, -1)),
    MC = {
        class: "font30"
    },
    BC = {
        class: "randombutton"
    },
    DC = ["onClick"],
    PC = {
        key: 2,
        class: "specialcontainer"
    },
    AC = {
        class: "specialheader"
    },
    OC = Ki(() => t("div", {
        class: "redline"
    }, null, -1)),
    WC = {
        class: "font30"
    },
    qC = {
        class: "specialbutton"
    },
    EC = {
        class: "Ntit"
    },
    HC = Ki(() => t("br", null, null, -1)),
    FC = Ki(() => t("br", null, null, -1)),
    VC = {
        class: "list"
    },
    jC = ["onClick"],
    UC = W({
        __name: "NumberSelect",
        props: {
            methodList: {
                type: String,
                default: ""
            },
            activeTab: {
                type: Number,
                default: 0
            },
            randomList: {
                type: Array,
                default: () => {}
            },
            randomtype: {
                type: Number,
                default: 0
            },
            specialtype: {
                type: Number,
                default: 0
            },
            isthreenumber: {
                type: Number,
                default: 0
            },
            speciaSelectNo: {
                type: String,
                default: ""
            },
            isShowMark: {
                type: Boolean,
                default: !1
            },
            hundred: {
                type: String,
                default: ""
            },
            betconfig: {
                type: String,
                default: ""
            },
            groupTab: {
                type: Number,
                default: 30
            },
            thousandnumList: {
                type: Array,
                default: []
            },
            hundrednumList: {
                type: Array,
                default: []
            },
            tennumList: {
                type: Array,
                default: []
            },
            indicualnumList: {
                type: Array,
                default: []
            },
            quicknumList: {
                type: Array,
                default: []
            },
            intervalnumber: {
                type: Array,
                default: []
            },
            intervalTab: {
                type: Number,
                default: 0
            }
        },
        emits: ["tabupdate", "selectgroup", "selectspecial", "betNum", "betQuickNum", "getselect", "getquick", "selectinterval"],
        setup(l, {
            expose: i,
            emit: o
        }) {
            const u = l,
                {
                    t: m
                } = pt(),
                g = [{
                    name: m("selectNo"),
                    value: 1
                }, {
                    name: m("xosoTxt81"),
                    value: 3
                }, {
                    name: m("xosoTxt80"),
                    value: 2
                }],
                d = U(() => g.filter(w => {
                    var L;
                    return (L = u.methodList) == null ? void 0 : L.includes(w.value + "")
                })),
                c = f(0),
                p = f(""),
                r = f(["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]),
                _ = ({
                    item: w
                }) => {
                    o("tabupdate", w.value)
                },
                b = (w, L, z) => {
                    o("selectgroup", w, L, z)
                },
                y = (w, L) => {
                    o("betNum", w, L)
                },
                v = (w, L, z) => {
                    o("betQuickNum", w, L, z)
                },
                $ = (w, L, z, I) => {
                    o("getselect", w, L, z, I)
                },
                T = (w, L) => {
                    o("getquick", w, L)
                },
                C = (w, L) => {
                    o("selectinterval", w, L)
                },
                h = w => {
                    w.target.value != "" && o("inputblur", w.target.value)
                },
                k = () => {
                    p.value = ""
                };
            return Ot(() => u.activeTab, async () => {
                await ie();
                const w = d.value.findIndex(L => L.value == u.activeTab);
                w !== -1 && (c.value = w)
            }), i({
                cleardata: k
            }), (w, L) => {
                var I, x, R, O;
                const z = V("van-field");
                return n(), a("div", eC, [et(t("div", iC, [t("div", null, e(s(m)("nomorebet")), 1)], 512), [
                    [Vt, l.isShowMark]
                ]), d.value.length > 0 ? (n(), Q(ei, {
                    key: 0,
                    list: d.value,
                    active: c.value,
                    "onUpdate:active": L[0] || (L[0] = P => c.value = P),
                    tabClassName: "NumberTab",
                    onOnClickTab: _
                }, {
                    default: D(({
                        item: P,
                        index: K
                    }) => [t("div", {
                        class: M(["tabitem", {
                            active: P.value === l.activeTab
                        }])
                    }, e(P.name), 3)]),
                    _: 1
                }, 8, ["list", "active"])) : S("", !0), t("div", nC, [et(t("div", null, [(I = l.betconfig) != null && I.includes("4") ? (n(), a("div", aC, [t("div", oC, [t("div", {
                    class: "selectall",
                    onClick: L[1] || (L[1] = P => $("Thousand", 0, 9, "all"))
                }, e(s(m)("all")), 1), t("div", {
                    class: "selectbig",
                    onClick: L[2] || (L[2] = P => $("Thousand", 0, 9, "big"))
                }, e(s(m)("big")), 1), t("div", {
                    class: "selectsmall",
                    onClick: L[3] || (L[3] = P => $("Thousand", 0, 9, "small"))
                }, e(s(m)("small")), 1), t("div", {
                    class: "selectodd",
                    onClick: L[4] || (L[4] = P => $("Thousand", 0, 9, "odd"))
                }, e(s(m)("xosoTxt71")), 1), t("div", {
                    class: "selecteven",
                    onClick: L[5] || (L[5] = P => $("Thousand", 0, 9, "even"))
                }, e(s(m)("xosoTxt70")), 1)]), t("div", sC, [t("div", lC, e(s(m)("xosoTxt87")), 1), t("div", cC, [(n(!0), a(G, null, B(r.value, (P, K) => (n(), a("div", {
                    key: K,
                    onClick: X => y("Thousand", P)
                }, [t("div", {
                    class: M(l.thousandnumList.includes(P) ? "ball action " : "ball")
                }, e(P), 3)], 8, rC))), 128))])])])) : S("", !0), (x = l.betconfig) != null && x.includes("3") ? (n(), a("div", uC, [t("div", dC, [t("div", {
                    class: "selectall",
                    onClick: L[6] || (L[6] = P => $("hundred", 0, 9, "all"))
                }, e(s(m)("all")), 1), t("div", {
                    class: "selectbig",
                    onClick: L[7] || (L[7] = P => $("hundred", 0, 9, "big"))
                }, e(s(m)("big")), 1), t("div", {
                    class: "selectsmall",
                    onClick: L[8] || (L[8] = P => $("hundred", 0, 9, "small"))
                }, e(s(m)("small")), 1), t("div", {
                    class: "selectodd",
                    onClick: L[9] || (L[9] = P => $("hundred", 0, 9, "odd"))
                }, e(s(m)("xosoTxt71")), 1), t("div", {
                    class: "selecteven",
                    onClick: L[10] || (L[10] = P => $("hundred", 0, 9, "even"))
                }, e(s(m)("xosoTxt70")), 1)]), t("div", pC, [t("div", gC, e(s(m)("xosoTxt88")), 1), t("div", mC, [(n(!0), a(G, null, B(r.value, (P, K) => (n(), a("div", {
                    key: K,
                    onClick: X => y("Hundred", P)
                }, [t("div", {
                    class: M(l.hundrednumList.includes(P) ? "action ball" : "ball")
                }, e(P), 3)], 8, bC))), 128))])])])) : S("", !0), (R = l.betconfig) != null && R.includes("2") ? (n(), a("div", _C, [t("div", vC, [t("div", {
                    class: "selectall",
                    onClick: L[11] || (L[11] = P => $("ten", 0, 9, "all"))
                }, e(s(m)("all")), 1), t("div", {
                    class: "selectbig",
                    onClick: L[12] || (L[12] = P => $("ten", 0, 9, "big"))
                }, e(s(m)("big")), 1), t("div", {
                    class: "selectsmall",
                    onClick: L[13] || (L[13] = P => $("ten", 0, 9, "small"))
                }, e(s(m)("small")), 1), t("div", {
                    class: "selectodd",
                    onClick: L[14] || (L[14] = P => $("ten", 0, 9, "odd"))
                }, e(s(m)("xosoTxt71")), 1), t("div", {
                    class: "selecteven",
                    onClick: L[15] || (L[15] = P => $("ten", 0, 9, "even"))
                }, e(s(m)("xosoTxt70")), 1)]), t("div", hC, [t("div", kC, e(s(m)("xosoTxt89")), 1), t("div", fC, [(n(!0), a(G, null, B(r.value, (P, K) => (n(), a("div", {
                    key: K,
                    onClick: X => y("ten", P)
                }, [t("div", {
                    class: M(l.tennumList.includes(P) ? "action ball" : "ball")
                }, e(P), 3)], 8, yC))), 128))])])])) : S("", !0), (O = l.betconfig) != null && O.includes("1") ? (n(), a("div", $C, [t("div", TC, [t("div", {
                    class: "selectall",
                    onClick: L[16] || (L[16] = P => $("Indivual", 0, 9, "all"))
                }, e(s(m)("all")), 1), t("div", {
                    class: "selectbig",
                    onClick: L[17] || (L[17] = P => $("Indivual", 0, 9, "big"))
                }, e(s(m)("big")), 1), t("div", {
                    class: "selectsmall",
                    onClick: L[18] || (L[18] = P => $("Indivual", 0, 9, "small"))
                }, e(s(m)("small")), 1), t("div", {
                    class: "selectodd",
                    onClick: L[19] || (L[19] = P => $("Indivual", 0, 9, "odd"))
                }, e(s(m)("xosoTxt71")), 1), t("div", {
                    class: "selecteven",
                    onClick: L[20] || (L[20] = P => $("Indivual", 0, 9, "even"))
                }, e(s(m)("xosoTxt70")), 1)]), t("div", CC, [t("div", wC, e(s(m)("xosoTxt90")), 1), t("div", LC, [(n(!0), a(G, null, B(r.value, (P, K) => (n(), a("div", {
                    key: K,
                    onClick: X => y("Indivual", P)
                }, [t("div", {
                    class: M(l.indicualnumList.includes(P) ? "ball action" : "ball")
                }, e(P), 3)], 8, NC))), 128))])])])) : S("", !0)], 512), [
                    [Vt, l.activeTab === 1]
                ]), et(t("div", null, [N(z, {
                    class: "custom-field",
                    modelValue: p.value,
                    "onUpdate:modelValue": L[21] || (L[21] = P => p.value = P),
                    rows: "4",
                    autosize: "",
                    type: "textarea",
                    placeholder: s(m)("xosoTxt86"),
                    onInput: h
                }, null, 8, ["modelValue", "placeholder"])], 512), [
                    [Vt, l.activeTab === 2]
                ]), et(t("div", null, [t("div", IC, [l.isthreenumber === 1 ? (n(), a("div", zC, [(n(!0), a(G, null, B(l.intervalnumber, (P, K) => (n(), a("div", {
                    class: M(["intervalitem", [l.intervalTab === K ? "active" : ""]]),
                    key: K,
                    onClick: X => C(P, K)
                }, e(P), 11, xC))), 128))])) : S("", !0), l.randomtype === 1 ? (n(), a("div", SC, [t("div", RC, [GC, t("div", MC, e(s(m)("xosoTxt83")), 1)]), t("div", BC, [(n(!0), a(G, null, B(l.randomList, (P, K) => (n(), a("div", {
                    class: M([l.groupTab === K ? "active" : ""]),
                    key: K,
                    onClick: X => b(P, K, l.isthreenumber)
                }, e(P) + e(s(m)("xosoTxt84")), 11, DC))), 128))])])) : S("", !0), l.specialtype === 1 ? (n(), a("div", PC, [t("div", AC, [OC, t("div", WC, e(s(m)("xosoTxt97")), 1)]), t("div", qC, [l.speciaSelectNo.includes("1") ? (n(), a("div", {
                    key: 0,
                    class: "specialsame",
                    onClick: L[22] || (L[22] = P => T(l.isthreenumber, "same"))
                }, e(s(m)("xosoTxt85")), 1)) : S("", !0), l.speciaSelectNo.includes("4") ? (n(), a("div", {
                    key: 1,
                    class: "specialbig",
                    onClick: L[23] || (L[23] = P => T(l.isthreenumber, "big"))
                }, e(s(m)("big")), 1)) : S("", !0), l.speciaSelectNo.includes("5") ? (n(), a("div", {
                    key: 2,
                    class: "specialsmall",
                    onClick: L[24] || (L[24] = P => T(l.isthreenumber, "small"))
                }, e(s(m)("small")), 1)) : S("", !0), l.speciaSelectNo.includes("2") ? (n(), a("div", {
                    key: 3,
                    class: "specialodd",
                    onClick: L[25] || (L[25] = P => T(l.isthreenumber, "odd"))
                }, e(s(m)("xosoTxt71")), 1)) : S("", !0), l.speciaSelectNo.includes("3") ? (n(), a("div", {
                    key: 4,
                    class: "specialeven",
                    onClick: L[26] || (L[26] = P => T(l.isthreenumber, "even"))
                }, e(s(m)("xosoTxt70")), 1)) : S("", !0)])])) : S("", !0), l.activeTab === 3 ? (n(), a(G, {
                    key: 3
                }, B(10, (P, K) => t("div", {
                    class: "numbercontainer",
                    key: P
                }, [t("div", EC, [t("div", null, [E(e(l.hundred) + e(K) + "0", 1), HC, E("/"), FC, E(e(l.hundred) + e(K) + "9", 1)])]), t("div", VC, [(n(), a(G, null, B(10, (X, at) => t("div", {
                    class: "item",
                    key: X
                }, [t("div", {
                    onClick: ct => v(l.hundred, K, at)
                }, [t("div", {
                    class: M(l.quicknumList.includes(l.hundred + "" + K + at) ? "number action" : "number")
                }, e(l.hundred) + e(K) + e(at), 3)], 8, jC)])), 64))])])), 64)) : S("", !0)])], 512), [
                    [Vt, l.activeTab === 3]
                ])])])
            }
        }
    });
const KC = H(UC, [
        ["__scopeId", "data-v-a286200c"]
    ]),
    XC = {
        class: "TasteContainer"
    },
    JC = {
        class: "TasteHeader"
    },
    QC = {
        class: "NumberSelect"
    },
    YC = {
        class: "NumberSelectCon"
    },
    ZC = ["onClick"],
    t4 = W({
        __name: "TasteSelect",
        props: {
            funplaylist: {
                type: Array,
                default: []
            },
            numbercon: {
                type: String,
                default: "1000"
            }
        },
        emits: ["selectvalue"],
        setup(l, {
            emit: i
        }) {
            const o = (u, m) => {
                i("selectvalue", u, m)
            };
            return (u, m) => (n(), a("div", XC, [t("div", JC, e(u.$t("xosoTxt60")), 1), t("div", QC, [t("div", YC, [(n(!0), a(G, null, B(l.funplaylist, (g, d) => (n(), a("div", {
                class: M(["NumberCon", {
                    action: g.oddTypeName === l.numbercon,
                    more: d == 18
                }]),
                key: d,
                onClick: c => o(g, d)
            }, [t("div", {
                class: M(["number", {
                    active: g.oddTypeName === l.numbercon
                }])
            }, e(u.$t("code" + g.oddTypeNameCode)), 3), t("div", {
                class: M(["odds", {
                    active: g.oddTypeName === l.numbercon
                }])
            }, e(g.oddsOrAmount), 3)], 10, ZC))), 128))])])]))
        }
    });
const e4 = H(t4, [
        ["__scopeId", "data-v-1c07f56d"]
    ]),
    i4 = {
        class: "Footer__C"
    },
    n4 = {
        class: "nav c-row c-row-between"
    },
    a4 = {
        class: "c-row left c-row c-row-middle-center"
    },
    o4 = {
        class: "item"
    },
    s4 = {
        class: "txt"
    },
    l4 = {
        class: "num"
    },
    c4 = {
        class: "item"
    },
    r4 = {
        class: "txt"
    },
    u4 = {
        class: "num"
    },
    d4 = {
        class: ""
    },
    p4 = W({
        __name: "Footer",
        props: {
            betNumber: {
                default: {
                    type: Number,
                    default: 0
                }
            },
            betSum: {
                default: {
                    type: Number,
                    default: 0
                }
            }
        },
        emits: ["playBet"],
        setup(l, {
            emit: i
        }) {
            const o = () => {
                i("playBet")
            };
            return (u, m) => (n(), a("div", i4, [t("div", n4, [t("div", a4, [t("div", o4, [t("p", s4, e(u.$t("quantity")), 1), t("span", l4, e(u.betNumber || 0), 1)]), t("div", c4, [t("p", r4, e(u.$t("betAmount")), 1), t("span", u4, e(s(xt)(u.betSum || 0)), 1)])]), t("div", {
                class: M(["c-row c-row-middle-center", [u.betSum > 0 ? "bet-btn" : "disabled-btn"]]),
                onClick: m[0] || (m[0] = g => o())
            }, [t("span", d4, e(u.$t("betting")), 1)], 2)])]))
        }
    });
const g4 = H(p4, [
        ["__scopeId", "data-v-afe1106e"]
    ]),
    m4 = {
        class: "RecordNav__C"
    },
    b4 = ["onClick"],
    _4 = W({
        __name: "RecordNav",
        props: {
            record: {
                type: String,
                default: "GameRecord"
            }
        },
        setup(l) {
            const i = l,
                {
                    t: o
                } = pt(),
                u = f([{
                    name: o("gameRecords"),
                    componentName: "GameRecord"
                }, {
                    name: o("myGame"),
                    componentName: "MyGameRecord"
                }]);
            return (m, g) => (n(), a("div", m4, [(n(!0), a(G, null, B(u.value, (d, c) => (n(), a("div", {
                key: c,
                onClick: p => m.$emit("changeC", d.componentName),
                class: M({
                    active: i.record == d.componentName
                })
            }, e(d.name), 11, b4))), 128))]))
        }
    });
const v4 = H(_4, [
        ["__scopeId", "data-v-884042b3"]
    ]),
    h4 = {
        class: "GameRecord__C"
    },
    k4 = {
        class: "GameRecord__C-head"
    },
    f4 = {
        class: "GameRecord__C-body"
    },
    y4 = {
        class: "c-tc goItem"
    },
    $4 = {
        class: "c-row"
    },
    T4 = {
        class: "c-row c-row-middle-center"
    },
    C4 = {
        class: "c-row c-row-middle-center time"
    },
    w4 = {
        key: 0
    },
    L4 = {
        key: 1
    },
    N4 = {
        key: 0,
        class: "details"
    },
    I4 = {
        key: 0,
        class: "detailLi"
    },
    z4 = {
        class: "prize-tit"
    },
    x4 = {
        key: 0
    },
    S4 = {
        class: "prize-box c-row c-flex-warp"
    },
    R4 = {
        class: "prize-box-item action"
    },
    G4 = {
        key: 1,
        class: "GameRecord__C-body-empty"
    },
    M4 = {
        key: 0,
        class: "GameRecord__C-foot"
    },
    B4 = {
        class: "GameRecord__C-foot-page"
    },
    D4 = W({
        __name: "GameRecord",
        props: {
            areId: {},
            cityCode: {},
            gVSs: {}
        },
        setup(l, {
            expose: i
        }) {
            const o = l,
                {
                    t: u
                } = pt(),
                m = f([]),
                g = f(4),
                d = f(10),
                c = f(1),
                p = f(-1),
                r = async (C = !1, h) => {
                    var k, w, L;
                    if ((h == null ? void 0 : h.list.length) > 0) m.value = ka(h == null ? void 0 : h.list) || [], g.value = h == null ? void 0 : h.totalPage, c.value = h == null ? void 0 : h.pageNo;
                    else {
                        if (o.cityCode === "") return;
                        let z;
                        o.gVSs == "1" ? z = await rt(Ps({
                            pageSize: d.value,
                            pageNo: c.value,
                            areId: o == null ? void 0 : o.areId,
                            cityCode: o == null ? void 0 : o.cityCode
                        })) : o.gVSs == "2" && (z = await rt(Ma({
                            pageSize: d.value,
                            pageNo: c.value,
                            areId: o.areId,
                            typeId: Number(o.cityCode)
                        }))), m.value = ((k = z.data) == null ? void 0 : k.list) || [], g.value = (w = z.data) == null ? void 0 : w.totalPage, c.value = (L = z.data) == null ? void 0 : L.pageNo
                    }
                }, _ = C => {
                    for (var h = [], k = 0; k < C.length; k++) {
                        var w = h.findIndex(function(L) {
                            return L.resultType === C[k].resultType
                        });
                        w !== -1 ? h[w].result.push(C[k].result) : h.push({
                            resultType: C[k].resultType,
                            result: [C[k].result]
                        })
                    }
                    return h
                };

            function b(C) {
                return C.join("-")
            }

            function y(C) {
                switch (C) {
                    case 0:
                        return u("GrandPrize");
                    case 1:
                        return u("firstprize");
                    case 2:
                        return u("secondprize");
                    case 3:
                        return u("thirdprize");
                    case 4:
                        return u("fourprize");
                    case 5:
                        return u("fiveprize");
                    case 6:
                        return u("sixprize");
                    case 7:
                        return u("sevenprize");
                    case 8:
                        return u("eightprize")
                }
            }
            const v = () => {
                    c.value--, r()
                },
                $ = C => {
                    p.value == C ? p.value = -1 : p.value = C
                },
                T = () => {
                    c.value++, r()
                };
            return i({
                getData: r
            }), Ce(() => {
                p.value = -1
            }), (C, h) => {
                var z, I;
                const k = V("van-col"),
                    w = V("van-row"),
                    L = V("van-icon");
                return n(), a("div", h4, [t("div", k4, [N(w, null, {
                    default: D(() => [N(k, {
                        span: "8"
                    }, {
                        default: D(() => [E(e(C.$t("betSerial")), 1)]),
                        _: 1
                    }), N(k, {
                        span: "10"
                    }, {
                        default: D(() => [E(e(C.$t("result")), 1)]),
                        _: 1
                    }), N(k, {
                        span: "6"
                    }, {
                        default: D(() => [E(e(C.$t("time")), 1)]),
                        _: 1
                    })]),
                    _: 1
                })]), t("div", f4, [(z = m.value) != null && z.length ? (n(!0), a(G, {
                    key: 0
                }, B(m.value, (x, R) => (n(), Q(w, {
                    key: R,
                    onClick: O => $(R)
                }, {
                    default: D(() => [N(k, {
                        span: "8"
                    }, {
                        default: D(() => [t("div", y4, e(x.issueNumber), 1)]),
                        _: 2
                    }, 1024), N(k, {
                        span: "10",
                        class: "c-row c-row-middle-center"
                    }, {
                        default: D(() => [t("div", $4, [t("div", T4, [x.openingResult ? (n(!0), a(G, {
                            key: 0
                        }, B(x.openingResult[0].result, (O, P) => (n(), a("div", {
                            class: "li circle-black c-row c-row-middle-center c-tc",
                            key: P
                        }, [t("div", null, e(O), 1)]))), 128)) : S("", !0)])])]),
                        _: 2
                    }, 1024), N(k, {
                        span: "6"
                    }, {
                        default: D(() => [t("div", C4, [C.gVSs == "1" ? (n(), a("div", w4, e(x.openingTime.substr(0, 10)), 1)) : (n(), a("div", L4, e(x.openingTime), 1))])]),
                        _: 2
                    }, 1024), R == p.value ? (n(), a("div", N4, [x.openingResult ? (n(), a("div", I4, [(n(!0), a(G, null, B(_(x.openingResult), (O, P) => (n(), a("div", {
                        class: M([`selectItem${O.resultType}`, "prize"]),
                        key: P
                    }, [t("div", z4, e(y(O.resultType)), 1), [0, 1, 2].includes(O.resultType) ? (n(), a("div", x4, "|")) : S("", !0), t("div", S4, [t("span", R4, e(b(O.result)), 1)])], 2))), 128))])) : S("", !0)])) : S("", !0)]),
                    _: 2
                }, 1032, ["onClick"]))), 128)) : (n(), a("div", G4, [N(ve)]))]), (I = m.value) != null && I.length ? (n(), a("div", M4, [t("div", {
                    class: M(["GameRecord__C-foot-previous", {
                        disabled: c.value <= 1
                    }]),
                    onClick: v
                }, [N(L, {
                    name: "arrow-left",
                    class: "GameRecord__C-icon",
                    size: "20"
                })], 2), t("div", B4, e(c.value) + "/" + e(g.value), 1), t("div", {
                    class: M(["GameRecord__C-foot-next", {
                        disabled: c.value >= g.value
                    }]),
                    onClick: T
                }, [N(L, {
                    name: "arrow",
                    class: "GameRecord__C-icon",
                    size: "20"
                })], 2)])) : S("", !0)])
            }
        }
    });
const P4 = H(D4, [
        ["__scopeId", "data-v-b5a08846"]
    ]),
    A4 = l => (wt("data-v-641ea906"), l = l(), Lt(), l),
    O4 = {
        class: "MyGameRecordList__C"
    },
    W4 = ["onClick"],
    q4 = {
        class: "box"
    },
    E4 = {
        class: "time"
    },
    H4 = {
        key: 0,
        class: "state state0"
    },
    F4 = {
        key: 1,
        class: "state state3"
    },
    V4 = {
        key: 2,
        class: "state state4"
    },
    j4 = {
        key: 3,
        class: "state state2"
    },
    U4 = {
        key: 4,
        class: "state state5"
    },
    K4 = {
        key: 5,
        class: "state state1"
    },
    X4 = {
        key: 0,
        class: "info"
    },
    J4 = {
        class: "order"
    },
    Q4 = {
        key: 0,
        class: "li"
    },
    Y4 = {
        class: "lab"
    },
    Z4 = ["onClick"],
    tw = ["src"],
    ew = {
        key: 1,
        class: "li"
    },
    iw = {
        class: "lab"
    },
    nw = {
        class: "sub"
    },
    aw = {
        class: "li"
    },
    ow = {
        class: "lab"
    },
    sw = {
        key: 0,
        class: "sub"
    },
    lw = {
        key: 1,
        class: "sub"
    },
    cw = {
        key: 2,
        class: "li"
    },
    rw = {
        class: "lab"
    },
    uw = {
        class: "sub"
    },
    dw = {
        class: "li"
    },
    pw = {
        class: "lab"
    },
    gw = {
        class: "sub"
    },
    mw = {
        class: "li"
    },
    bw = {
        class: "lab"
    },
    _w = {
        class: "sub"
    },
    vw = {
        class: "li"
    },
    hw = {
        class: "lab"
    },
    kw = {
        class: "sub"
    },
    fw = {
        class: "li"
    },
    yw = {
        class: "lab"
    },
    $w = {
        class: "sub"
    },
    Tw = {
        class: "li"
    },
    Cw = {
        class: "lab"
    },
    ww = {
        class: "sub"
    },
    Lw = A4(() => t("div", {
        class: "line"
    }, [t("p")], -1)),
    Nw = {
        class: "bet"
    },
    Iw = {
        class: "li betNum"
    },
    zw = {
        class: "lab"
    },
    xw = {
        key: 0,
        class: "txt"
    },
    Sw = {
        key: 1,
        class: "txt"
    },
    Rw = {
        key: 2,
        class: "txt"
    },
    Gw = {
        key: 3,
        class: "betList select"
    },
    Mw = {
        key: 4,
        class: "betList select"
    },
    Bw = {
        class: "li"
    },
    Dw = {
        class: "lab"
    },
    Pw = {
        key: 0,
        class: "state state0"
    },
    Aw = {
        key: 1,
        class: "state state3"
    },
    Ow = {
        key: 2,
        class: "state state4"
    },
    Ww = {
        key: 3,
        class: "state state2"
    },
    qw = {
        key: 4,
        class: "state state5"
    },
    Ew = {
        key: 5,
        class: "state state1"
    },
    Hw = {
        class: "li"
    },
    Fw = {
        class: "lab"
    },
    Vw = {
        key: 0,
        class: "sub success"
    },
    jw = {
        key: 1,
        class: "sub fail"
    },
    Uw = {
        key: 2,
        class: "sub"
    },
    Kw = {
        key: 0,
        class: "li"
    },
    Xw = {
        class: "lab"
    },
    Jw = {
        class: "sub"
    },
    Qw = {
        key: 1,
        class: "li"
    },
    Yw = {
        class: "lab"
    },
    Zw = {
        class: "sub"
    },
    t6 = {
        key: 0
    },
    e6 = ["onClick"],
    i6 = {
        key: 1,
        class: "result"
    },
    n6 = {
        key: 0,
        class: "txt"
    },
    a6 = {
        key: 1,
        class: "txt"
    },
    o6 = {
        key: 2,
        class: "txt"
    },
    s6 = {
        key: 3,
        class: "txt"
    },
    l6 = {
        key: 4,
        class: "txt"
    },
    c6 = {
        key: 5,
        class: "txt"
    },
    r6 = {
        key: 6,
        class: "txt"
    },
    u6 = {
        key: 7,
        class: "txt"
    },
    d6 = {
        key: 8,
        class: "txt"
    },
    p6 = {
        class: "num"
    },
    g6 = W({
        __name: "MyRecordList",
        props: {
            mayrecord: {},
            gVSs: {}
        },
        emits: ["click-cance"],
        setup(l, {
            emit: i
        }) {
            const {
                t: o
            } = pt(), u = f(-1), m = C => {
                u.value === C ? u.value = -1 : u.value = C
            }, g = f(!1), d = f(""), c = async () => {
                await rt(Os({
                    orderId: d.value
                })) && (g.value = !1, bn(o("xosoTxt96")), i("click-cance"))
            }, p = C => {
                d.value = C, g.value = !0
            }, r = As(c, 1e3), _ = C => {
                for (var h = [], k = 0; k < C.length; k++) {
                    var w = h.findIndex(function(L) {
                        return L.resultType === C[k].resultType
                    });
                    w !== -1 ? h[w].result.push("-" + C[k].result) : h.push({
                        resultType: C[k].resultType,
                        result: [C[k].result]
                    })
                }
                return h
            }, b = C => {
                const h = y(C);
                return v(h)
            }, y = C => {
                let h = [];
                if (C.includes(",")) {
                    let k = C.split(","),
                        w = {};
                    for (let L = 0; k.length > L; L++) w = k[L].split("|"), h.push(w);
                    return h
                }
                return C
            }, v = C => {
                let h = C[0],
                    k = C[1],
                    w = [];
                for (let z = 0; h.length > z; z++)
                    for (let I = 0; k.length > I; I++) w.push(h[z] + k[I]);
                let L = C.slice(2);
                return L.length > 0 ? v([w, ...L]) : w
            }, $ = C => {
                if (C != null) {
                    let h = C.split(",");
                    if (h.length > 0) return h
                }
                return []
            }, T = C => {
                const h = {
                    大: o("big"),
                    小: o("small"),
                    单: o("odd"),
                    双: o("xosoTxt70")
                };
                return h[C] ? h[C].replace(/\|/g, ",") : C.replace(/\|/g, ",")
            };
            return ht(() => {}), (C, h) => (n(), a("div", O4, [(n(!0), a(G, null, B(C.mayrecord, (k, w) => (n(), a("div", {
                class: M(u.value === w ? "item active" : "item"),
                key: k,
                onClick: L => m(w)
            }, [t("div", q4, [t("div", null, [t("h4", null, e(s(o)("code" + k.bettingParentTypeNameCode)), 1), t("span", E4, e(k.createTime), 1)]), k.status === 1 ? (n(), a("div", H4, [t("p", null, e(s(o)("bettingResultState1")), 1)])) : S("", !0), k.status === 3 ? (n(), a("div", F4, [t("p", null, e(s(o)("hasWon")), 1), t("span", null, "+" + e(k.winningAmount), 1)])) : S("", !0), k.status === 2 ? (n(), a("div", V4, [t("p", null, e(s(o)("bettingResultState3")), 1), t("span", null, "-" + e(k.realBettingAmount), 1)])) : S("", !0), k.status === 4 ? (n(), a("div", j4, [t("p", null, e(s(o)("xosoTxt74")), 1)])) : S("", !0), k.status === 5 ? (n(), a("div", U4, [t("p", null, e(s(o)("xosoTxt75")), 1)])) : S("", !0), k.status === 6 ? (n(), a("div", K4, [t("p", null, e(s(o)("xosoTxt76")), 1)])) : S("", !0)]), u.value === w ? (n(), a("div", X4, [t("div", J4, [k.orderNo ? (n(), a("div", Q4, [t("div", Y4, e(s(o)("orderNo")), 1), t("div", {
                class: "sub",
                onClick: se(L => s(Ue)(k.orderNo), ["stop"])
            }, [E(e(k.orderNo) + " ", 1), t("img", {
                src: s(ut)("home/AllLotteryGames/WinGo", "copy")
            }, null, 8, tw)], 8, Z4)])) : S("", !0), k.issueNo ? (n(), a("div", ew, [t("div", iw, e(s(o)("betIssue")), 1), t("div", nw, e(k.issueNo), 1)])) : S("", !0), t("div", aw, [t("div", ow, e(s(o)("area")), 1), C.gVSs == "1" ? (n(), a("div", sw, e(s(o)("code" + k.areNameCode)), 1)) : C.gVSs == "2" ? (n(), a("div", lw, e(s(o)("code" + k.typeCode)), 1)) : S("", !0)]), C.gVSs == "1" ? (n(), a("div", cw, [t("div", rw, e(s(o)("xosoTxt77")), 1), t("div", uw, e(s(o)("code" + k.nameCode)), 1)])) : S("", !0), t("div", dw, [t("div", pw, e(s(o)("gamePlay")), 1), t("div", gw, e(s(o)("code" + k.bettingParentTypeNameCode)), 1)]), t("div", mw, [t("div", bw, e(s(o)("xosoTxt78")), 1), t("div", _w, e(s(o)("code" + k.bettingTypeNameCode)), 1)]), t("div", vw, [t("div", hw, e(s(o)("amountMay")), 1), t("div", kw, e(k.amount), 1)]), t("div", fw, [t("div", yw, e(s(o)("multiple")), 1), t("div", $w, e(k.bettingMultiple), 1)]), t("div", Tw, [t("div", Cw, e(s(o)("xosoTxt79")), 1), t("div", ww, e(k.totalBetting) + " " + e(s(o)("note")), 1)])]), Lw, t("div", Nw, [t("div", Iw, [t("div", zw, [E(e(s(o)("bettingnumber")), 1), k.bettingFormat === 1 ? (n(), a("span", xw, "(" + e(s(o)("selectNo")) + ")", 1)) : S("", !0), k.bettingFormat === 2 ? (n(), a("span", Sw, "(" + e(s(o)("xosoTxt80")) + ")", 1)) : S("", !0), k.bettingFormat === 3 ? (n(), a("span", Rw, "(" + e(s(o)("xosoTxt81")) + ")", 1)) : S("", !0), k.bettingFormat == 1 ? (n(), a("div", Gw, [(n(!0), a(G, null, B(b(k.bettingContent), (L, z) => (n(), a("span", {
                class: M({
                    active: $(k.winningNum).includes(L)
                }),
                key: z
            }, e(L), 3))), 128))])) : (n(), a("div", Mw, [(n(!0), a(G, null, B(k.bettingContent.split(","), (L, z) => (n(), a("span", {
                class: M({
                    active: $(k.winningNum).includes(L)
                }),
                key: z
            }, e(T(L)), 3))), 128))]))])]), t("div", Bw, [t("div", Dw, e(s(o)("statusMay")), 1), k.status === 1 ? (n(), a("div", Pw, [t("p", null, e(s(o)("bettingResultState1")), 1)])) : S("", !0), k.status === 3 ? (n(), a("div", Aw, [t("p", null, e(s(o)("hasWon")), 1)])) : S("", !0), k.status === 2 ? (n(), a("div", Ow, [t("p", null, e(s(o)("bettingResultState3")), 1)])) : S("", !0), k.status === 4 ? (n(), a("div", Ww, [t("p", null, e(s(o)("xosoTxt74")), 1)])) : S("", !0), k.status === 5 ? (n(), a("div", qw, [t("p", null, e(s(o)("xosoTxt75")), 1)])) : S("", !0), k.status === 6 ? (n(), a("div", Ew, [t("p", null, e(s(o)("xosoTxt76")), 1)])) : S("", !0)]), t("div", Hw, [t("div", Fw, e(s(o)("winOrLose")), 1), k.status === 3 ? (n(), a("div", Vw, "+" + e(k.winningAmount), 1)) : k.status === 2 ? (n(), a("div", jw, "-" + e(k.realBettingAmount), 1)) : (n(), a("div", Uw, "---"))]), k.createTime ? (n(), a("div", Kw, [t("div", Xw, e(s(o)("createTime")), 1), t("div", Jw, e(k.createTime), 1)])) : S("", !0), k.openingTime ? (n(), a("div", Qw, [t("div", Yw, e(s(o)("winTrxTime")), 1), t("div", Zw, e(k.openingTime), 1)])) : S("", !0)]), k.issueNoStatus === 1 && k.status === 1 && C.gVSs == "1" ? (n(), a("div", t6, [t("div", {
                class: "btn",
                onClick: se(L => p(k.id), ["stop"])
            }, e(s(o)("xosoTxt82")), 9, e6)])) : S("", !0), k.openingResult ? (n(), a("div", i6, [(n(!0), a(G, null, B(_(k.openingResult), (L, z) => (n(), a("div", {
                class: M(z < 3 ? "result-item jusb" : "result-item"),
                key: z
            }, [L.resultType == 0 ? (n(), a("div", n6, e(s(o)("GrandPrize")), 1)) : S("", !0), L.resultType == 1 ? (n(), a("div", a6, e(s(o)("firstprize")), 1)) : S("", !0), L.resultType == 2 ? (n(), a("div", o6, e(s(o)("secondprize")), 1)) : S("", !0), L.resultType == 3 ? (n(), a("div", s6, e(s(o)("thirdprize")), 1)) : S("", !0), L.resultType == 4 ? (n(), a("div", l6, e(s(o)("fourprize")), 1)) : S("", !0), L.resultType == 5 ? (n(), a("div", c6, e(s(o)("fiveprize")), 1)) : S("", !0), L.resultType == 6 ? (n(), a("div", r6, e(s(o)("sixprize")), 1)) : S("", !0), L.resultType == 7 ? (n(), a("div", u6, e(s(o)("sevenprize")), 1)) : S("", !0), L.resultType == 8 ? (n(), a("div", d6, e(s(o)("eightprize")), 1)) : S("", !0), t("div", p6, [(n(!0), a(G, null, B(L.result, (I, x) => (n(), a("span", {
                key: x
            }, e(I), 1))), 128))])], 2))), 128))])) : S("", !0)])) : S("", !0)], 10, W4))), 128)), N(Me, {
                show: g.value,
                "onUpdate:show": h[0] || (h[0] = k => g.value = k),
                title: s(o)("xosoTxt99"),
                onConfirm: s(r)
            }, null, 8, ["show", "title", "onConfirm"])]))
        }
    });
const m6 = H(g6, [
        ["__scopeId", "data-v-641ea906"]
    ]),
    b6 = {
        class: "MyGameRecord__C"
    },
    _6 = {
        class: "MyGameRecord__C-body"
    },
    v6 = {
        key: 0,
        class: "MyGameRecord__C-head"
    },
    h6 = {
        key: 2,
        class: "MyGameRecord__C-body-empty"
    },
    k6 = {
        key: 0,
        class: "MyGameRecord__C-foot"
    },
    f6 = {
        class: "MyGameRecord__C-foot-page"
    },
    y6 = W({
        __name: "MyGameRecord",
        props: {
            parmas: {},
            ApiFun: {},
            cityCode: {},
            hasHead: {
                type: Boolean,
                default: !0
            },
            gVSs: {},
            areId: {}
        },
        setup(l, {
            expose: i
        }) {
            const o = l,
                u = gt(),
                m = f(0),
                g = f(10),
                d = f(1),
                c = f([]),
                p = async () => {
                    var h, k, w;
                    const T = r(o.parmas);
                    (o == null ? void 0 : o.gVSs) == "2" && (o != null && o.areId && (T.areId = o == null ? void 0 : o.areId), o != null && o.cityCode && (T.typeId = Number(o == null ? void 0 : o.cityCode)));
                    const C = await rt(o.ApiFun({
                        pageSize: g.value,
                        pageNo: d.value,
                        ...T
                    }));
                    C && (c.value = ((h = C.data) == null ? void 0 : h.list) || [], m.value = ((k = C.data) == null ? void 0 : k.totalPage) || 0, d.value = (w = C.data) == null ? void 0 : w.pageNo)
                };

            function r(T) {
                const C = {};
                for (const h in T) T[h] !== "" && (C[h] = T[h]);
                return C
            }
            const _ = () => {
                    p()
                },
                b = U(() => o.gVSs == "1" ? "AllLotteryGames-XoSoRecord" : o.gVSs == "2" ? "AllLotteryGames-XoSoRecordF" : ""),
                y = T => {
                    u.push({
                        name: T,
                        query: {
                            areId: o.areId,
                            typeId: o.cityCode
                        }
                    })
                },
                v = () => {
                    d.value--, p()
                },
                $ = () => {
                    d.value++, p()
                };
            return i({
                getData: p
            }), Ce(() => {
                p()
            }), (T, C) => {
                var k, w;
                const h = V("van-icon");
                return n(), a("div", b6, [t("div", _6, [T.hasHead ? (n(), a("div", v6, [t("div", {
                    class: "MyGameRecord__C-head-moreB",
                    onClick: C[0] || (C[0] = L => y(b.value || ""))
                }, e(T.$t("more")), 1)])) : S("", !0), (k = c.value) != null && k.length ? (n(), Q(m6, {
                    key: 1,
                    mayrecord: c.value,
                    onClickCance: _,
                    gVSs: T.gVSs
                }, null, 8, ["mayrecord", "gVSs"])) : (n(), a("div", h6, [N(ve)]))]), (w = c.value) != null && w.length ? (n(), a("div", k6, [t("div", {
                    class: M(["MyGameRecord__C-foot-previous", {
                        disabled: d.value <= 1
                    }]),
                    onClick: v
                }, [N(h, {
                    name: "arrow-left",
                    class: "MyGameRecord__C-icon",
                    size: "20"
                })], 2), t("div", f6, e(d.value) + "/" + e(m.value), 1), t("div", {
                    class: M(["MyGameRecord__C-foot-next", {
                        disabled: d.value >= m.value
                    }]),
                    onClick: $
                }, [N(h, {
                    name: "arrow",
                    class: "MyGameRecord__C-icon",
                    size: "20"
                })], 2)])) : S("", !0)])
            }
        }
    });
const Rn = H(y6, [
        ["__scopeId", "data-v-a9fa5d22"]
    ]),
    $6 = {
        key: 0,
        class: "WinningTip__C-body-l1 isL"
    },
    T6 = {
        key: 1,
        class: "WinningTip__C-body-l1"
    },
    C6 = {
        key: 2,
        class: "notwinning"
    },
    w6 = {
        key: 3,
        class: "WinningTip__C-body-l2"
    },
    L6 = {
        key: 4,
        class: "WinningTip__C-body-l5"
    },
    N6 = {
        class: "WinningTip__C-body-l5-content"
    },
    I6 = {
        class: "balltext"
    },
    z6 = {
        class: "WinningTip__C-body-l3"
    },
    x6 = {
        key: 0,
        class: "isLose"
    },
    S6 = {
        class: "head"
    },
    R6 = {
        class: "bonus"
    },
    G6 = {
        class: "gameDetail"
    },
    M6 = {
        class: "gameDetail"
    },
    B6 = {
        class: "WinningTip__C-body-l4"
    },
    D6 = ["onClick"],
    P6 = W({
        __name: "WinningTips",
        setup(l, {
            expose: i
        }) {
            const o = U(() => g.value[0] ? g.value[0].winningAmount == 0 : !1),
                u = U(() => g.value[0] || {}),
                m = f(!1),
                g = f([]);
            let d = f();
            const c = () => {
                clearTimeout(d.value), g.value.shift(), m.value && g.value.length && (d.value = setTimeout(() => {
                    c()
                }, 1e3 * 3))
            };
            Ot(() => g.value.length, b => {
                b ? document.body.style.overflow = "hidden" : document.body.style.overflow = ""
            });
            const p = () => {
                    m.value = !m.value, m.value ? d.value = setTimeout(() => {
                        c()
                    }, 1e3 * 3) : clearTimeout(d.value)
                },
                r = b => {
                    g.value.push(b), m.value && (d.value = setTimeout(() => {
                        c()
                    }, 1e3 * 3))
                },
                _ = () => {
                    g.value = []
                };
            return i({
                showMark: r
            }), (b, y) => et((n(), a("div", {
                class: "WinningTip__C",
                onClick: c
            }, [t("div", {
                class: M(["WinningTip__C-body", {
                    isL: o.value
                }])
            }, [o.value ? (n(), a("div", $6, e(b.$t("k3WarningTip1")), 1)) : S("", !0), o.value ? S("", !0) : (n(), a("div", T6, e(b.$t("k3WarningTip2")), 1)), o.value ? (n(), a("div", C6)) : S("", !0), o.value ? S("", !0) : (n(), a("div", w6, e(b.$t("code" + u.value.bettingParentTypeNameCode)) + "/" + e(b.$t("code" + u.value.bettingTypeNameCode)), 1)), o.value ? S("", !0) : (n(), a("div", L6, [t("div", N6, [(n(!0), a(G, null, B(u.value.openingResult, (v, $) => (n(), a("div", {
                class: "ball",
                key: $
            }, [t("div", I6, e(v), 1)]))), 128))])])), t("div", z6, [o.value ? (n(), a("div", x6, e(b.$t("winTips4")), 1)) : S("", !0), o.value ? S("", !0) : (n(), a(G, {
                key: 1
            }, [t("div", S6, e(b.$t("winTips5")), 1), t("div", R6, e(s(xt)(u.value.winningAmount)), 1)], 64)), t("div", G6, e(b.$t(`code${u.value.typeCode}`)), 1), t("div", M6, e(b.$t("winTips6")) + e(u.value.issueNo), 1)]), t("div", B6, [t("div", {
                class: M(["acitveBtn", {
                    active: m.value
                }]),
                onClick: se(p, ["stop"])
            }, null, 10, D6), E(" " + e(b.$t("autoShutOff3s")), 1)]), t("div", {
                class: "closeBtn",
                onClick: _
            })], 2)], 512)), [
                [Vt, g.value.length]
            ])
        }
    });
const A6 = H(P6, [
        ["__scopeId", "data-v-90723203"]
    ]),
    Gn = l => (wt("data-v-44e48c38"), l = l(), Lt(), l),
    O6 = {
        class: "NewVietnam__C"
    },
    W6 = Gn(() => t("div", {
        class: "bottombg"
    }, null, -1)),
    q6 = {
        class: "box p-l-10 p-r-10 p-t-10 p-b-10"
    },
    E6 = ["src"],
    H6 = {
        class: "title c-tc"
    },
    F6 = {
        key: 0,
        class: "titlebets c-tc border60"
    },
    V6 = {
        class: "box"
    },
    j6 = {
        class: "c-row"
    },
    U6 = {
        key: 2,
        class: M("c-row c-flex-warp compound")
    },
    K6 = {
        key: 0,
        class: "item"
    },
    X6 = {
        class: "title"
    },
    J6 = {
        class: "numcontainer"
    },
    Q6 = {
        key: 1,
        class: "item"
    },
    Y6 = {
        class: "title"
    },
    Z6 = {
        class: "numcontainer"
    },
    t8 = {
        key: 2,
        class: "item"
    },
    e8 = {
        class: "title"
    },
    i8 = {
        class: "numcontainer"
    },
    n8 = {
        key: 3,
        class: "item"
    },
    a8 = {
        class: "title"
    },
    o8 = {
        class: "numcontainer"
    },
    s8 = {
        key: 4,
        class: "item"
    },
    l8 = {
        class: "numcontainer"
    },
    c8 = {
        class: "popup-info"
    },
    r8 = {
        class: "popup-info-item c-row c-row-between"
    },
    u8 = {
        class: "tit"
    },
    d8 = {
        class: "c-row c-row-between stepper-box"
    },
    p8 = {
        class: "popup-info-item c-row c-flew-end"
    },
    g8 = {
        class: "c-row multiple-box"
    },
    m8 = ["onClick"],
    b8 = {
        class: "c-row c-row-between c-row-middle quantity"
    },
    _8 = {
        class: "c-row c-row-middle-center"
    },
    v8 = Gn(() => t("span", {
        class: "line"
    }, "|", -1)),
    h8 = {
        class: "num"
    },
    k8 = {
        class: "c-row c-row-middle-center"
    },
    f8 = Gn(() => t("span", {
        class: "line"
    }, "|", -1)),
    y8 = {
        class: "num"
    },
    $8 = {
        class: "wallet c-row c-row-between c-row-middle"
    },
    T8 = {
        class: "txt c-row"
    },
    C8 = {
        class: "num c-row c-row-middle"
    },
    w8 = {
        class: "balance c-row c-row-middle"
    },
    L8 = {
        class: "txt"
    },
    N8 = {
        class: "num yellow"
    },
    I8 = {
        key: 0,
        class: "wallet c-row c-row-between c-row-middle"
    },
    z8 = {
        class: "txt c-row bg7172"
    },
    x8 = ["src"],
    S8 = {
        class: "popup-info-item c-row c-row-middle"
    },
    R8 = {
        class: "agree p-r-15"
    },
    G8 = {
        class: "popup-btn c-row c-row-between"
    },
    M8 = {
        class: "left"
    },
    B8 = {
        class: "right"
    },
    D8 = {
        class: ""
    },
    P8 = {
        class: "areList"
    },
    A8 = ["src"],
    O8 = {
        class: "itemsC"
    },
    W8 = ["onClick"],
    q8 = {
        class: "PreSale"
    },
    E8 = {
        class: "head"
    },
    H8 = {
        class: "body"
    },
    F8 = {
        class: "foot"
    },
    V8 = ["src"],
    j8 = ["src"],
    U8 = {
        class: "font36"
    },
    K8 = {
        class: "tipMsg"
    },
    X8 = W({
        __name: "index",
        setup(l) {
            var Vn, jn;
            const i = gt(),
                o = ii(),
                {
                    t: u
                } = pt(),
                m = f(!1),
                g = U(() => {
                    var q, F;
                    return b.value ? (q = b.value) == null ? void 0 : q.type : (F = o.query) == null ? void 0 : F.type
                }),
                d = f(i.currentRoute.value.query.nameCode),
                c = f(Number((Vn = o.query) == null ? void 0 : Vn.areId) || 1),
                p = U(() => d.value ? u("code" + d.value) : ""),
                r = f((jn = o.query) == null ? void 0 : jn.code),
                _ = f(),
                b = f(),
                y = Et({
                    bettingParentType: "",
                    areId: "",
                    startDate: "",
                    endDate: ""
                }),
                v = new Date,
                $ = `${de(v).format("YYYY-MM-DD")} 00:00:00`,
                T = `${de(v).format("YYYY-MM-DD")} 23:59:59`;
            y.startDate = $, y.endDate = T;
            const C = f(!1),
                h = f([]),
                k = f([]),
                w = f({}),
                L = f(0),
                z = f(1),
                I = f(0),
                x = f(1),
                R = f(1),
                O = f(""),
                P = f(""),
                K = f("00:00:00"),
                X = f(1.995),
                at = f(1),
                ct = f([]),
                ot = f(0),
                J = f(""),
                Z = f(1),
                lt = f(""),
                Rt = f([]),
                Nt = f(0),
                _t = f(0),
                Ht = f(0),
                Kt = f(0),
                $t = f(""),
                It = f(),
                St = f(1e3),
                Ct = f([]),
                dt = f([]),
                tt = f([]),
                nt = f([]),
                A = f([]),
                st = f([]),
                Tt = f("1000"),
                At = f(1),
                fe = f(!1),
                ce = U(() => !(qe.value > li.value || te.value <= 0)),
                Re = f(["000/099", "100/199", "200/299", "300/399", "400/499", "500/599", "600/699", "700/799", "800/899", "900/999"]),
                kt = f("000/099"),
                We = f(0),
                Be = f(!1),
                we = f(1),
                Mt = f(1),
                oi = f(0),
                Le = f(0),
                si = f(0),
                Ne = f("GameRecord"),
                Yi = {
                    GameRecord: P4,
                    MyGameRecord: Rn
                },
                te = f(1),
                Mi = f(),
                Qt = f(!1),
                wi = f(!0),
                qe = f(0),
                li = f(0),
                De = f(0),
                ci = f(!1),
                Ve = f(),
                Ye = f(!1),
                j = f(""),
                it = f(""),
                ft = U(() => {
                    if (g.value == "1") return Pa;
                    if (g.value == "2") return Aa
                }),
                Gt = q => {
                    const F = String(Math.floor(Wt.value % 3600 / 60)).padStart(2, "0"),
                        Y = String(Wt.value % 60).padStart(2, "0");
                    return `${F}:${Y}`
                },
                Wt = f(),
                Pt = f(null),
                ee = f("00:00"),
                Ft = f(!1),
                Yt = () => {
                    Pt.value = setInterval(() => {
                        Wt.value <= 0 ? (ee.value = "00:00", setTimeout(() => {
                            Ft.value = !0
                        }, 500), clearInterval(Pt.value), je(), setTimeout(() => {
                            ui(!0)
                        }, 5e3)) : (Ft.value = !1, ee.value = Gt(Wt.value), Wt.value--)
                    }, 1e3)
                },
                pe = f(null),
                Ee = (q, F) => {
                    clearInterval(De.value), fe.value = !1, De.value = (F - q) / 1e3, pe.value = setInterval(() => {
                        if (De.value <= 0) clearInterval(pe.value), K.value = "00:00:00", fe.value = !0;
                        else {
                            const Y = String(Math.floor(De.value / 3600)).padStart(2, "0"),
                                bt = String(Math.floor(De.value % 3600 / 60)).padStart(2, "0"),
                                yt = String(De.value % 60).padStart(2, "0");
                            K.value = Y + ":" + bt + ":" + yt, De.value--
                        }
                    }, 1e3)
                };

            function ye() {
                b.value || (Te({
                    message: u("xosoTip5"),
                    wordBreak: "break-word"
                }), setTimeout(function() {
                    Fn("AllLotteryGames-XoSo")
                }, 2e3))
            }
            const je = async () => {
                let q;
                if (g.value == "1") {
                    const yt = de(o.query.day).format("YYYY-MM-DD HH:mm:ss");
                    q = await rt(Ba({
                        dateTime: yt
                    }))
                } else g.value == "2" && (q = await rt(Da({
                    are: c.value,
                    typeId: Number(r.value)
                })));
                q.data.length == 0 && ye();
                let F = q.data.find(yt => yt.day == o.query.day);
                P.value = F.day;
                let Y = F.areInfos.find(yt => (yt == null ? void 0 : yt.areId) == c.value);
                const bt = Y == null ? void 0 : Y.serverTime;
                if (b.value = Y.areIssueNos.find(yt => yt.code == r.value), b.value || ye(), g.value == "1") {
                    const yt = Y == null ? void 0 : Y.closingTime;
                    clearInterval(pe.value), Ee(new Date(bt.replace(/-/g, "/")).getTime(), new Date(yt.replace(/-/g, "/")).getTime())
                } else g.value == "2" && (Wt.value = (new Date(b.value.endTime.replace(/-/g, "/")).getTime() - new Date(bt.replace(/-/g, "/")).getTime()) / 1e3, clearInterval(Pt.value), Yt())
            };
            let He = null;
            const Pe = f(""),
                ri = f(),
                ui = async (q = !1) => {
                    var bt, yt, Xt, Zt, he, ke, vt, Bt;
                    if (m.value || g.value != "2") return;
                    let F, Y = !0;
                    if (Ne.value === "GameRecord") {
                        if (F = await rt(Ma({
                                pageSize: 10,
                                pageNo: 1,
                                areId: c.value,
                                typeId: Number(r.value)
                            })), F) {
                            if (((yt = (bt = F.data) == null ? void 0 : bt.list) == null ? void 0 : yt.length) > 0 && (Pe.value.trim().length == 0 || Pe.value != ((Zt = (Xt = F.data) == null ? void 0 : Xt.list[0]) == null ? void 0 : Zt.issueNumber)) && (Y = !1, Pe.value = (ke = (he = F.data) == null ? void 0 : he.list[0]) == null ? void 0 : ke.issueNumber), Y == !0 && q) {
                                clearTimeout(He), He = setTimeout(() => {
                                    ui(!0)
                                }, 1e3);
                                return
                            }
                            w.value = (vt = F.data) == null ? void 0 : vt.list[0], ri.value = F.data, ie(() => {
                                Ve.value.getData(!1, ri.value)
                            })
                        }
                    } else if (Ne.value === "MyGameRecord" && (F = await rt(Ws({
                            areId: c.value,
                            typeId: Number(r.value)
                        })), F && F.data && F.data.openingResult && F.data.openingResult.length > 0 && (Y = !1, Pe.value = (Bt = F.data) == null ? void 0 : Bt.issueNumber, w.value = F.data), Y == !0 && q)) {
                        clearTimeout(He), He = setTimeout(() => {
                            ui(!0)
                        }, 1e3);
                        return
                    }
                };

            function bo() {
                let q = JSON.parse(sessionStorage.getItem("xosoList") || ""),
                    F = [];
                for (let Y = 0; Y < q.areInfos.length; Y++) F.push({
                    text: u("code" + q.areInfos[Y].areNameCode),
                    value: q.areInfos[Y].areId,
                    disabled: !0,
                    info: q.areInfos[Y].areIssueNos
                });
                h.value = F
            }

            function _o(q, F) {
                var Y;
                if (r.value == q.code) {
                    Be.value = !1;
                    return
                }
                an(), c.value = F, d.value = q.nameCode, r.value = q.code, L.value = 0, I.value = 0, z.value = k.value.length > 0 ? (Y = k == null ? void 0 : k.value[0]) == null ? void 0 : Y.categoryId : 1, Be.value = !1, vo(q, F), b.value = q, q.type == "2" && (fe.value = !1, ui()), je(), Pn(), ie(() => {
                    Ne.value === "MyGameRecord" && Ve.value.getData(!0)
                })
            }

            function vo(q, F) {
                const Y = ns("hash");
                Y.code = q == null ? void 0 : q.code, Y.nameCode = q == null ? void 0 : q.nameCode, Y.type = q == null ? void 0 : q.type, Y.areId = F
            }
            const Pn = async () => {
                var F, Y, bt, yt, Xt, Zt, he, ke;
                An(), re();
                let q;
                g.value == "1" ? q = await rt(qs({
                    areaId: c.value
                })) : g.value == "2" && (q = await rt(Es({
                    areaId: c.value,
                    typeId: Number(r.value)
                }))), q && (k.value = (Y = (F = q.data) == null ? void 0 : F.areaConfigList[0]) == null ? void 0 : Y.gameCategoryList, localStorage.setItem("gameCategoryList", JSON.stringify((bt = q.data.areaConfigList[0]) == null ? void 0 : bt.gameCategoryList)), O.value = (Xt = (yt = k == null ? void 0 : k.value[0]) == null ? void 0 : yt.gamePlayList[0]) == null ? void 0 : Xt.playNameCode, x.value = (he = (Zt = k == null ? void 0 : k.value[0]) == null ? void 0 : Zt.gamePlayList[0]) == null ? void 0 : he.playId, z.value = (ke = k == null ? void 0 : k.value[0]) == null ? void 0 : ke.categoryId, Zi())
            }, ho = (q, F) => {
                re(), L.value = F, z.value = q, I.value = 0, x.value = k == null ? void 0 : k.value[F].gamePlayList[0].playId, R.value = k.value[F].gamePlayList[0].betType, O.value = k.value[F].gamePlayList[0].playNameCode, We.value = 0, Zi()
            }, ko = (q, F, Y, bt) => {
                I.value = F, x.value = q, O.value = Y, R.value = Number(bt), We.value = 0, Zi(), re()
            }, Zi = async () => {
                var F, Y, bt, yt, Xt, Zt, he, ke, vt, Bt, ue, Dt, on, Un, Kn, Xn, Jn, Qn, Yn, Zn, ta;
                An();
                let q;
                g.value == "1" ? q = await rt(Hs({
                    areaId: c.value,
                    categoryId: z.value,
                    playId: x.value
                })) : g.value == "2" && (q = await rt(Fs({
                    areaId: c.value,
                    categoryId: z.value,
                    playId: x.value
                }))), J.value = (F = q.data) == null ? void 0 : F.betMethod, lt.value = (Y = q.data) == null ? void 0 : Y.betScopeConfig, Nt.value = (bt = q.data) == null ? void 0 : bt.isThreeNumber, _t.value = (yt = q.data) == null ? void 0 : yt.betNumber, $t.value = (Xt = q.data) == null ? void 0 : Xt.fastSpeciaSelectNo, Ht.value = (Zt = q.data) == null ? void 0 : Zt.fastRandomType, Kt.value = (he = q.data) == null ? void 0 : he.fastSpeciaType, si.value = (ke = q.data) == null ? void 0 : ke.playOddInfo.defaultOdds, X.value = (vt = q.data) == null ? void 0 : vt.playOddInfo.oddsOrAmount, oi.value = (Bt = q.data) == null ? void 0 : Bt.playOddInfo.bettingAmount, Rt.value = (Dt = (ue = q.data) == null ? void 0 : ue.fastRandomSelecNo) == null ? void 0 : Dt.split(",").map(Number), ct.value = (Un = (on = q.data) == null ? void 0 : on.playOddInfo.bettingMultiple) == null ? void 0 : Un.split(",").map(Number), te.value = (Xn = (Kn = q.data) == null ? void 0 : Kn.playOddInfo.bettingMultiple) == null ? void 0 : Xn.split(",")[0], Mt.value = (Jn = q.data) == null ? void 0 : Jn.perBetNumber, z.value == 8 && (st.value = (Qn = q.data) == null ? void 0 : Qn.funPlayOddList), fo((Yn = q.data) == null ? void 0 : Yn.betMethod), $o((Zn = q.data) == null ? void 0 : Zn.betNumber), To((ta = q.data) == null ? void 0 : ta.isThreeNumber)
            }, fo = q => {
                q != null && q.includes("1") ? Z.value = 1 : z.value === 4 || z.value === 8 ? Z.value == 1 : Z.value = 3
            }, yo = (q, F) => {
                Tt.value = q.oddTypeName, At.value = q.oddsOrAmount, A.value = [Tt.value], Ut(3, _t.value)
            }, $o = q => {
                q == 10 ? we.value = 1 : q == 8 ? we.value = 2 : q == 4 ? we.value = 3 : q == 3 ? we.value = 4 : q == 2 ? we.value = 5 : we.value = 0
            }, To = q => {
                q == 1 && (It.value = kt.value.split("/")[0][0].toString())
            }, An = () => {
                Z.value = 1, X.value = 0, oi.value = 0, ct.value = [], J.value = "", lt.value = "", Rt.value = [], Nt.value = 0, _t.value = 0, $t.value = "", Ht.value = 0, Kt.value = 0, St.value = 1e3, It.value = ""
            }, re = () => {
                Ct.value = [], dt.value = [], tt.value = [], nt.value = [], A.value = [], at.value = 0, Tt.value = "1000", qe.value = 0, Le.value = 0, te.value = 1, it.value = "", St.value = 1e3, ie(() => {
                    _.value && _.value.cleardata()
                })
            }, Co = q => {
                it.value = q;
                let Y = q.split(",").flatMap(bt => bt.split("|"));
                A.value = Y.map(String), Ut(Z.value, _t.value)
            }, wo = (q, F, Y, bt) => {
                q == "Thousand" ? bt == "all" ? Ct.value = Bi(F, Y) : bt == "big" ? Ct.value = Ie(F, Y, "big", 0) : bt == "small" ? Ct.value = Ie(F, Y, "small", 0) : bt == "odd" ? Ct.value = ze(F, Y, "odd", 0) : Ct.value = ze(F, Y, "even", 0) : q == "hundred" ? bt == "all" ? dt.value = Bi(F, Y) : bt == "big" ? dt.value = Ie(F, Y, "big", 0) : bt == "small" ? dt.value = Ie(F, Y, "small", 0) : bt == "odd" ? dt.value = ze(F, Y, "odd", 0) : dt.value = ze(F, Y, "even", 0) : q == "ten" ? bt == "all" ? tt.value = Bi(F, Y) : bt == "big" ? tt.value = Ie(F, Y, "big", 0) : bt == "small" ? tt.value = Ie(F, Y, "small", 0) : bt == "odd" ? tt.value = ze(F, Y, "odd", 0) : tt.value = ze(F, Y, "even", 0) : bt == "all" ? nt.value = Bi(F, Y) : bt == "big" ? nt.value = Ie(F, Y, "big", 0) : bt == "small" ? nt.value = Ie(F, Y, "small", 0) : bt == "odd" ? nt.value = ze(F, Y, "odd", 0) : nt.value = ze(F, Y, "even", 0), Ut(Z.value, _t.value)
            }, Lo = (q, F) => {
                if (q == 0) F == "even" ? (re(), A.value = ze(0, 99, "even", 2), Ut(Z.value, _t.value)) : F == "big" ? (re(), A.value = Ie(0, 99, "big", 2), Ut(Z.value, _t.value)) : F == "small" ? (re(), A.value = Ie(0, 99, "small", 2), Ut(Z.value, _t.value)) : F == "odd" ? (re(), A.value = ze(0, 99, "odd", 2), Ut(Z.value, _t.value)) : (re(), A.value = ia(0, 99, 2), Ut(Z.value, _t.value));
                else {
                    let Y = Number(kt.value.split("/")[0]),
                        bt = Number(kt.value.split("/")[1]);
                    F == "even" ? (re(), A.value = ze(Y, bt, "even", 3), Ut(Z.value, _t.value)) : F == "big" ? (re(), A.value = Ie(Y, bt, "big", 3), Ut(Z.value, _t.value)) : F == "small" ? (re(), A.value = Ie(Y, bt, "small", 3), Ut(Z.value, _t.value)) : F == "odd" ? (re(), A.value = ze(Y, bt, "odd", 3), Ut(Z.value, _t.value)) : (re(), A.value = ia(Y, bt, 3), Ut(Z.value, _t.value))
                }
            }, No = (q, F, Y) => {
                if (q == "") {
                    let bt = F + "" + Y;
                    A.value.includes(bt) ? A.value = A.value.filter(function(yt) {
                        return yt != bt
                    }) : A.value.push(bt)
                } else {
                    let bt = q + "" + F + Y;
                    A.value.includes(bt) ? A.value = A.value.filter(function(yt) {
                        return yt != bt
                    }) : A.value.push(bt)
                }
                Ut(Z.value, _t.value)
            }, Io = (q, F) => {
                q == "Thousand" ? Ct.value.includes(F) ? Ct.value = Ct.value.filter(function(Y) {
                    return Y != F
                }) : Ct.value.push(F) : q == "Hundred" ? dt.value.includes(F) ? dt.value = dt.value.filter(function(Y) {
                    return Y != F
                }) : dt.value.push(F) : q == "ten" ? tt.value.includes(F) ? tt.value = tt.value.filter(function(Y) {
                    return Y != F
                }) : tt.value.push(F) : nt.value.includes(F) ? nt.value = nt.value.filter(function(Y) {
                    return Y != F
                }) : nt.value.push(F), Ut(Z.value, _t.value)
            }, zo = (q, F) => {
                We.value = F, kt.value = q, St.value = 1e3, It.value = kt.value.split("/")[0][0].toString(), re()
            }, xo = (q, F, Y) => {
                if (St.value = F, Y == 0) A.value = na(Number(q) * _t.value, 0, 99, Y), Ut(Z.value, _t.value);
                else {
                    let bt = Number(kt.value.split("/")[0]),
                        yt = Number(kt.value.split("/")[1]);
                    A.value = na(Number(q), bt, yt, Y), Ut(Z.value, _t.value)
                }
            }, So = q => {
                Z.value = q, re()
            }, Ro = () => {
                Qt.value = !1, re()
            }, Go = q => {}, Mo = () => {
                ci.value = !1, wi.value = !0
            }, Bo = () => {
                Qt.value = !1, te.value = 1, Ut(Z.value, _t.value)
            }, On = () => {
                const q = k.value[L.value].gamePlayList[I.value].availableBetNumber,
                    F = k.value[L.value].gamePlayList[I.value].eachIssueBetMaxWinningAmount;
                return Le.value > q ? qt(u("xosoTip1", [q])) : qe.value > F ? qt(u("xosoTip2", [F])) : !0
            }, Do = async () => {
                var F, Y, bt, yt;
                if (On() === !0) {
                    if (Le.value > 5e3) return qt(u("xosoTxt94"));
                    if (Z.value == 1)(F = lt.value) != null && F.includes("4") ? nt.value.length > 0 && tt.value.length > 0 && dt.value.length > 0 && Ct.value.length > 0 ? Qt.value = !0 : qt(u("xosoTxt95")) : (Y = lt.value) != null && Y.includes("3") ? nt.value.length > 0 && tt.value.length > 0 && dt.value.length > 0 ? Qt.value = !0 : qt(u("xosoTxt95")) : (bt = lt.value) != null && bt.includes("2") ? nt.value.length > 0 && tt.value.length > 0 && z.value != 4 || tt.value.length > 0 && z.value == 4 ? Qt.value = !0 : qt(u("xosoTxt95")) : (yt = lt.value) != null && yt.includes("1") ? nt.value.length > 0 ? Qt.value = !0 : qt(u("xosoTxt95")) : A.value.length > 0 && z.value == 8 ? Qt.value = !0 : qt(u("xosoTxt95"));
                    else if (Z.value == 3) Wn(_t.value, A.value);
                    else if (Z.value == 2) {
                        if (!Cl.inputrule.test(it.value)) return qt({
                            message: u(wl.inputtip),
                            wordBreak: "break-word"
                        });
                        for (let Xt = 0; Xt < A.value.length; Xt++)
                            if (A.value[Xt].toString().length != Mt.value) return qt(u("xosoTxt95"));
                        if (Vs(A.value)) return qt(u("xosoTxt98"));
                        Wn(_t.value, A.value)
                    } else z.value == 8 && A.value.length === 1 ? Qt.value = !0 : qt(u("xosoTxt95"));
                    Ut(Z.value, _t.value)
                }
            }, Wn = (q, F) => {
                q == 1 ? F.length > 0 ? Qt.value = !0 : qt(u("xosoTxt95")) : q == 2 ? F.length % 2 == 0 ? Qt.value = !0 : qt(u("xosoTxt95")) : q == 3 ? F.length % 3 == 0 ? Qt.value = !0 : qt(u("xosoTxt95")) : q == 4 ? F.length % 4 == 0 ? Qt.value = !0 : qt(u("xosoTxt95")) : q == 8 ? F.length % 8 == 0 ? Qt.value = !0 : qt(u("xosoTxt95")) : q == 10 && (F.length % 10 == 0 ? Qt.value = !0 : qt(u("xosoTxt95")))
            }, tn = f(null), Po = async () => {
                tn.value && clearTimeout(tn.value), tn.value = setTimeout(async () => {
                    var Zt, he, ke;
                    if (Ft.value) return Te({
                        message: u("xosoTip6"),
                        wordBreak: "break-word"
                    });
                    if (!ce.value || On() !== !0) return;
                    let F = [],
                        Y = "";
                    if (Z.value == 1 ? lt.value.toString().includes("4") ? Y = Ct.value.join("|") + "," + dt.value.join("|") + "," + tt.value.join("|") + "," + nt.value.join("|") : lt.value.toString().includes("3") ? Y = dt.value.join("|") + "," + tt.value.join("|") + "," + nt.value.join("|") : lt.value.toString().includes("2") ? z.value == 4 ? Y = tt.value.join(",") : Y = tt.value.join("|") + "," + nt.value.join("|") : z.value == 4 ? (Y = nt.value.join(","), Z.value = 3) : z.value == 8 && (Y = A.value[0]) : [2, 3].includes(Z.value) ? _t.value == 1 ? Y = A.value.join(",") : _t.value == 2 ? Y = A.value.reduce((Bt, ue, Dt) => (Dt % 2 === 0 && Bt.push(ue + "|" + A.value[Dt + 1]), Bt), []).join(",") : _t.value == 3 ? Y = A.value.reduce((Bt, ue, Dt) => (Dt % 3 === 0 && Bt.push(ue + "|" + A.value[Dt + 1] + "|" + A.value[Dt + 2]), Bt), []).join(",") : _t.value == 4 ? Y = A.value.reduce((Bt, ue, Dt) => (Dt % 4 === 0 && Bt.push(ue + "|" + A.value[Dt + 1] + "|" + A.value[Dt + 2] + "|" + A.value[Dt + 3]), Bt), []).join(",") : _t.value == 8 ? Y = A.value.reduce((Bt, ue, Dt) => (Dt % 8 === 0 && Bt.push(ue + "|" + A.value[Dt + 1] + "|" + A.value[Dt + 2] + "|" + A.value[Dt + 3] + "|" + A.value[Dt + 4] + "|" + A.value[Dt + 5] + "|" + A.value[Dt + 6] + "|" + A.value[Dt + 7]), Bt), []).join(",") : Y = A.value.reduce((Bt, ue, Dt) => (Dt % 10 === 0 && Bt.push(ue + "|" + A.value[Dt + 1] + "|" + A.value[Dt + 2] + "|" + A.value[Dt + 3] + "|" + A.value[Dt + 4] + "|" + A.value[Dt + 5] + "|" + A.value[Dt + 6] + "|" + A.value[Dt + 7] + "|" + A.value[Dt + 8] + "|" + A.value[Dt + 9]), Bt), []).join(",") : z.value === 8 && _t.value == 1 && (Y = A.value[0], Le.value = _t.value), [4, 8].includes(z.value) && (Z.value = 3), Y.replace(",", "").trim().length == 0 || Le.value == 0) return;
                    F.push({
                        bettingParentType: z.value,
                        bettingType: R.value,
                        bettingFormat: Z.value,
                        bettingContent: Y,
                        totalBetting: Le.value,
                        initialAmount: oi.value,
                        bettingMultiple: te.value,
                        defaultOdds: si.value
                    });
                    let [bt, yt] = [null, null], Xt = ka((Zt = b.value) == null ? void 0 : Zt.issueNo);
                    if (g.value == "1" ? [bt, yt] = await ae(js({
                            areId: c.value,
                            issueNo: (he = b.value) == null ? void 0 : he.issueNo,
                            xosoBettingData: F
                        })) : g.value == "2" && ([bt, yt] = await ae(Us({
                            areId: c.value,
                            typeId: Number(r.value),
                            issueNo: (ke = b.value) == null ? void 0 : ke.issueNo,
                            xosoBettingData: F
                        }))), yt) {
                        z.value === 4 && (Z.value = 1), Qt.value = !1;
                        const vt = qn(yt == null ? void 0 : yt.msgCode, yt == null ? void 0 : yt.msg);
                        j.value = vt, We.value = 0, re(), nn(), Ne.value === "MyGameRecord" && Ve.value.getData(), setTimeout(() => {
                            En(Xt)
                        }, Number(Wt.value * 1e3) + 5e3)
                    } else {
                        Qt.value = !1;
                        const vt = qn(yt == null ? void 0 : yt.msgCode, yt == null ? void 0 : yt.msg);
                        j.value = vt
                    }
                }, 500)
            }, Ao = () => {
                setTimeout(() => {
                    Ye.value && (Ye.value = !1)
                }, 1500)
            }, qn = (q, F) => {
                let Y = "";
                switch (q) {
                    case 345:
                        Y = u("xosoTip2", [F]), C.value = !0;
                        break;
                    case 346:
                        Y = u("xosoTip3"), C.value = !0;
                        break;
                    case 347:
                        Y = u("xosoTip3"), C.value = !0;
                        break;
                    case 348:
                        Y = u("xosoTip1", [F]), C.value = !0;
                        break;
                    case 349:
                        Y = u("xosoTip4"), C.value = !0;
                        break;
                    default:
                        Y = "code" + q, Ye.value = !0, Ao();
                        break
                }
                return Y
            }, Oo = () => {
                C.value = !1
            };
            let en = null;
            async function En(q) {
                if (m.value || g.value != "2") return;
                const F = await rt(Ks({
                    issueNo: q
                }));
                if (F) {
                    if (F.data.status == 1) {
                        clearTimeout(en), en = setTimeout(() => {
                            En(q)
                        }, 1e3);
                        return
                    }
                    Mi.value.showMark(F.data), Ne.value === "MyGameRecord" && Ve.value.getData()
                }
            }
            const Wo = q => {
                    q <= 0 || (q >= 5e4 ? te.value = 5e4 : te.value = q), Ut(Z.value, _t.value)
                },
                qo = (q, F) => {
                    ot.value = F, te.value = q, Ut(Z.value, _t.value)
                },
                Hn = q => {
                    switch (q) {
                        case 1:
                            te.value > 1 && (te.value--, Ut(Z.value, _t.value));
                            break;
                        case 2:
                            te.value++, Ut(Z.value, _t.value);
                            break
                    }
                },
                Ut = (q, F) => {
                    F != 0 && (Le.value = Eo(q, F), qe.value = Le.value * oi.value * te.value * si.value, z.value === 8 ? at.value = At.value : at.value = X.value)
                },
                Eo = (q, F) => {
                    let Y = 0;
                    if (q == 1) {
                        let bt = Ct.value.length,
                            yt = dt.value.length,
                            Xt = tt.value.length,
                            Zt = nt.value.length;
                        return lt.value.toString().includes("4") ? Y = bt * yt * Xt * Zt : lt.value.toString().includes("3") ? Y = yt * Xt * Zt : lt.value.toString().includes("2") ? z.value === 4 ? Y = Xt : Y = Xt * Zt : lt.value.toString().includes("1") ? Y = Zt : z.value === 8 && (Y = 1), Y
                    } else {
                        if (q == 3) return Y = Math.floor(A.value.length / F), Y;
                        if (q == 2) return A.value.length == 1 && A.value[0] == "1" ? Y = 0 : Y = Math.floor(A.value.length / F), Y
                    }
                    return Y
                },
                Ho = () => {
                    i.go(-1)
                },
                Fn = q => {
                    var F;
                    i.push({
                        name: q,
                        query: {
                            id: (F = o.query) == null ? void 0 : F.id
                        }
                    })
                },
                nn = async () => {
                    const q = await rt(hn());
                    q && (li.value = (q == null ? void 0 : q.data.amount) || 0)
                };

            function Fo(q) {
                Ne.value = q, Ne.value == "GameRecord" && ie(() => {
                    Ve.value.getData()
                })
            }
            bo(), je(), g.value == "2" && ui(), Pn(), nn();

            function an() {
                clearInterval(pe.value), clearInterval(Pt.value), clearTimeout(He), clearTimeout(en)
            }
            Ii(() => {
                m.value = !0, an()
            });
            const Vo = is();
            return Ot(Vo, (q, F) => {
                q === "visible" && F === "hidden" ? (je(), g.value == "2" && ui(), nn()) : an()
            }), (q, F) => {
                var he, ke;
                const Y = V("NavBar"),
                    bt = V("van-field"),
                    yt = V("van-checkbox"),
                    Xt = V("van-button"),
                    Zt = V("van-popup");
                return n(), a(G, null, [t("div", O6, [N(Y, {
                    "left-arrow": "",
                    onClickLeft: Ho,
                    "background-color": "#3F3F3F"
                }, {
                    center: D(() => [t("div", {
                        class: "centercity",
                        onClick: F[0] || (F[0] = vt => Be.value = !0)
                    }, [E(e(p.value) + " ", 1), W6])]),
                    _: 1
                }), N(tC, {
                    gameCategoryList: k.value,
                    colortab: L.value,
                    playtab: I.value,
                    onColorupdate: ho,
                    onUpdate: ko
                }, null, 8, ["gameCategoryList", "colortab", "playtab"]), g.value == "1" ? (n(), Q(xT, {
                    key: 0,
                    defaultcityname: p.value,
                    defaultplayname: O.value,
                    defaultexpiredate: P.value,
                    colorId: z.value,
                    issue: (he = b.value) == null ? void 0 : he.issueNo,
                    time: K.value,
                    odds: X.value,
                    areId: c.value
                }, null, 8, ["defaultcityname", "defaultplayname", "defaultexpiredate", "colorId", "issue", "time", "odds", "areId"])) : g.value == "2" ? (n(), Q(YT, {
                    key: 1,
                    defaultcityname: p.value,
                    defaultplayname: O.value,
                    colorId: z.value,
                    issue: (ke = b.value) == null ? void 0 : ke.issueNo,
                    time: ee.value,
                    odds: X.value,
                    areId: c.value,
                    resultList: w.value,
                    isShowPreparing: Ft.value
                }, null, 8, ["defaultcityname", "defaultplayname", "colorId", "issue", "time", "odds", "areId", "resultList", "isShowPreparing"])) : S("", !0), z.value === 8 ? (n(), Q(e4, {
                    key: 2,
                    funplaylist: st.value,
                    numbercon: Tt.value,
                    onSelectvalue: yo
                }, null, 8, ["funplaylist", "numbercon"])) : (n(), Q(KC, {
                    key: 3,
                    ref_key: "numberselectRef",
                    ref: _,
                    methodList: J.value,
                    activeTab: Z.value,
                    randomList: Rt.value,
                    randomtype: Ht.value,
                    specialtype: Kt.value,
                    isthreenumber: Nt.value,
                    speciaSelectNo: $t.value,
                    isShowMark: fe.value,
                    betconfig: lt.value,
                    hundred: It.value,
                    groupTab: St.value,
                    thousandnumList: Ct.value,
                    hundrednumList: dt.value,
                    tennumList: tt.value,
                    indicualnumList: nt.value,
                    quicknumList: A.value,
                    intervalnumber: Re.value,
                    intervalTab: We.value,
                    onTabupdate: So,
                    onSelectgroup: xo,
                    onSelectinterval: zo,
                    onBetNum: Io,
                    onBetQuickNum: No,
                    onGetselect: wo,
                    onGetquick: Lo,
                    onInputblur: Co
                }, null, 8, ["methodList", "activeTab", "randomList", "randomtype", "specialtype", "isthreenumber", "speciaSelectNo", "isShowMark", "betconfig", "hundred", "groupTab", "thousandnumList", "hundrednumList", "tennumList", "indicualnumList", "quicknumList", "intervalnumber", "intervalTab"])), N(v4, {
                    record: Ne.value,
                    onChangeC: Fo
                }, null, 8, ["record"]), (n(), Q(ni, null, [(n(), Q(me(Yi[Ne.value]), {
                    ref_key: "RecordComponent",
                    ref: Ve,
                    ApiFun: ft.value,
                    areId: c.value,
                    cityCode: r.value,
                    parmas: y,
                    gVSs: g.value
                }, null, 8, ["ApiFun", "areId", "cityCode", "parmas", "gVSs"]))], 1024)), N(g4, {
                    betNumber: Le.value,
                    betSum: qe.value,
                    onPlayBet: Do
                }, null, 8, ["betNumber", "betSum"]), N(A6, {
                    ref_key: "WinningTipsRef",
                    ref: Mi
                }, null, 512)]), N(Zt, {
                    show: Qt.value,
                    "onUpdate:show": F[8] || (F[8] = vt => Qt.value = vt),
                    "close-on-click-overlay": !1,
                    class: "popup",
                    position: "bottom"
                }, {
                    default: D(() => [t("div", q6, [t("div", {
                        class: "close",
                        onClick: Ro
                    }, [t("img", {
                        class: "img",
                        src: s(ut)("home/AllLotteryGames/NewVietnam", "close")
                    }, null, 8, E6)]), t("div", H6, e(q.$t("bettingnumber")), 1), z.value === 6 || c.value === 2 && z.value === 1 && x.value === 4 || c.value === 3 && z.value === 1 && x.value === 4 || c.value === 1 && z.value === 1 && x.value === 5 ? (n(), a("div", F6, e(q.$t("xosoTxt93")), 1)) : S("", !0), Z.value == 2 || Z.value == 3 ? (n(), a("div", {
                        key: 1,
                        class: M("c-row c-flex-warp compound" + Z.value)
                    }, [t("div", {
                        class: M("c-row item item" + we.value + "-" + Mt.value)
                    }, [t("div", V6, [t("div", j6, [(n(!0), a(G, null, B(A.value, (vt, Bt) => (n(), a("div", {
                        class: "num c-row c-row-middle-center",
                        key: Bt
                    }, e(vt), 1))), 128))])])], 2)], 2)) : S("", !0), Z.value == 1 ? (n(), a("div", U6, [Ct.value.length > 0 ? (n(), a("div", K6, [t("div", X6, e(q.$t("xosoTxt87")), 1), t("div", J6, [(n(!0), a(G, null, B(Ct.value, (vt, Bt) => (n(), a("div", {
                        class: "num",
                        key: Bt
                    }, e(vt), 1))), 128))])])) : S("", !0), dt.value.length > 0 ? (n(), a("div", Q6, [t("div", Y6, e(q.$t("xosoTxt88")), 1), t("div", Z6, [(n(!0), a(G, null, B(dt.value, (vt, Bt) => (n(), a("div", {
                        class: "num",
                        key: Bt
                    }, e(vt), 1))), 128))])])) : S("", !0), tt.value.length > 0 ? (n(), a("div", t8, [t("div", e8, e(q.$t("xosoTxt89")), 1), t("div", i8, [(n(!0), a(G, null, B(tt.value, (vt, Bt) => (n(), a("div", {
                        class: "num",
                        key: Bt
                    }, e(vt), 1))), 128))])])) : S("", !0), nt.value.length > 0 ? (n(), a("div", n8, [t("div", a8, e(q.$t("xosoTxt90")), 1), t("div", o8, [(n(!0), a(G, null, B(nt.value, (vt, Bt) => (n(), a("div", {
                        class: "num",
                        key: Bt
                    }, e(vt), 1))), 128))])])) : S("", !0), A.value.length > 0 ? (n(), a("div", s8, [t("div", l8, [(n(!0), a(G, null, B(A.value, (vt, Bt) => (n(), a("div", {
                        class: "num",
                        key: Bt
                    }, e(vt), 1))), 128))])])) : S("", !0)])) : S("", !0), t("div", c8, [t("div", r8, [t("div", u8, e(q.$t("multiple")), 1), t("div", d8, [t("div", {
                        class: "li minus",
                        onClick: F[1] || (F[1] = vt => Hn(1))
                    }, "-"), N(bt, {
                        class: "digit-box",
                        modelValue: te.value,
                        "onUpdate:modelValue": F[2] || (F[2] = vt => te.value = vt),
                        type: "digit",
                        maxlength: 5,
                        onInput: F[3] || (F[3] = vt => Wo(te.value))
                    }, null, 8, ["modelValue"]), t("div", {
                        class: "li plus c-row c-row-middle-center",
                        onClick: F[4] || (F[4] = vt => Hn(2))
                    }, "+")])]), t("div", p8, [t("div", g8, [(n(!0), a(G, null, B(ct.value, (vt, Bt) => (n(), a("div", {
                        class: M(te.value == vt ? "action li" : "li"),
                        onClick: ue => qo(vt, Bt)
                    }, " X" + e(vt), 11, m8))), 256))])]), t("div", b8, [t("div", _8, [E(e(q.$t("quantity")) + " ", 1), v8, t("span", h8, e(Le.value || 0) + e(q.$t("note")), 1)]), t("div", k8, [E(e(q.$t("odds")), 1), f8, E(), t("span", y8, e(at.value), 1)])]), t("div", $8, [t("div", T8, [E(e(q.$t("walletBalance")) + " ", 1), t("span", C8, e(s(xt)(li.value)), 1)])]), t("div", w8, [t("div", L8, [E(e(q.$t("betAmounts")), 1), t("span", N8, e(s(xt)(qe.value)), 1)])]), qe.value > li.value ? (n(), a("div", I8, [t("div", z8, [t("img", {
                        src: s(ut)("home/AllLotteryGames/NewVietnam", "tip")
                    }, null, 8, x8), E(e(q.$t("insufficientWallet")), 1)]), t("div", {
                        class: "txt bg333",
                        onClick: F[5] || (F[5] = vt => Fn("Recharge"))
                    }, e(q.$t("torecharge")) + " >>", 1)])) : S("", !0), t("div", S8, [N(yt, {
                        modelValue: wi.value,
                        "onUpdate:modelValue": F[6] || (F[6] = vt => wi.value = vt),
                        shape: "square",
                        "checked-color": "#D9AC4F",
                        onChange: Go
                    }, {
                        default: D(() => [t("div", R8, e(q.$t("agree")), 1)]),
                        _: 1
                    }, 8, ["modelValue"]), t("span", {
                        class: "txt",
                        onClick: F[7] || (F[7] = vt => ci.value = !0)
                    }, e(q.$t("presaleRules")), 1)])])]), t("div", G8, [t("div", M8, [N(Xt, {
                        class: "btn",
                        block: "",
                        onClick: Bo
                    }, {
                        default: D(() => [t("span", null, e(q.$t("cancel")), 1)]),
                        _: 1
                    })]), t("div", B8, [N(Xt, {
                        class: M(["btn", {
                            noActive: !ce.value
                        }]),
                        block: "",
                        onClick: Po
                    }, {
                        default: D(() => [t("span", D8, e(q.$t("betting")), 1)]),
                        _: 1
                    }, 8, ["class"])])])]),
                    _: 1
                }, 8, ["show"]), N(Zt, {
                    class: "areBox",
                    show: Be.value,
                    "onUpdate:show": F[10] || (F[10] = vt => Be.value = vt),
                    round: "",
                    position: "bottom",
                    style: {
                        overflow: "initial"
                    }
                }, {
                    default: D(() => [t("div", P8, [t("img", {
                        class: "close",
                        src: s(ut)("common", "close"),
                        alt: "",
                        onClick: F[9] || (F[9] = () => Be.value = !1)
                    }, null, 8, A8), (n(!0), a(G, null, B(h.value, (vt, Bt) => (n(), a("div", {
                        class: "items",
                        key: Bt
                    }, [t("h1", null, e(vt.text), 1), t("div", O8, [(n(!0), a(G, null, B(vt.info, (ue, Dt) => (n(), a("div", {
                        key: Dt,
                        class: M({
                            isActive: r.value == ue.code
                        }),
                        onClick: on => _o(ue, vt.value)
                    }, e(q.$t("code" + ue.nameCode)), 11, W8))), 128))])]))), 128))])]),
                    _: 1
                }, 8, ["show"]), N(Zt, {
                    show: ci.value,
                    "onUpdate:show": F[11] || (F[11] = vt => ci.value = vt),
                    class: "PreSaleRule",
                    "close-on-click-overlay": !1,
                    round: ""
                }, {
                    default: D(() => [t("div", q8, [t("div", E8, e(s(u)("presaleRules")), 1), t("div", H8, e(q.$t("betPopTXT")), 1), t("div", F8, [t("div", {
                        class: "btn",
                        onClick: Mo
                    }, e(s(u)("iKonw")), 1)])])]),
                    _: 1
                }, 8, ["show"]), N(Zt, {
                    show: Ye.value,
                    "onUpdate:show": F[12] || (F[12] = vt => Ye.value = vt),
                    class: "Tips",
                    "close-on-click-overlay": !0
                }, {
                    default: D(() => [t("div", null, [j.value == "code402" ? (n(), a("img", {
                        key: 0,
                        src: s(ut)("home/AllLotteryGames/NewVietnam", "success")
                    }, null, 8, V8)) : (n(), a("img", {
                        key: 1,
                        src: s(ut)("home/AllLotteryGames/NewVietnam", "fail")
                    }, null, 8, j8)), t("div", U8, e(q.$t(j.value)), 1)])]),
                    _: 1
                }, 8, ["show"]), N(Me, {
                    show: C.value,
                    "onUpdate:show": F[13] || (F[13] = vt => C.value = vt),
                    onConfirm: Oo,
                    confirmText: s(u)("confirm"),
                    showCancelBtn: !1
                }, {
                    content: D(() => [t("div", K8, e(j.value ? q.$t(j.value) : ""), 1)]),
                    _: 1
                }, 8, ["show", "confirmText"])], 64)
            }
        }
    });
const J8 = H(X8, [
        ["__scopeId", "data-v-44e48c38"]
    ]),
    YD = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: J8
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    Q8 = {
        class: "Play__C"
    },
    Y8 = {
        class: "title"
    },
    Z8 = ["src"],
    t9 = {
        class: "info"
    },
    e9 = ["src"],
    i9 = {
        class: "sub"
    },
    n9 = {
        class: "text"
    },
    a9 = {
        class: "info_text"
    },
    o9 = {
        class: "forexample"
    },
    s9 = {
        key: 0,
        class: "betting"
    },
    l9 = {
        class: "result"
    },
    c9 = {
        key: 0,
        class: "info_item"
    },
    r9 = ["src"],
    u9 = {
        class: "sub"
    },
    d9 = {
        class: "text"
    },
    p9 = {
        key: 1,
        class: "info_text"
    },
    g9 = {
        class: "forexample"
    },
    m9 = {
        class: "result"
    },
    b9 = W({
        __name: "NorthPlay",
        setup(l) {
            const {
                t: i
            } = pt(), o = f(0), u = Et([{
                title: i("xosoTab1"),
                subList: [{
                    sub: i("xosoSub1"),
                    num: "［45］",
                    resultTip: i("xosoTxt3", ["27"]),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt1")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt2", ["27", "2"])
                    }]
                }, {
                    sub: i("xosoSub2"),
                    num: "［45］",
                    resultTip: i("xosoTxt5"),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt1")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt4")
                    }]
                }, {
                    sub: i("xosoSub3"),
                    num: "［45］",
                    resultTip: i("xosoTxt6", ["27"]),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt1")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt2", ["27", "2"])
                    }]
                }, {
                    sub: i("xosoSub4"),
                    num: "［456］",
                    resultTip: i("xosoTxt9", ["23"]),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt8")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt2", ["23", "3"])
                    }]
                }, {
                    sub: i("xosoSub5"),
                    num: "［4567］",
                    resultTip: i("xosoTxt11", ["20"]),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt10")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt2", ["20", "4"])
                    }]
                }]
            }, {
                title: i("xosoTab2"),
                subList: [{
                    sub: i("xosoSub6"),
                    num: "［45/55］",
                    resultTip: i("xosoTxt14", ["27"]),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt12", ["2"])
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt13", ["27", "2", "2"])
                    }]
                }, {
                    sub: i("xosoSub7"),
                    num: "［45/55/65］",
                    resultTip: i("xosoTxt15", ["27"]),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt12", ["3"])
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt13", ["27", "3", "2"])
                    }]
                }, {
                    sub: i("xosoSub8"),
                    num: "［45/55/65/75］",
                    resultTip: i("xosoTxt16", ["27"]),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt12", ["4"])
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt13", ["27", "4", "2"])
                    }]
                }]
            }, {
                title: i("xosoTab3"),
                subList: [{
                    sub: i("xosoSub9"),
                    num: "［45］",
                    resultTip: i("xosoTxt19"),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt1")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt17")
                    }]
                }, {
                    sub: i("xosoSub18"),
                    num: "［45］",
                    resultTip: i("xosoTxt23"),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt1")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt21")
                    }]
                }, {
                    sub: i("xosoSub11"),
                    num: "［45］",
                    resultTip: i("xosoTxt27"),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt1")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt25")
                    }]
                }, {
                    sub: i("xosoSub12"),
                    num: "［45］",
                    resultTip: i("xosoTxt35"),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt1")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt34")
                    }]
                }, {
                    sub: i("xosoSub13"),
                    num: "［45］",
                    resultTip: i("xosoTxt37"),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt1")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt36")
                    }]
                }]
            }, {
                title: i("xosoTab4"),
                subList: [{
                    sub: i("xosoSub17"),
                    num: "［4］",
                    resultTip: i("xosoTxt31"),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt29")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt30")
                    }]
                }, {
                    sub: i("xosoTxt100"),
                    num: "［4］",
                    resultTip: i("xosoTxt33"),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt101")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt102")
                    }]
                }]
            }, {
                title: i("xosoTab5"),
                subList: [{
                    sub: i("xosoSub19"),
                    num: "［456］",
                    resultTip: i("xosoTxt41"),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt38")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt39")
                    }]
                }, {
                    sub: i("xosoSub20"),
                    num: "［456］",
                    resultTip: i("xosoTxt45"),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt43")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt44")
                    }]
                }, {
                    sub: i("xosoSub21"),
                    num: "［456］",
                    resultTip: i("xosoTxt49"),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt43")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt47")
                    }]
                }, {
                    sub: i("xosoSub22"),
                    num: "［456］",
                    resultTip: i("xosoTxt55"),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt43")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt54")
                    }]
                }]
            }, {
                title: i("xosoTab6"),
                subList: [{
                    sub: i("xosoSub25"),
                    num: "［4567］",
                    resultTip: i("xosoTxt53"),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt51")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt52")
                    }]
                }]
            }, {
                title: i("xosoTab7"),
                subList: [{
                    sub: i("xosoSub26"),
                    num: "［45/55/66/77］",
                    resultTip: i("xosoTxt57", ["27"]),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt12", ["4"])
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt56", ["27"])
                    }]
                }, {
                    sub: i("xosoSub27"),
                    num: "［45/55/66/77/88/99/11/22］",
                    resultTip: i("xosoTxt58", ["27"]),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt12", ["8"])
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt56", ["27"])
                    }]
                }, {
                    sub: i("xosoSub28"),
                    num: "［45/55/66/77/88/99/11/22/33/44］",
                    resultTip: i("xosoTxt59", ["27"]),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt12", ["10"])
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt56", ["27"])
                    }]
                }]
            }, {
                title: i("xosoTab8"),
                subList: [{
                    sub: i("xosoTxt60"),
                    num: "",
                    resultTip: i("xosoTxt66"),
                    txtList: [{
                        bet: i("xosoTxt60"),
                        betTip: i("xosoTxt61")
                    }, {
                        bet: i("big"),
                        betTip: i("xosoTxt62")
                    }, {
                        bet: i("small"),
                        betTip: i("xosoTxt63")
                    }, {
                        bet: i("xosoTxt69"),
                        betTip: i("xosoTxt64")
                    }, {
                        bet: i("xosoTxt70"),
                        betTip: i("xosoTxt65")
                    }]
                }]
            }]);
            return (m, g) => {
                const d = V("van-tab"),
                    c = V("van-tabs");
                return n(), a("div", Q8, [N(c, {
                    active: o.value,
                    "onUpdate:active": g[0] || (g[0] = p => o.value = p),
                    type: "card"
                }, {
                    default: D(() => [(n(!0), a(G, null, B(u, (p, r) => (n(), Q(d, {
                        title: p.title,
                        key: r
                    }, {
                        default: D(() => [(n(!0), a(G, null, B(p.subList, (_, b) => (n(), a("div", {
                            class: "Play__C-Cotent",
                            key: b
                        }, [t("div", Y8, [t("img", {
                            src: s(ut)("home/AllLotteryGames/NewVietnam", "Star")
                        }, null, 8, Z8), t("span", null, e(_.sub), 1)]), t("div", t9, [(n(!0), a(G, null, B(_.txtList, (y, v) => (n(), a("div", {
                            class: "info_item",
                            key: v
                        }, [t("img", {
                            src: s(ut)("home/AllLotteryGames/NewVietnam", "Triangle")
                        }, null, 8, e9), t("span", i9, e(y.bet), 1), t("div", n9, e(y.betTip), 1)]))), 128)), t("div", a9, [t("div", o9, e(s(i)("forexample")), 1), _.num ? (n(), a("div", s9, e(s(i)("betting")) + "：" + e(_.num), 1)) : S("", !0), t("div", l9, e(s(i)("result")) + "：" + e(_.resultTip), 1)]), o.value === 7 ? (n(), a("div", c9, [t("img", {
                            src: s(ut)("home/AllLotteryGames/NewVietnam", "Triangle")
                        }, null, 8, r9), t("span", u9, e(s(i)("xosoTxt71")), 1), t("div", d9, e(s(i)("xosoTxt67")), 1)])) : S("", !0), o.value === 7 ? (n(), a("div", p9, [t("div", g9, e(s(i)("forexample")), 1), t("div", m9, e(s(i)("result")) + "： " + e(s(i)("xosoTxt68")), 1)])) : S("", !0)])]))), 128))]),
                        _: 2
                    }, 1032, ["title"]))), 128))]),
                    _: 1
                }, 8, ["active"])])
            }
        }
    });
const _9 = H(b9, [
        ["__scopeId", "data-v-8a9fafbf"]
    ]),
    Si = l => (wt("data-v-fa6bdd16"), l = l(), Lt(), l),
    v9 = {
        class: "NorthRule__C"
    },
    h9 = {
        class: "NorthRule__C-title"
    },
    k9 = {
        class: "NorthRule__C-tips"
    },
    f9 = Si(() => t("div", {
        class: "borderTopStyle"
    }, [t("span"), t("span")], -1)),
    y9 = {
        class: "title"
    },
    $9 = {
        class: "text"
    },
    T9 = {
        class: "table"
    },
    C9 = {
        class: "table-row header-time"
    },
    w9 = {
        class: "table-time-1"
    },
    L9 = Si(() => t("div", {
        class: "table-time-1"
    }, "18:15", -1)),
    N9 = {
        class: "table-row header-week"
    },
    I9 = {
        class: "table-week-1"
    },
    z9 = {
        class: "table-week-1"
    },
    x9 = {
        class: "table-cell-1"
    },
    S9 = {
        class: "table-cell-1"
    },
    R9 = Si(() => t("div", {
        class: "borderTopStyle"
    }, [t("span"), t("span")], -1)),
    G9 = {
        class: "title"
    },
    M9 = {
        class: "text"
    },
    B9 = {
        key: 0,
        class: "text"
    },
    D9 = {
        key: 1,
        class: "text"
    },
    P9 = {
        class: "NorthRule__C-Rule"
    },
    A9 = {
        class: "NorthRule__C-Struct"
    },
    O9 = Si(() => t("span", {
        class: "left"
    }, null, -1)),
    W9 = Si(() => t("span", {
        class: "right"
    }, null, -1)),
    q9 = {
        class: "table-rule"
    },
    E9 = {
        class: "table-header"
    },
    H9 = {
        class: "table-header-cell"
    },
    F9 = {
        class: "table-header-cell"
    },
    V9 = {
        class: "table-header-cell"
    },
    j9 = {
        class: "table-cell"
    },
    U9 = {
        class: "table-cell"
    },
    K9 = {
        class: "table-cell"
    },
    X9 = {
        class: "table-rule"
    },
    J9 = {
        class: "table-header"
    },
    Q9 = {
        class: "table-header-cell"
    },
    Y9 = {
        key: 0,
        class: "table-box-title"
    },
    Z9 = W({
        __name: "NorthRule",
        setup(l) {
            const {
                t: i
            } = pt(), o = Et([{
                title: "01",
                sub: i("resultsVielottery")
            }, {
                title: "02",
                sub: i("systemresult")
            }, {
                title: "03",
                sub: i("lotterytime")
            }]), u = Et([{
                title: "04",
                sub: i("oddsmiscalculated")
            }, {
                title: "05",
                sub: i("oddsbettingprincipal")
            }, {
                title: "06",
                sub: i("oddsfluctuate")
            }, {
                title: "07",
                sub: i("oncebetgenerated")
            }, {
                title: "08",
                sub: i("anyreasonCauses")
            }, {
                title: "09",
                sub: i("platformcancel"),
                sub1: i("drawdelayedtoolong"),
                sub2: i("resultsofthelotterybeenleaked")
            }]), m = Et([{
                week: i("Monday"),
                addressList: i("Hanoi")
            }, {
                week: i("Tuesday"),
                addressList: i("quangNinh")
            }, {
                week: i("Wednesday"),
                addressList: i("bacninh")
            }, {
                week: i("Thursday"),
                addressList: i("Hanoi")
            }, {
                week: i("Friday"),
                addressList: i("haiphong")
            }, {
                week: i("Saturday"),
                addressList: i("nanning")
            }, {
                week: i("Sunday"),
                addressList: i("taiping")
            }]), g = Et([{
                title: i("GrandPrize"),
                quantity: 1,
                number: i("fivedigits"),
                drawsNumber: ["29818"]
            }, {
                title: i("FirstPrize"),
                quantity: 1,
                number: i("fivedigits"),
                drawsNumber: ["69388"]
            }, {
                title: i("SecondPrize"),
                quantity: 2,
                number: i("fivedigits"),
                drawsNumber: ["66992", "95797"]
            }, {
                title: i("ThirdPrize"),
                quantity: 6,
                number: i("fivedigits"),
                drawsNumber: ["99095", "32620", "51685", "12345", "69548", "69874"]
            }, {
                title: i("FourPrize"),
                quantity: 4,
                number: i("fourdigits"),
                drawsNumber: ["6545", "5257", "7896", "3682"]
            }, {
                title: i("FivePrize"),
                quantity: 6,
                number: i("fourdigits"),
                drawsNumber: ["4567", "8533", "7632", "7632", "6673", "7855"]
            }, {
                title: i("SixPrize"),
                quantity: 3,
                number: i("fourdigits"),
                drawsNumber: ["567", "642", "934"]
            }, {
                title: i("SevenPrize"),
                quantity: 4,
                number: i("seconddigits"),
                drawsNumber: ["48", "64", "32", "51"]
            }, {
                title: i("intotal"),
                quantity: i("lotteryawards"),
                number: ""
            }]);
            return (d, c) => (n(), a("div", v9, [t("div", h9, e(s(i)("northVieLotteryGameRules")), 1), t("div", k9, e(s(i)("precautions")), 1), (n(!0), a(G, null, B(o, (p, r) => (n(), a("div", {
                class: "NorthRule__C-Content",
                key: r
            }, [f9, t("div", y9, e(p.title), 1), t("div", $9, e(p.sub), 1)]))), 128)), t("div", T9, [t("div", C9, [t("div", w9, e(s(i)("winTrxTime")), 1), L9]), t("div", N9, [t("div", I9, e(s(i)("weeks")), 1), t("div", z9, e(s(i)("northLotteryCities")), 1)]), (n(!0), a(G, null, B(m, (p, r) => (n(), a("div", {
                class: "table-row",
                key: r
            }, [t("div", x9, e(p.week), 1), t("div", S9, e(p.addressList), 1)]))), 128))]), (n(!0), a(G, null, B(u, (p, r) => (n(), a("div", {
                class: "NorthRule__C-Content",
                key: r
            }, [R9, t("div", G9, e(p.title), 1), t("div", M9, e(p.sub), 1), p.sub1 ? (n(), a("div", B9, e(p.sub1), 1)) : S("", !0), p.sub2 ? (n(), a("div", D9, e(p.sub2), 1)) : S("", !0)]))), 128)), t("div", P9, e(s(i)("northernLotteryGameRules")), 1), t("div", A9, [O9, E(e(s(i)("colorstructure")), 1), W9]), t("div", q9, [t("div", E9, [t("div", H9, e(s(i)("Lottery")), 1), t("div", F9, e(s(i)("numberofPrizes")), 1), t("div", V9, e(s(i)("Number")), 1)]), (n(!0), a(G, null, B(g, (p, r) => (n(), a("div", {
                class: "table-row",
                key: r
            }, [t("div", j9, e(p.title), 1), t("div", U9, e(p.quantity), 1), t("div", K9, e(p.number), 1)]))), 128))]), t("div", X9, [t("div", J9, [t("div", Q9, e(s(i)("sorthlotteryresult")), 1)]), (n(!0), a(G, null, B(g, (p, r) => (n(), a("div", {
                class: M(r == 8 ? "table-box none" : "table-box"),
                key: r
            }, [r != 8 ? (n(), a("div", Y9, e(p.title), 1)) : S("", !0), (n(!0), a(G, null, B(p.drawsNumber, (_, b) => (n(), a("div", {
                class: "table-box-number",
                key: b
            }, e(_), 1))), 128))], 2))), 128))])]))
        }
    });
const tL = H(Z9, [
        ["__scopeId", "data-v-fa6bdd16"]
    ]),
    eL = {
        class: "Play__C"
    },
    iL = {
        class: "title"
    },
    nL = ["src"],
    aL = {
        class: "info"
    },
    oL = ["src"],
    sL = {
        class: "sub"
    },
    lL = {
        class: "text"
    },
    cL = {
        class: "info_text"
    },
    rL = {
        class: "forexample"
    },
    uL = {
        key: 0,
        class: "betting"
    },
    dL = {
        class: "result"
    },
    pL = {
        key: 0,
        class: "info_item"
    },
    gL = ["src"],
    mL = {
        class: "sub"
    },
    bL = {
        class: "text"
    },
    _L = {
        key: 1,
        class: "info_text"
    },
    vL = {
        class: "forexample"
    },
    hL = {
        class: "result"
    },
    kL = W({
        __name: "SorthPlay",
        setup(l) {
            const {
                t: i
            } = pt(), o = f(0), u = Et([{
                title: i("xosoTab1"),
                subList: [{
                    sub: i("xosoSub1"),
                    num: "［45］",
                    resultTip: i("xosoTxt3", ["18"]),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt1")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt2", ["18", "2"])
                    }]
                }, {
                    sub: i("xosoSub3"),
                    num: "［45］",
                    resultTip: i("xosoTxt6", ["18"]),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt1")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt2", ["18", "2"])
                    }]
                }, {
                    sub: i("xosoSub4"),
                    num: "［456］",
                    resultTip: i("xosoTxt9", ["17"]),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt8")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt2", ["17", "3"])
                    }]
                }, {
                    sub: i("xosoSub5"),
                    num: "［4567］",
                    resultTip: i("xosoTxt11", ["16"]),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt10")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt2", ["16", "4"])
                    }]
                }]
            }, {
                title: i("xosoTab2"),
                subList: [{
                    sub: i("xosoSub6"),
                    num: "［45/55］",
                    resultTip: i("xosoTxt14", ["18"]),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt12", ["2"])
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt13", ["18", "2", "2"])
                    }]
                }, {
                    sub: i("xosoSub7"),
                    num: "［45/55/65］",
                    resultTip: i("xosoTxt15", ["18"]),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt12", ["3"])
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt13", ["18", "3", "2"])
                    }]
                }, {
                    sub: i("xosoSub8"),
                    num: "［45/55/65/75］",
                    resultTip: i("xosoTxt16", ["18"]),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt12", ["4"])
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt13", ["18", "4", "2"])
                    }]
                }]
            }, {
                title: i("xosoTab3"),
                subList: [{
                    sub: i("xosoSub14"),
                    num: "［45］",
                    resultTip: i("xosoTxt20"),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt1")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt18")
                    }]
                }, {
                    sub: i("xosoSub15"),
                    num: "［45］",
                    resultTip: i("xosoTxt24"),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt1")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt22")
                    }]
                }, {
                    sub: i("xosoSub16"),
                    num: "［45］",
                    resultTip: i("xosoTxt28"),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt1")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt26")
                    }]
                }]
            }, {
                title: i("xosoTab4"),
                subList: [{
                    sub: i("xosoSub17"),
                    num: "［4］",
                    resultTip: i("xosoTxt31"),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt29")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt30")
                    }]
                }, {
                    sub: i("xosoTxt100"),
                    num: "［4］",
                    resultTip: i("xosoTxt33"),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt101")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt102")
                    }]
                }]
            }, {
                title: i("xosoTab5"),
                subList: [{
                    sub: i("xosoSub23"),
                    num: "［456］",
                    resultTip: i("xosoTxt42"),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt38")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt40")
                    }]
                }, {
                    sub: i("xosoSub20"),
                    num: "［456］",
                    resultTip: i("xosoTxt45"),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt43")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt44")
                    }]
                }, {
                    sub: i("xosoSub24"),
                    num: "［456］",
                    resultTip: i("xosoTxt50"),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt43")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt48")
                    }]
                }]
            }, {
                title: i("xosoTab6"),
                subList: [{
                    sub: i("xosoSub25"),
                    num: "［4567］",
                    resultTip: i("xosoTxt53"),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt51")
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt52")
                    }]
                }]
            }, {
                title: i("xosoTab7"),
                subList: [{
                    sub: i("xosoSub26"),
                    num: "［45/55/66/77］",
                    resultTip: i("xosoTxt57", ["18"]),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt12", ["4"])
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt56", ["18"])
                    }]
                }, {
                    sub: i("xosoSub27"),
                    num: "［45/55/66/77/88/99/11/22］",
                    resultTip: i("xosoTxt58", ["18"]),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt12", ["8"])
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt56", ["18"])
                    }]
                }, {
                    sub: i("xosoSub28"),
                    num: "［45/55/66/77/88/99/11/22/33/44］",
                    resultTip: i("xosoTxt59", ["18"]),
                    txtList: [{
                        bet: i("betting"),
                        betTip: i("xosoTxt12", ["10"])
                    }, {
                        bet: i("winningconditions"),
                        betTip: i("xosoTxt56", ["18"])
                    }]
                }]
            }, {
                title: i("xosoTab8"),
                subList: [{
                    sub: i("xosoTxt60"),
                    num: "",
                    resultTip: i("xosoTxt66"),
                    txtList: [{
                        bet: i("xosoTxt60"),
                        betTip: i("xosoTxt61")
                    }, {
                        bet: i("big"),
                        betTip: i("xosoTxt62")
                    }, {
                        bet: i("small"),
                        betTip: i("xosoTxt63")
                    }, {
                        bet: i("xosoTxt69"),
                        betTip: i("xosoTxt64")
                    }, {
                        bet: i("xosoTxt70"),
                        betTip: i("xosoTxt65")
                    }]
                }]
            }]);
            return (m, g) => {
                const d = V("van-tab"),
                    c = V("van-tabs");
                return n(), a("div", eL, [N(c, {
                    active: o.value,
                    "onUpdate:active": g[0] || (g[0] = p => o.value = p),
                    type: "card"
                }, {
                    default: D(() => [(n(!0), a(G, null, B(u, (p, r) => (n(), Q(d, {
                        title: p.title,
                        key: r
                    }, {
                        default: D(() => [(n(!0), a(G, null, B(p.subList, (_, b) => (n(), a("div", {
                            class: "Play__C-Cotent",
                            key: b
                        }, [t("div", iL, [t("img", {
                            src: s(ut)("home/AllLotteryGames/NewVietnam", "Star")
                        }, null, 8, nL), t("span", null, e(_.sub), 1)]), t("div", aL, [(n(!0), a(G, null, B(_.txtList, (y, v) => (n(), a("div", {
                            class: "info_item",
                            key: v
                        }, [t("img", {
                            src: s(ut)("home/AllLotteryGames/NewVietnam", "Triangle")
                        }, null, 8, oL), t("span", sL, e(y.bet), 1), t("div", lL, e(y.betTip), 1)]))), 128)), t("div", cL, [t("div", rL, e(s(i)("forexample")), 1), _.num ? (n(), a("div", uL, e(s(i)("betting")) + "：" + e(_.num), 1)) : S("", !0), t("div", dL, e(s(i)("result")) + "：" + e(_.resultTip), 1)]), o.value === 7 ? (n(), a("div", pL, [t("img", {
                            src: s(ut)("home/AllLotteryGames/NewVietnam", "Triangle")
                        }, null, 8, gL), t("span", mL, e(s(i)("xosoTxt71")), 1), t("div", bL, e(s(i)("xosoTxt67")), 1)])) : S("", !0), o.value === 7 ? (n(), a("div", _L, [t("div", vL, e(s(i)("forexample")), 1), t("div", hL, e(s(i)("result")) + "： " + e(s(i)("xosoTxt68")), 1)])) : S("", !0)])]))), 128))]),
                        _: 2
                    }, 1032, ["title"]))), 128))]),
                    _: 1
                }, 8, ["active"])])
            }
        }
    });
const fL = H(kL, [
        ["__scopeId", "data-v-584e1104"]
    ]),
    fi = l => (wt("data-v-1d7b1eb6"), l = l(), Lt(), l),
    yL = {
        class: "NorthRule__C"
    },
    $L = {
        class: "NorthRule__C-title"
    },
    TL = {
        class: "NorthRule__C-tips"
    },
    CL = fi(() => t("div", {
        class: "borderTopStyle"
    }, [t("span"), t("span")], -1)),
    wL = {
        class: "title"
    },
    LL = {
        class: "text"
    },
    NL = {
        class: "table"
    },
    IL = {
        class: "table-row header-time"
    },
    zL = {
        class: "table-time-1"
    },
    xL = fi(() => t("div", {
        class: "table-time-1"
    }, "16:20(GMT+7)", -1)),
    SL = fi(() => t("div", {
        class: "table-time-1"
    }, "17:15(GMT+7)", -1)),
    RL = {
        class: "table-row header-week"
    },
    GL = {
        class: "table-week-1"
    },
    ML = {
        class: "table-week-1"
    },
    BL = {
        class: "table-week-1"
    },
    DL = {
        class: "table-cell-1"
    },
    PL = {
        class: "table-cell-2"
    },
    AL = fi(() => t("div", {
        class: "borderTopStyle"
    }, [t("span"), t("span")], -1)),
    OL = {
        class: "title"
    },
    WL = {
        class: "text"
    },
    qL = {
        key: 0,
        class: "text"
    },
    EL = {
        key: 1,
        class: "text"
    },
    HL = {
        class: "NorthRule__C-Rule"
    },
    FL = {
        class: "NorthRule__C-Struct"
    },
    VL = fi(() => t("span", {
        class: "left"
    }, null, -1)),
    jL = fi(() => t("span", {
        class: "right"
    }, null, -1)),
    UL = {
        class: "table-rule"
    },
    KL = {
        class: "table-header"
    },
    XL = {
        class: "table-header-cell"
    },
    JL = {
        class: "table-header-cell"
    },
    QL = {
        class: "table-header-cell"
    },
    YL = {
        class: "table-cell"
    },
    ZL = {
        class: "table-cell"
    },
    t7 = {
        class: "table-cell"
    },
    e7 = {
        class: "table-rule"
    },
    i7 = {
        class: "table-header"
    },
    n7 = {
        class: "table-header-cell"
    },
    a7 = {
        key: 0,
        class: "table-box-title"
    },
    o7 = W({
        __name: "SorthRule",
        setup(l) {
            const {
                t: i
            } = pt(), o = Et([{
                title: "01",
                sub: i("resultsVielottery")
            }, {
                title: "02",
                sub: i("systemresult")
            }, {
                title: "03",
                sub: i("lotterytime1")
            }]), u = Et([{
                title: "04",
                sub: i("oddsmiscalculated")
            }, {
                title: "05",
                sub: i("oddsbettingprincipal")
            }, {
                title: "06",
                sub: i("oddsfluctuate")
            }, {
                title: "07",
                sub: i("oncebetgenerated")
            }, {
                title: "08",
                sub: i("anyreasonCauses")
            }, {
                title: "09",
                sub: i("platformcancel"),
                sub1: i("drawdelayedtoolong"),
                sub2: i("resultsofthelotterybeenleaked")
            }]), m = Et([{
                week: i("Monday"),
                addressList: [i("hochiminhcity"), i("sametower"), i("camua"), i("fuan"), i("hue")]
            }, {
                week: i("Tuesday"),
                addressList: [i("BenTre"), i("VungTau"), i("BacLieu"), i("Guangnan"), i("Dole")]
            }, {
                week: i("Wednesday"),
                addressList: [i("DongNai"), i("CanTho"), i("Shuozhuang"), i("danang"), i("Qinghe")]
            }, {
                week: i("Thursday"),
                addressList: [i("Xining"), i("Anjiang"), i("smooth"), i("putdown"), i("QuangBinh"), i("Koji")]
            }, {
                week: i("Friday"),
                addressList: [i("VinhLong"), i("BinhDuong"), i("ChaRong"), i("Carai"), i("NinhThun")]
            }, {
                week: i("Saturday"),
                addressList: [i("hochiminhcity"), i("LongAn"), i("Pingfu"), i("Houjiang"), i("danang"), i("Generalized"), i("Denon")]
            }, {
                week: i("Sunday"),
                addressList: [i("Qianjiang"), i("jianjiang"), i("DaLat"), i("Qinghe"), i("KonTum")]
            }]), g = Et([{
                title: i("GrandPrize"),
                quantity: 1,
                number: i("onedigits"),
                drawsNumber: ["575333"]
            }, {
                title: i("FirstPrize"),
                quantity: 1,
                number: i("onedigits"),
                drawsNumber: ["34521"]
            }, {
                title: i("SecondPrize"),
                quantity: 1,
                number: i("onedigits"),
                drawsNumber: ["34675"]
            }, {
                title: i("ThirdPrize"),
                quantity: 2,
                number: i("seconddigits"),
                drawsNumber: ["34575", "45732"]
            }, {
                title: i("FourPrize"),
                quantity: 7,
                number: i("sevendigits"),
                drawsNumber: ["43211", "23545", "78023", "46954", "32463", "23478", "34522"]
            }, {
                title: i("FivePrize"),
                quantity: 1,
                number: i("onedigits"),
                drawsNumber: ["6425"]
            }, {
                title: i("SixPrize"),
                quantity: 3,
                number: i("threedigits"),
                drawsNumber: ["66992", "95797", "4356"]
            }, {
                title: i("SevenPrize"),
                quantity: 1,
                number: i("onedigits"),
                drawsNumber: ["69388"]
            }, {
                title: i("EightPrize"),
                quantity: 1,
                number: i("onedigits"),
                drawsNumber: ["12"]
            }, {
                title: i("intotal"),
                quantity: i("eightlotteryawards"),
                number: ""
            }]), d = c => c.slice().reverse();
            return (c, p) => (n(), a("div", yL, [t("div", $L, e(s(i)("sorthVieLotteryGameRules")), 1), t("div", TL, e(s(i)("precautions")), 1), (n(!0), a(G, null, B(o, (r, _) => (n(), a("div", {
                class: "NorthRule__C-Content",
                key: _
            }, [CL, t("div", wL, e(r.title), 1), t("div", LL, e(r.sub), 1)]))), 128)), t("div", NL, [t("div", IL, [t("div", zL, e(s(i)("winTrxTime")), 1), xL, SL]), t("div", RL, [t("div", GL, e(s(i)("weeks")), 1), t("div", ML, e(s(i)("sorthLotteryCities")), 1), t("div", BL, e(s(i)("middleLotteryCities")), 1)]), (n(!0), a(G, null, B(m, (r, _) => (n(), a("div", {
                class: "table-row",
                key: _
            }, [t("div", DL, e(r.week), 1), t("div", PL, [(n(!0), a(G, null, B(r.addressList, (b, y) => (n(), a("div", {
                class: "table-column-1",
                key: y
            }, e(b), 1))), 128))])]))), 128))]), (n(!0), a(G, null, B(u, (r, _) => (n(), a("div", {
                class: "NorthRule__C-Content",
                key: _
            }, [AL, t("div", OL, e(r.title), 1), t("div", WL, e(r.sub), 1), r.sub1 ? (n(), a("div", qL, e(r.sub1), 1)) : S("", !0), r.sub2 ? (n(), a("div", EL, e(r.sub2), 1)) : S("", !0)]))), 128)), t("div", HL, e(s(i)("sorthernLotteryGameRules")), 1), t("div", FL, [VL, E(e(s(i)("colorstructure")), 1), jL]), t("div", UL, [t("div", KL, [t("div", XL, e(s(i)("Lottery")), 1), t("div", JL, e(s(i)("numberofPrizes")), 1), t("div", QL, e(s(i)("Number")), 1)]), (n(!0), a(G, null, B(g, (r, _) => (n(), a("div", {
                class: "table-row",
                key: _
            }, [t("div", YL, e(r.title), 1), t("div", ZL, e(r.quantity), 1), t("div", t7, e(r.number), 1)]))), 128))]), t("div", e7, [t("div", i7, [t("div", n7, e(s(i)("sorthlotteryresult")), 1)]), (n(!0), a(G, null, B(d(g), (r, _) => (n(), a("div", {
                class: M(_ == 0 ? "table-box none" : "table-box"),
                key: _
            }, [_ != 0 ? (n(), a("div", a7, e(r.title), 1)) : S("", !0), (n(!0), a(G, null, B(r.drawsNumber, (b, y) => (n(), a("div", {
                class: "table-box-number",
                key: y
            }, e(b), 1))), 128))], 2))), 128))])]))
        }
    });
const s7 = H(o7, [
        ["__scopeId", "data-v-1d7b1eb6"]
    ]),
    l7 = {
        class: "vietnamPlay__C"
    },
    c7 = {
        key: 0,
        class: "play"
    },
    r7 = {
        key: 1,
        class: "play"
    },
    u7 = {
        key: 0,
        class: "northrule"
    },
    d7 = {
        key: 1,
        class: "sorthrule"
    },
    p7 = W({
        __name: "index",
        setup(l) {
            var d, c;
            const i = gt(),
                o = f(0),
                u = i.currentRoute.value.query.id,
                m = ((c = (d = i.currentRoute.value.query) == null ? void 0 : d.gVSs) == null ? void 0 : c.toString()) || "",
                g = () => {
                    i.go(-1)
                };
            return (p, r) => {
                const _ = V("NavBar"),
                    b = V("van-tab"),
                    y = V("van-tabs");
                return n(), a("div", l7, [N(_, {
                    "left-arrow": "",
                    title: p.$t("lotteryManual"),
                    onClickLeft: g,
                    "background-color": "#3F3F3F"
                }, null, 8, ["title"]), N(y, {
                    active: o.value,
                    "onUpdate:active": r[0] || (r[0] = v => o.value = v),
                    type: "card",
                    class: M({
                        dis: s(m) == "2"
                    })
                }, {
                    default: D(() => [N(b, {
                        title: p.$t("gamePlay")
                    }, {
                        default: D(() => [s(u) == "1" ? (n(), a("div", c7, [N(_9)])) : (n(), a("div", r7, [N(fL)]))]),
                        _: 1
                    }, 8, ["title"]), s(m) != "2" ? (n(), Q(b, {
                        key: 0,
                        title: p.$t("rule")
                    }, {
                        default: D(() => [s(u) == "1" ? (n(), a("div", u7, [N(tL)])) : (n(), a("div", d7, [N(s7)]))]),
                        _: 1
                    }, 8, ["title"])) : S("", !0)]),
                    _: 1
                }, 8, ["active", "class"])])
            }
        }
    });
const g7 = H(p7, [
        ["__scopeId", "data-v-ee8c7ca3"]
    ]),
    ZD = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: g7
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    m7 = l => (wt("data-v-40fe88e0"), l = l(), Lt(), l),
    b7 = {
        class: "TimeLeft__C"
    },
    _7 = {
        class: "TimeLeft__C-name"
    },
    v7 = {
        class: "TimeLeft__C-num"
    },
    h7 = {
        class: "TimeLeft__C-id"
    },
    k7 = {
        class: "TimeLeft__C-text"
    },
    f7 = {
        class: "TimeLeft__C-time"
    },
    y7 = m7(() => t("div", null, ":", -1)),
    $7 = W({
        __name: "TimeLeft",
        props: {
            currentInfo: {
                type: Object,
                default: () => ({
                    gameNo: "loading",
                    currentTime: "",
                    beginTime: "",
                    passTime: 180,
                    time1: 0,
                    time2: 0,
                    time3: 0,
                    time4: 0
                })
            },
            winNum: {
                type: Array,
                default: [0, 0, 0, 0, 0]
            },
            gameName: {
                type: String,
                default: ""
            },
            currentGame: {
                type: Object,
                default: () => ({})
            }
        },
        setup(l) {
            const i = l,
                o = f(!1),
                u = Je(),
                m = () => {
                    o.value = !0, u.getWinGoRule(i.currentGame.typeID)
                };
            return (g, d) => (n(), a(G, null, [t("div", b7, [t("div", {
                class: "TimeLeft__C-rule",
                onClick: m
            }, e(g.$t("winTrxIndicate")), 1), t("div", _7, e(i.gameName.replace("<br />", " ")), 1), t("div", v7, [(n(!0), a(G, null, B(l.winNum, (c, p) => (n(), a("div", {
                key: p,
                class: M(["n" + c])
            }, null, 2))), 128))]), t("div", h7, e(i.currentInfo.gameNo), 1), t("div", k7, e(g.$t("timeLeftToBuy")), 1), t("div", f7, [t("div", null, e(l.currentInfo.time1), 1), t("div", null, e(l.currentInfo.time2), 1), y7, t("div", null, e(l.currentInfo.time3), 1), t("div", null, e(l.currentInfo.time4), 1)])]), N(Ei, {
                howPlayShow: o.value,
                gamePresentation: l.currentGame.gamePresentation,
                onClose: d[0] || (d[0] = c => o.value = !1)
            }, null, 8, ["howPlayShow", "gamePresentation"])], 64))
        }
    });
const T7 = H($7, [
        ["__scopeId", "data-v-40fe88e0"]
    ]),
    C7 = l => (wt("data-v-dc81bf96"), l = l(), Lt(), l),
    w7 = {
        class: "Betting__Popup-head"
    },
    L7 = {
        class: "Betting__Popup-head-title"
    },
    N7 = {
        class: "Betting__Popup-head-selectName"
    },
    I7 = {
        class: "Betting__Popup-body"
    },
    z7 = {
        class: "Betting__Popup-body-line"
    },
    x7 = {
        class: "Betting__Popup-body-line-list"
    },
    S7 = ["onClick"],
    R7 = {
        class: "Betting__Popup-body-line"
    },
    G7 = {
        class: "Betting__Popup-body-line-btnL"
    },
    M7 = {
        class: "Betting__Popup-body-line"
    },
    B7 = C7(() => t("div", null, null, -1)),
    D7 = {
        class: "Betting__Popup-body-line-list"
    },
    P7 = ["onClick"],
    A7 = {
        class: "Betting__Popup-body-line"
    },
    O7 = {
        class: "Betting__Popup-foot"
    },
    W7 = {
        class: "Betting__Popup-foot-s bgcolor"
    },
    q7 = {
        class: "Betting__Popup-PreSale"
    },
    E7 = {
        class: "Betting__Popup-PreSale-head"
    },
    H7 = {
        class: "Betting__Popup-PreSale-body"
    },
    F7 = {
        class: "Betting__Popup-PreSale-foot"
    },
    V7 = W({
        __name: "BettingPopup",
        props: {
            currentGame: {
                type: Object,
                default: () => ({})
            },
            selectInfo: {
                type: Object,
                default: () => ({})
            },
            bettingPopupShow: {
                type: Boolean,
                default: f(!1)
            },
            betTypeList: {
                type: Array,
                default: []
            },
            multipleList: {
                type: Array,
                default: () => [1, 5, 10, 20, 50, 100]
            }
        },
        emits: ["update:bettingPopupShow", "update:selectInfo", "clearBetting", "submitBetting"],
        setup(l, {
            emit: i
        }) {
            const o = l,
                {
                    t: u
                } = pt(),
                m = f(!1),
                g = f(!0),
                d = U({
                    get() {
                        return o.bettingPopupShow || !1
                    },
                    set(C) {
                        i("update:bettingPopupShow", C)
                    }
                }),
                c = U(() => {
                    switch (o.selectInfo.selecttype) {
                        case 13:
                            return u("big");
                        case 14:
                            return u("small");
                        case 10:
                            return u("redColor");
                        case 11:
                            return u("greenColor");
                        case 12:
                            return u("purpleColor");
                        default:
                            return o.selectInfo.selecttype
                    }
                }),
                p = U(() => o.currentGame.typeName),
                r = C => {
                    switch (C) {
                        case 1:
                            o.selectInfo.count > 1 && (o.selectInfo.count--, T());
                            break;
                        case 2:
                            o.selectInfo.count++, T();
                            break
                    }
                },
                _ = C => {
                    C > 0 && (o.selectInfo.count = parseInt(C), T())
                },
                b = C => {
                    o.selectInfo.count = C, T()
                },
                y = C => {
                    o.selectInfo.coin = C, T()
                },
                v = () => {
                    m.value = !1, g.value = !0
                },
                $ = () => {
                    if (o.selectInfo.count == 0) return qt(u("bteNoCount"));
                    g.value ? i("submitBetting") : Te(u("agreePresaleRules"))
                },
                T = () => {
                    o.selectInfo.allCoin = o.selectInfo.coin * o.selectInfo.count
                };
            return (C, h) => {
                const k = V("van-field"),
                    w = V("van-popup"),
                    L = zt("throttle-click");
                return n(), a(G, null, [N(w, {
                    show: d.value,
                    "onUpdate:show": h[6] || (h[6] = z => d.value = z),
                    position: "bottom",
                    round: !0,
                    "close-on-click-overlay": !1
                }, {
                    default: D(() => [t("div", {
                        class: M([`Betting__Popup-${l.selectInfo.selecttype}`])
                    }, [t("div", w7, [t("div", L7, e(p.value.replace("<br />", " ")), 1), t("div", N7, [t("span", null, e(s(u)("choose")), 1), t("span", null, e(c.value), 1)])]), t("div", I7, [t("div", z7, [E(e(s(u)("amount")) + " ", 1), t("div", x7, [(n(!0), a(G, null, B(l.betTypeList, (z, I) => (n(), a("div", {
                        key: I,
                        class: M(["Betting__Popup-body-line-item", {
                            bgcolor: l.selectInfo.coin == z
                        }]),
                        onClick: x => y(z)
                    }, e(z), 11, S7))), 128))])]), t("div", R7, [E(e(s(u)("numbers")) + " ", 1), t("div", G7, [t("div", {
                        class: M(["Betting__Popup-btn reduce", {
                            bgcolor: l.selectInfo.count > 0
                        }]),
                        onClick: h[0] || (h[0] = z => r(1))
                    }, null, 2), N(k, {
                        class: "Betting__Popup-input",
                        modelValue: l.selectInfo.count,
                        "onUpdate:modelValue": h[1] || (h[1] = z => l.selectInfo.count = z),
                        modelModifiers: {
                            number: !0
                        },
                        type: "digit",
                        maxlength: 4,
                        onInput: _
                    }, null, 8, ["modelValue"]), t("div", {
                        class: M(["Betting__Popup-btn", {
                            bgcolor: l.selectInfo.count > 0
                        }]),
                        onClick: h[2] || (h[2] = z => r(2))
                    }, null, 2)])]), t("div", M7, [B7, t("div", D7, [(n(!0), a(G, null, B(l.multipleList, (z, I) => (n(), a("div", {
                        key: I,
                        class: M(["Betting__Popup-body-line-item", {
                            bgcolor: l.selectInfo.count == z
                        }]),
                        onClick: x => b(z)
                    }, " X" + e(z), 11, P7))), 128))])]), t("div", A7, [t("span", {
                        class: M(["Betting__Popup-agree", {
                            active: g.value
                        }]),
                        onClick: h[3] || (h[3] = z => g.value = !g.value)
                    }, e(s(u)("agree")), 3), t("span", {
                        onClick: h[4] || (h[4] = z => m.value = !0),
                        class: "Betting__Popup-preSaleShow"
                    }, e(s(u)("presaleRules")), 1)])]), t("div", O7, [t("div", {
                        class: "Betting__Popup-foot-c",
                        onClick: h[5] || (h[5] = z => i("clearBetting"))
                    }, e(s(u)("cancel")), 1), et((n(), a("div", W7, [E(e(s(u)("totalAmount")) + " " + e(s(xt)(l.selectInfo.count * l.selectInfo.coin || 0)), 1)])), [
                        [L, {
                            handler: $,
                            wait: 2e3
                        }]
                    ])])], 2)]),
                    _: 1
                }, 8, ["show"]), N(w, {
                    show: m.value,
                    "onUpdate:show": h[7] || (h[7] = z => m.value = z),
                    "close-on-click-overlay": !1,
                    round: ""
                }, {
                    default: D(() => [t("div", q7, [t("div", E7, e(s(u)("presaleRules")), 1), t("div", H7, e(C.$t("betPopTXT")), 1), t("div", F7, [t("div", {
                        class: "Betting__Popup-PreSale-foot-btn",
                        onClick: v
                    }, e(s(u)("iKonw")), 1)])])]),
                    _: 1
                }, 8, ["show"])], 64)
            }
        }
    });
const j7 = H(V7, [
        ["__scopeId", "data-v-dc81bf96"]
    ]),
    U7 = {
        class: "Betting__C"
    },
    K7 = {
        class: "Betting__C-mark"
    },
    X7 = {
        class: "Betting__C-head"
    },
    J7 = {
        class: "Betting__C-numC"
    },
    Q7 = ["onClick"],
    Y7 = {
        class: "Betting__C-multiple"
    },
    Z7 = ["onClick"],
    tN = {
        class: "Betting__C-foot"
    },
    eN = W({
        __name: "Betting",
        props: {
            currentInfo: {
                type: Object,
                default: () => ({})
            },
            ProhibitBuyTime: {
                type: Number,
                default: 5
            },
            currentGame: {
                type: Object,
                default: () => ({})
            },
            bettingApiFun: {
                type: Function,
                required: !0
            }
        },
        emits: ["betting", "changeBettingP"],
        setup(l, {
            expose: i,
            emit: o
        }) {
            const u = l,
                m = zi.global.t,
                g = U(() => u.currentGame.betMultiple.split("|")),
                d = f(!1),
                c = f(""),
                p = f({
                    coin: 0,
                    count: g.value[0],
                    allCoin: 0,
                    gametype: 0,
                    typeid: 1,
                    issuenumber: "2020",
                    selecttype: 1
                });
            Ot(() => g, () => {
                p.value.count = g.value[0]
            }, {
                deep: !0,
                immediate: !0
            });
            const r = f(null),
                _ = f(0),
                b = f(!1),
                y = U(() => (u.currentInfo.passTime < u.ProhibitBuyTime && w(), u.currentInfo.passTime < u.ProhibitBuyTime)),
                v = U(() => u.currentGame.typeID),
                $ = U(() => u.currentGame.scope ? u.currentGame.scope.split("|").map(z => Number(z)) : []),
                T = z => {
                    p.value.count = z, C()
                },
                C = () => {
                    p.value.allCoin = p.value.coin * p.value.count
                },
                h = (z, I, x) => {
                    p.value.gametype = x, p.value.selecttype = z, p.value.issuenumber = u.currentInfo.gameNo, p.value.typeid = v.value, p.value.coin = $.value[0], c.value = z, d.value = !0
                },
                k = () => {
                    b.value || (b.value = !0, r.value || (r.value = setInterval(function() {
                        _.value = Math.floor(Math.random() * 11)
                    }, 50)), setTimeout(function() {
                        _.value > 9 && (_.value = 9), clearInterval(r.value), b.value = !1, r.value = null, h(_.value, "color" + _.value, 1)
                    }, 5e3))
                },
                w = () => {
                    d.value && (d.value = !1, p.value.coin = $.value[0], p.value.count = g.value[0], C(), o("changeBettingP", d.value))
                },
                L = async () => {
                    const z = await rt(u.bettingApiFun({
                        typeId: p.value.typeid,
                        issuenumber: p.value.issuenumber,
                        amount: p.value.coin,
                        betCount: Number(p.value.count),
                        gameType: p.value.gametype,
                        selectType: p.value.selecttype
                    }));
                    (z == null ? void 0 : z.code) === 0 && (Te(m("code" + z.msgCode)), o("betting", p.value.issuenumber), w())
                };
            return i({
                bettingPopupShow: d
            }), (z, I) => (n(), a("div", U7, [et(t("div", K7, [t("div", null, e(u.currentInfo.time3 || "0"), 1), t("div", null, e(u.currentInfo.time4 || "0"), 1)], 512), [
                [Vt, y.value]
            ]), t("div", X7, [t("div", {
                class: "Betting__C-head-g",
                onClick: I[0] || (I[0] = x => h(11, "#5CBA47", 0))
            }, e(z.$t("greenColor")), 1), t("div", {
                class: "Betting__C-head-p",
                onClick: I[1] || (I[1] = x => h(12, "#9831E9", 0))
            }, e(z.$t("purpleColor")), 1), t("div", {
                class: "Betting__C-head-r",
                onClick: I[2] || (I[2] = x => h(10, "#FB4E4E", 0))
            }, e(z.$t("redColor")), 1)]), t("div", J7, [(n(), a(G, null, B(10, (x, R) => t("div", {
                key: R,
                class: M([_.value == x ? "active" : "", "Betting__C-numC-item" + R]),
                onClick: O => h(R, "color" + R, 1)
            }, null, 10, Q7)), 64))]), t("div", Y7, [t("div", {
                class: "Betting__C-multiple-l",
                onClick: k
            }, e(z.$t("randomBet")), 1), (n(!0), a(G, null, B(g.value, (x, R) => (n(), a("div", {
                key: R,
                class: M(["Betting__C-multiple-r", {
                    active: p.value.count == x
                }]),
                onClick: O => T(x)
            }, " X" + e(x), 11, Z7))), 128))]), t("div", tN, [t("div", {
                class: "Betting__C-foot-b",
                onClick: I[3] || (I[3] = x => h(13, "#ffc511", 2))
            }, e(z.$t("big")), 1), t("div", {
                class: "Betting__C-foot-s",
                onClick: I[4] || (I[4] = x => h(14, "#5CBA47", 2))
            }, e(z.$t("small")), 1)]), N(j7, {
                currentGame: l.currentGame,
                selectInfo: p.value,
                bettingPopupShow: d.value,
                betTypeList: $.value,
                multipleList: g.value,
                onClearBetting: w,
                onSubmitBetting: L
            }, null, 8, ["currentGame", "selectInfo", "bettingPopupShow", "betTypeList", "multipleList"])]))
        }
    });
const so = H(eN, [
        ["__scopeId", "data-v-2194ac19"]
    ]),
    Xi = l => (wt("data-v-4cca3a73"), l = l(), Lt(), l),
    iN = {
        class: "GameRecord__C"
    },
    nN = {
        class: "GameRecord__C-head"
    },
    aN = {
        class: "GameRecord__C-body"
    },
    oN = {
        key: 0
    },
    sN = {
        key: 1
    },
    lN = {
        class: "GameRecord__C-origin"
    },
    cN = Xi(() => t("div", {
        class: "GameRecord__C-origin-I red"
    }, null, -1)),
    rN = Xi(() => t("div", {
        class: "GameRecord__C-origin-I violet"
    }, null, -1)),
    uN = {
        key: 1,
        class: "GameRecord__C-origin-I green"
    },
    dN = {
        key: 2,
        class: "GameRecord__C-origin-I red"
    },
    pN = Xi(() => t("div", {
        class: "GameRecord__C-origin-I green"
    }, null, -1)),
    gN = Xi(() => t("div", {
        class: "GameRecord__C-origin-I violet"
    }, null, -1)),
    mN = {
        key: 1,
        class: "GameRecord__C-body-empty"
    },
    bN = {
        key: 0,
        class: "GameRecord__C-foot"
    },
    _N = {
        class: "GameRecord__C-foot-page"
    },
    vN = W({
        __name: "GameRecord",
        props: {
            typeid: {}
        },
        emits: ["changefive"],
        setup(l, {
            expose: i,
            emit: o
        }) {
            const u = l,
                m = f([]),
                g = f(4),
                d = f(10),
                c = f(1),
                p = () => {
                    c.value--, _()
                },
                r = () => {
                    c.value++, _()
                },
                _ = async (v = !1) => {
                    if (u.typeid == null) return;
                    v && (c.value = 1);
                    const [$, T] = await ae(Oa({
                        pageSize: d.value,
                        pageNo: c.value,
                        typeId: u.typeid
                    }));
                    m.value = T.list || [], g.value = T.totalPage, v && o("changefive", T.list.slice(0, 5).map(C => C.number))
                }, b = v => parseInt(v, 10) % 2 !== 0, y = v => {
                    let $ = "";
                    switch (b(v) ? $ = "greenColor" : $ = "defaultColor", v) {
                        case "0":
                            $ = "mixedColor0";
                            break;
                        case "5":
                            $ = "mixedColor5";
                            break
                    }
                    return $
                };
            return i({
                getData: _
            }), Ce(() => {
                _()
            }), (v, $) => {
                const T = V("van-col"),
                    C = V("van-row"),
                    h = V("van-icon");
                return n(), a("div", iN, [t("div", nN, [N(C, null, {
                    default: D(() => [N(T, {
                        span: "8"
                    }, {
                        default: D(() => [E(e(v.$t("betSerial")), 1)]),
                        _: 1
                    }), N(T, {
                        span: "5"
                    }, {
                        default: D(() => [E(e(v.$t("num")), 1)]),
                        _: 1
                    }), N(T, {
                        span: "5"
                    }, {
                        default: D(() => [E(e(v.$t("bigOrSmall")), 1)]),
                        _: 1
                    }), N(T, {
                        span: "6"
                    }, {
                        default: D(() => [E(e(v.$t("color")), 1)]),
                        _: 1
                    })]),
                    _: 1
                })]), t("div", aN, [m.value.length ? (n(!0), a(G, {
                    key: 0
                }, B(m.value, (k, w) => (n(), Q(C, {
                    key: w
                }, {
                    default: D(() => [N(T, {
                        span: "8"
                    }, {
                        default: D(() => [E(e(k.issueNumber), 1)]),
                        _: 2
                    }, 1024), N(T, {
                        span: "5",
                        class: "numcenter"
                    }, {
                        default: D(() => [t("div", {
                            class: M(["GameRecord__C-body-num", y(k.number)])
                        }, e(k.number), 3)]),
                        _: 2
                    }, 1024), N(T, {
                        span: "5"
                    }, {
                        default: D(() => [Number(k.number) > 4 ? (n(), a("span", oN, e(v.$t("big")), 1)) : (n(), a("span", sN, e(v.$t("small")), 1))]),
                        _: 2
                    }, 1024), N(T, {
                        span: "6"
                    }, {
                        default: D(() => [t("div", lN, [k.number == "0" ? (n(), a(G, {
                            key: 0
                        }, [cN, rN], 64)) : S("", !0), k.number == "1" || k.number == "3" || k.number == "7" || k.number == "9" ? (n(), a("div", uN)) : S("", !0), k.number == "2" || k.number == "4" || k.number == "6" || k.number == "8" ? (n(), a("div", dN)) : S("", !0), k.number == "5" ? (n(), a(G, {
                            key: 3
                        }, [pN, gN], 64)) : S("", !0)])]),
                        _: 2
                    }, 1024)]),
                    _: 2
                }, 1024))), 128)) : (n(), a("div", mN, [N(ve)]))]), m.value.length ? (n(), a("div", bN, [t("div", {
                    class: M(["GameRecord__C-foot-previous", {
                        disabled: c.value <= 1
                    }]),
                    onClick: p
                }, [N(h, {
                    name: "arrow-left",
                    class: "GameRecord__C-icon",
                    size: "20"
                })], 2), t("div", _N, e(c.value) + "/" + e(g.value), 1), t("div", {
                    class: M(["GameRecord__C-foot-next", {
                        disabled: c.value >= g.value
                    }]),
                    onClick: r
                }, [N(h, {
                    name: "arrow",
                    class: "GameRecord__C-icon",
                    size: "20"
                })], 2)])) : S("", !0)])
            }
        }
    });
const hN = H(vN, [
        ["__scopeId", "data-v-4cca3a73"]
    ]),
    kN = {
        class: "Trend__C"
    },
    fN = {
        class: "Trend__C-head"
    },
    yN = {
        class: "Trend__C-body1"
    },
    $N = {
        class: "Trend__C-body1-line"
    },
    TN = {
        class: "Trend__C-body1-line lottery"
    },
    CN = {
        key: 0,
        class: "Trend__C-body1-line-num"
    },
    wN = {
        key: 0,
        class: "Trend__C-body1-line"
    },
    LN = {
        class: "Trend__C-body1-line-num"
    },
    NN = {
        key: 1,
        class: "Trend__C-body1-line"
    },
    IN = {
        class: "Trend__C-body1-line-num"
    },
    zN = {
        key: 2,
        class: "Trend__C-body1-line"
    },
    xN = {
        class: "Trend__C-body1-line-num"
    },
    SN = {
        key: 3,
        class: "Trend__C-body1-line"
    },
    RN = {
        class: "Trend__C-body1-line-num"
    },
    GN = {
        class: "Trend__C-body2"
    },
    MN = ["IssueNumber", "Number", "Colour", "rowId"],
    BN = {
        class: "Trend__C-body2-IssueNumber"
    },
    DN = {
        class: "Trend__C-body2-Num"
    },
    PN = ["id"],
    AN = {
        key: 1,
        class: "Trend__C-body2-empty"
    },
    ON = {
        key: 0,
        class: "Trend__C-foot"
    },
    WN = {
        class: "Trend__C-foot-page"
    },
    qN = W({
        __name: "Trend",
        props: {
            typeid: {},
            listApi: {},
            EmerdApi: {}
        },
        emits: ["changefive"],
        setup(l, {
            expose: i,
            emit: o
        }) {
            const u = l,
                m = f([]),
                g = f([]),
                d = f(),
                c = f(),
                p = f(),
                r = f(),
                _ = f(),
                b = f(1),
                y = f(4);

            function v() {
                ie(() => {
                    for (let w = 0; w < g.value.length; w++) g.value[w + 1] && $(g.value[w], g.value[w + 1])
                })
            }

            function $(w, L) {
                let z = parseInt(w.number),
                    I = parseInt(L.number);
                var x = document.getElementById("myCanvas" + w.rowId);
                if (x && x.getContext) {
                    var R = x.getContext("2d");
                    R.clearRect(0, 0, x.width, x.height), R.beginPath(), R.moveTo(z == 0 ? 15 : z * 29 + 15, 0), R.lineTo(I == 0 ? 15 : I * 29 + 15, x.height), R.strokeStyle = "red", R.stroke(), R.closePath()
                }
            }
            const T = () => {
                    b.value--, k()
                },
                C = () => {
                    b.value++, k()
                },
                h = async (w = !1) => {
                    if (u.typeid == null) return;
                    w && (b.value = 1, k(w));
                    const [L, z] = await ae(u.EmerdApi({
                        typeId: u.typeid
                    }));
                    if (z.length) {
                        const I = Object.keys(z[0]).filter(x => x.startsWith("number_"));
                        m.value = z.map(x => {
                            const R = {
                                list: []
                            };
                            return R.type = x.type, R.list = [], I.forEach(O => {
                                R.list.push(x[O])
                            }), R
                        })
                    }
                    d.value = m.value[0], c.value = m.value[1], p.value = m.value[2], r.value = m.value[3], _.value = m.value[4]
                }, k = async (w = !1) => {
                    var I;
                    if (u.typeid == null) return;
                    w && (b.value = 1);
                    const [L, z] = await ae(u.listApi({
                        pageSize: 10,
                        pageNo: b.value,
                        typeId: u.typeid
                    }));
                    if (z.list ? g.value = z.list.map((x, R) => (x.rowId = R, x)) || [] : z.data.gameslist && (g.value = z.data.gameslist.map((x, R) => (x.rowId = R, x)) || []), y.value = z.totalPage, w) {
                        const x = ((I = z.data) == null ? void 0 : I.gameslist) || z.list || [];
                        o("changefive", x.slice(0, 5).map(R => R.number))
                    }
                    v()
                };
            return i({
                getData: h
            }), Ce(() => {
                h(), k()
            }), (w, L) => {
                const z = V("van-col"),
                    I = V("van-row"),
                    x = V("van-icon");
                return n(), a("div", kN, [t("div", fN, [N(I, null, {
                    default: D(() => [N(z, {
                        span: "8"
                    }, {
                        default: D(() => [E(e(w.$t("betIssue")), 1)]),
                        _: 1
                    }), N(z, {
                        span: "16"
                    }, {
                        default: D(() => [E(e(w.$t("number")), 1)]),
                        _: 1
                    })]),
                    _: 1
                })]), t("div", yN, [t("div", $N, e(w.$t("trendDesc1")), 1), t("div", TN, [t("div", null, e(w.$t("trendDesc2")), 1), d.value ? (n(), a("div", CN, [(n(), a(G, null, B(10, R => t("div", {
                    key: R
                }, e(R - 1), 1)), 64))])) : S("", !0)]), r.value && r.value.type == 2 ? (n(), a("div", wN, [t("div", null, e(w.$t("trendDesc3")), 1), t("div", LN, [(n(!0), a(G, null, B(r.value.list, (R, O) => (n(), a("div", {
                    key: "4" + O
                }, e(R), 1))), 128))])])) : S("", !0), c.value && c.value.type == 4 ? (n(), a("div", NN, [t("div", null, e(w.$t("trendDesc4")), 1), t("div", IN, [(n(!0), a(G, null, B(c.value.list, (R, O) => (n(), a("div", {
                    key: "2" + O
                }, e(R), 1))), 128))])])) : S("", !0), _.value && _.value.type == 1 ? (n(), a("div", zN, [t("div", null, e(w.$t("trendDesc5")), 1), t("div", xN, [(n(!0), a(G, null, B(_.value.list, (R, O) => (n(), a("div", {
                    key: "5" + O
                }, e(R), 1))), 128))])])) : S("", !0), p.value && p.value.type == 3 ? (n(), a("div", SN, [t("div", null, e(w.$t("trendDesc6")), 1), t("div", RN, [(n(!0), a(G, null, B(p.value.list, (R, O) => (n(), a("div", {
                    key: "3" + O
                }, e(R), 1))), 128))])])) : S("", !0)]), t("div", GN, [g.value.length ? (n(!0), a(G, {
                    key: 0
                }, B(g.value, (R, O) => (n(), a("div", {
                    key: O,
                    IssueNumber: R.issueNumber,
                    Number: R.number,
                    Colour: R.colour,
                    rowId: R.rowId
                }, [N(I, null, {
                    default: D(() => [N(z, {
                        span: "8"
                    }, {
                        default: D(() => [t("div", BN, e(R.issueNumber), 1)]),
                        _: 2
                    }, 1024), N(z, {
                        span: "16"
                    }, {
                        default: D(() => [t("div", DN, [t("canvas", {
                            canvas: "",
                            id: "myCanvas" + R.rowId,
                            ref_for: !0,
                            ref: "canvas",
                            class: "line-canvas"
                        }, null, 8, PN), (n(), a(G, null, B(10, P => t("div", {
                            class: M(["Trend__C-body2-Num-item", Number(R.number) == P - 1 ? "action" + (P - 1) : ""]),
                            key: P
                        }, e(P - 1), 3)), 64)), t("div", {
                            class: M(["Trend__C-body2-Num-BS", {
                                isB: Number(R.number) > 4
                            }])
                        }, e(Number(R.number) > 4 ? "B" : "S"), 3)])]),
                        _: 2
                    }, 1024)]),
                    _: 2
                }, 1024)], 8, MN))), 128)) : (n(), a("div", AN, [N(ve)]))]), g.value.length ? (n(), a("div", ON, [t("div", {
                    class: M(["Trend__C-foot-previous", {
                        disabled: b.value <= 1
                    }]),
                    onClick: T
                }, [N(x, {
                    name: "arrow-left",
                    class: "Trend__C-icon",
                    size: "20"
                })], 2), t("div", WN, e(b.value) + "/" + e(y.value), 1), t("div", {
                    class: M(["Trend__C-foot-next", {
                        disabled: b.value >= y.value
                    }]),
                    onClick: C
                }, [N(x, {
                    name: "arrow",
                    class: "Trend__C-icon",
                    size: "20"
                })], 2)])) : S("", !0)])
            }
        }
    });
const lo = H(qN, [
        ["__scopeId", "data-v-ae0503ca"]
    ]),
    EN = {
        key: 1,
        class: "WinningTip__C-body-l1"
    },
    HN = {
        class: "colorW"
    },
    FN = {
        class: "WinningNum"
    },
    VN = {
        class: "colorW"
    },
    jN = {
        class: "WinningTip__C-body-l3"
    },
    UN = {
        key: 0,
        class: "isLose"
    },
    KN = {
        class: "head"
    },
    XN = {
        class: "bonus"
    },
    JN = {
        class: "gameDetail"
    },
    QN = {
        class: "WinningTip__C-body-l4"
    },
    YN = ["onClick"],
    ZN = W({
        __name: "WinningTips",
        setup(l, {
            expose: i
        }) {
            const {
                t: o
            } = pt(), u = U(() => d.value[0] ? d.value[0].state == 0 : !1), m = U(() => d.value[0] || {}), g = f(!1), d = f([]), c = f({
                red: o("winColor1"),
                green: o("winColor2"),
                "red,violet": o("winColor3"),
                "green,violet": o("winColor4"),
                violet: o("winColor5")
            });
            let p = f();
            const r = () => {
                clearTimeout(p.value), d.value.shift(), g.value && d.value.length && (p.value = setTimeout(() => {
                    r()
                }, 1e3 * 3))
            };
            Ot(() => d.value.length, v => {
                v ? document.body.style.overflow = "hidden" : document.body.style.overflow = ""
            });
            const _ = () => {
                    g.value = !g.value, g.value ? p.value = setTimeout(() => {
                        r()
                    }, 1e3 * 3) : clearTimeout(p.value)
                },
                b = v => {
                    d.value.push(...v), g.value && (p.value = setTimeout(() => {
                        r()
                    }, 1e3 * 3))
                },
                y = () => {
                    d.value = []
                };
            return i({
                showMark: b
            }), (v, $) => et((n(), a("div", {
                class: "WinningTip__C",
                onClick: r
            }, [t("div", {
                class: M(["WinningTip__C-body", {
                    isL: u.value
                }])
            }, [u.value ? (n(), a("div", {
                key: 0,
                class: M(["WinningTip__C-body-l1", {
                    isL: u.value
                }])
            }, e(v.$t("k3WarningTip1")), 3)) : (n(), a("div", EN, e(v.$t("k3WarningTip2")), 1)), t("div", {
                class: M(["WinningTip__C-body-l2", [`type${m.value.number}`]])
            }, [E(e(v.$t("winTips3")) + " ", 1), t("div", HN, e(c.value[m.value.colour]), 1), t("div", FN, e(m.value.number), 1), t("div", VN, e(m.value.number > 4 ? v.$t("big") : v.$t("small")), 1)], 2), t("div", jN, [u.value ? (n(), a("div", UN, e(v.$t("winTips4")), 1)) : (n(), a(G, {
                key: 1
            }, [t("div", KN, e(v.$t("winTips5")), 1), t("div", XN, e(s(xt)(Number(m.value.winAmount))), 1)], 64)), t("div", JN, e(v.$t("winTips6")) + e(m.value.typeName) + " " + e(m.value.issueNumber), 1)]), t("div", QN, [t("div", {
                class: M(["acitveBtn", {
                    active: g.value
                }]),
                onClick: se(_, ["stop"])
            }, null, 10, YN), E(" " + e(v.$t("autoShutOff3s")), 1)]), t("div", {
                class: "closeBtn",
                onClick: y
            })], 2)], 512)), [
                [Vt, d.value.length]
            ])
        }
    });
const co = H(ZN, [
        ["__scopeId", "data-v-dc3f9366"]
    ]),
    tI = {
        class: "WinGo__C"
    },
    eI = {
        class: "WinGo__C-head-more"
    },
    iI = W({
        __name: "index",
        setup(l) {
            const o = ii().query.typeId,
                u = {
                    GameRecord: hN,
                    Trend: lo,
                    MyGameRecord: xn
                },
                m = f(),
                g = f(),
                d = f(),
                c = f(!1),
                p = f("GameRecord"),
                r = gt(),
                _ = Je();
            _.getWinGoData();
            const b = _.getWingo,
                y = f(0),
                v = f(localStorage.getItem("volumeShow") || "1"),
                $ = f(!1),
                T = f(null),
                C = f({
                    gameNo: "loading",
                    currentTime: "",
                    beginTime: "",
                    passTime: 180,
                    time1: 0,
                    time2: 0,
                    time3: 0,
                    time4: 0
                }),
                h = f(5),
                k = f(""),
                w = f(!1),
                L = f(null),
                z = U(() => b[y.value] || {}),
                I = f([0, 0, 0, 0, 0]),
                x = ne(),
                R = U(() => x.getIsShowLotteryDragon);
            ht(() => {
                X()
            }), Ke(() => {
                clearInterval(T.value), Ht.value.forEach(dt => {
                    clearInterval(dt)
                }), St.value && clearTimeout(St.value)
            }), Ot(() => le().visibility, dt => {
                dt === 0 ? clearInterval(T.value) : (X(), at(y.value))
            });
            const O = () => {
                    sessionStorage.setItem("clickedGameType", "lottery"), r.push({
                        path: "/"
                    })
                },
                P = () => {
                    v.value == "1" ? v.value = "2" : v.value = "1", localStorage.setItem("volumeShow", v.value)
                },
                K = dt => {
                    r.push({
                        name: dt
                    })
                },
                X = () => {
                    const dt = b.findIndex(tt => tt.typeID == o);
                    at(dt !== -1 ? dt : 0)
                },
                at = dt => {
                    _.getWinGoData(), y.value = dt, L.value = b[dt].typeID, ct(L.value), ie(() => {
                        m.value.getData(L.value)
                    })
                },
                ct = async dt => {
                    p.value == "MyGameRecord" && ot(dt);
                    const [tt, nt] = await ae(Xs({
                        typeId: dt
                    }));
                    C.value.gameNo = nt.issueNumber, C.value.currentTime = nt.serviceTime.replace(/-/g, "/"), C.value.beginTime = nt.startTime.replace(/-/g, "/"), J()
                }, ot = async dt => {
                    const tt = await rt(Js({
                        typeId: dt
                    }));
                    tt && (I.value = tt.data.number.split(","))
                }, J = () => {
                    const dt = new Date(C.value.currentTime).getTime(),
                        tt = new Date(C.value.beginTime).getTime();
                    let nt = (dt - tt) / 1e3,
                        A = b[y.value];
                    if (nt > A.intervalM * 60 && (nt = A.intervalM * 60), C.value.passTime = A.intervalM * 60 - nt, C.value.passTime < 0) {
                        k.value = "An error occurred, please contact customer service。The game time is " + A.intervalM + " minutes,start time is " + C.value.beginTime + ",current time is" + C.value.currentTime + "!", $.value = !0;
                        return
                    }
                    Z()
                }, Z = () => {
                    clearInterval(T.value), lt(!1), T.value = setInterval(function() {
                        lt()
                    }, 1e3)
                }, lt = (dt = !0) => {
                    if (C.value.passTime <= h.value && (w.value = !1), v.value == "1" && (C.value.passTime <= h.value && C.value.passTime > 1 ? Rt(1) : C.value.passTime == 1 && Rt(2)), C.value.passTime > 0) {
                        let tt = C.value.passTime;
                        C.value.time2 = Math.floor(tt / 60), C.value.time3 = Math.floor(tt % 60 / 10), C.value.time4 = Math.floor(tt % 10), C.value.passTime--
                    } else clearInterval(T.value), dt && Nt()
                }, Rt = (dt = 1) => {
                    const tt = document.getElementById(`voice${dt}`);
                    tt && tt.play()
                }, Nt = () => {
                    ct(L.value || 0), d.value.getWinsUserAmount(!1), m.value.getData(!0)
                }, _t = f({}), Ht = f([]), Kt = dt => {
                    if (d.value.getWinsUserAmount(!1), m.value.getData(), _t.value[dt]) return;
                    _t.value[dt] = !0;
                    const {
                        time1: tt,
                        time2: nt,
                        time3: A,
                        time4: st
                    } = C.value, Tt = (tt * 10 * 60 + nt * 60 + A * 10 + st) * 1e3 + Math.floor(Math.random() * 2e3) + 1e3;
                    Ht.value[z.value.intervalM] = setTimeout(() => {
                        Ct(dt)
                    }, Tt)
                }, $t = dt => {
                    c.value = dt
                }, It = dt => {
                    I.value = dt
                }, St = f(null), Ct = async dt => {
                    const [tt, nt] = await ae(Qs({
                        issueNumber: [dt]
                    }));
                    if (nt) {
                        const A = nt.filter(st => st.state != 2);
                        if (!A.length) return;
                        g.value.showMark(A), delete _t.value[dt]
                    }
                };
            return (dt, tt) => {
                const nt = V("NavBar");
                return n(), a("div", tI, [N(nt, {
                    "left-arrow": "",
                    onClickLeft: O,
                    "background-color": "#3F3F3F",
                    headLogo: !0
                }, {
                    right: D(() => [t("div", eI, [t("div", {
                        onClick: tt[0] || (tt[0] = A => K("CustomerService"))
                    }), t("div", {
                        class: M({
                            disableVoice: v.value == "2"
                        }),
                        onClick: P
                    }, null, 2)])]),
                    _: 1
                }), N(Wi, {
                    ref_key: "WallteRef",
                    ref: d
                }, null, 512), N(Fe, {
                    key: "wingo"
                }), N(qi, {
                    gameList: s(b),
                    currentGameIndex: y.value,
                    onChangeGame: at
                }, null, 8, ["gameList", "currentGameIndex"]), N(T7, {
                    currentInfo: C.value,
                    winNum: I.value,
                    gameName: z.value.typeName,
                    currentGame: z.value
                }, null, 8, ["currentInfo", "winNum", "gameName", "currentGame"]), N(so, {
                    currentInfo: C.value,
                    currentGame: z.value,
                    VoiceType: v.value,
                    typeid: L.value,
                    onBetting: Kt,
                    onChangeBettingP: $t,
                    "betting-api-fun": s(Sa)
                }, null, 8, ["currentInfo", "currentGame", "VoiceType", "typeid", "betting-api-fun"]), N(Hi, {
                    record: p.value,
                    onChangeC: tt[1] || (tt[1] = A => p.value = A)
                }, null, 8, ["record"]), (n(), Q(ni, null, [(n(), Q(me(u[p.value]), {
                    ref_key: "RecordComponent",
                    ref: m,
                    typeid: L.value,
                    ApiFun: s(fn),
                    listApi: s(Oa),
                    EmerdApi: s(za),
                    goPathName: "AllLotteryGames-BettingRecordWin",
                    onChangefive: It
                }, null, 40, ["typeid", "ApiFun", "listApi", "EmerdApi"]))], 1024)), N(Me, {
                    show: $.value,
                    onConfirm: tt[2] || (tt[2] = A => K("/login"))
                }, {
                    content: D(() => [t("div", null, e(k.value), 1)]),
                    _: 1
                }, 8, ["show"]), N(co, {
                    ref_key: "WinningTipsRef",
                    ref: g
                }, null, 512), R.value ? (n(), Q(Qe, {
                    key: 0
                })) : S("", !0), N(Fi)])
            }
        }
    });
const nI = H(iI, [
        ["__scopeId", "data-v-28738ead"]
    ]),
    tP = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: nI
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    aI = l => (wt("data-v-c2c23aca"), l = l(), Lt(), l),
    oI = {
        class: "TimeLeft__C"
    },
    sI = {
        class: "TimeLeft__C-l1"
    },
    lI = {
        class: "TimeLeft__C-l1-l"
    },
    cI = {
        class: "TimeLeft__C-l1-no"
    },
    rI = {
        class: "TimeLeft__C-l2"
    },
    uI = {
        class: "TimeLeft__C-time"
    },
    dI = aI(() => t("div", {
        notime: ""
    }, ":", -1)),
    pI = {
        class: "TimeLeft__C-l3"
    },
    gI = W({
        __name: "TimeLeft",
        props: {
            currentInfo: {
                type: Object,
                default: () => ({
                    gameNo: "loading",
                    currentTime: "",
                    beginTime: "",
                    passTime: 180,
                    time1: 0,
                    time2: 0,
                    time3: 0,
                    time4: 0
                })
            },
            settled: {
                type: Object,
                default: () => ({})
            },
            gameName: {
                type: String,
                default: ""
            },
            currentGame: {
                type: Object,
                default: () => ({})
            }
        },
        setup(l) {
            const i = l,
                o = f(!1),
                u = gt(),
                m = U(() => {
                    const {
                        blockID: r
                    } = i.settled;
                    if (!r) return [0, 0, 0, 0, 0];
                    let _ = r.substring(r.length - 5).toUpperCase();
                    return /\d/.test(_) ? [..._] : [...r.substring(r.length - 5, r.length - 10).toUpperCase()]
                }),
                g = U(() => {
                    var r;
                    return (r = i.settled) == null ? void 0 : r.number
                }),
                d = () => {
                    let r = "https://tronscan.org";
                    u.push({
                        name: "AllLotteryGames-WinTrxIframe",
                        query: {
                            url: r
                        }
                    })
                },
                c = Je(),
                p = () => {
                    o.value = !0, c.getTrxRule(i.currentGame.typeID)
                };
            return (r, _) => (n(), a("div", oI, [t("div", sI, [t("div", lI, [t("div", cI, e(r.$t("winTrxNum")), 1), t("div", {
                class: "TimeLeft__C-l1-tip",
                onClick: p
            }, e(r.$t("winTrxIndicate")), 1)]), t("div", {
                class: "TimeLeft__C-l1-r",
                onClick: d
            }, e(r.$t("winTrxPub")), 1)]), t("div", rI, [t("div", null, e(i.currentInfo.gameNo), 1), t("div", uI, [t("span", null, e(r.$t("winTrxTime")), 1), t("div", null, e(l.currentInfo.time1), 1), t("div", null, e(l.currentInfo.time2), 1), dI, t("div", null, e(l.currentInfo.time3), 1), t("div", null, e(l.currentInfo.time4), 1)])]), t("div", pI, [(n(!0), a(G, null, B(m.value, (b, y) => (n(), a(G, {
                key: y
            }, [g.value == b ? (n(), a("p", {
                key: 0,
                class: M(["num" + b, g.value == b && "prize" + b])
            }, null, 2)) : (n(), a("div", {
                key: 1,
                class: M(["num" + b, g.value == b && "prize" + b])
            }, null, 2))], 64))), 128))]), N(Ei, {
                howPlayShow: o.value,
                gamePresentation: l.currentGame.gamePresentation,
                onClose: _[0] || (_[0] = b => o.value = !1)
            }, null, 8, ["howPlayShow", "gamePresentation"])]))
        }
    });
const mI = H(gI, [
        ["__scopeId", "data-v-c2c23aca"]
    ]),
    bI = {
        class: "GameRecord__C"
    },
    _I = {
        class: "GameRecord__C-head"
    },
    vI = {
        class: "GameRecord__C-body"
    },
    hI = {
        class: "Binquire"
    },
    kI = {
        class: "numberC"
    },
    fI = {
        key: 1,
        class: "GameRecord__C-body-empty"
    },
    yI = {
        key: 0,
        class: "GameRecord__C-foot"
    },
    $I = {
        class: "GameRecord__C-foot-page"
    },
    TI = W({
        __name: "GameRecord",
        props: {
            typeid: {}
        },
        setup(l, {
            expose: i
        }) {
            const o = l,
                u = f([]),
                m = f(4),
                g = f(10),
                d = f(1),
                c = gt(),
                p = () => {
                    d.value--, _()
                },
                r = () => {
                    d.value++, _()
                },
                _ = async (y = !1) => {
                    if (o.typeid == null) return;
                    y && (d.value = 1);
                    const [v, $] = await ae(Wa({
                        pageSize: g.value,
                        pageNo: d.value,
                        typeId: o.typeid
                    }));
                    if (!$) return;
                    let T = $ == null ? void 0 : $.data.date.serviceTime;
                    u.value = $.data.gameslist.map(C => {
                        if (C.blockID) {
                            var h = C.blockID.length,
                                k = C.blockID.substring(h - 4, h);
                            C.blockName = "**" + k
                        }
                        if (C.issueNumber) {
                            var w = C.issueNumber.substring(0, 3),
                                L = C.issueNumber.length,
                                z = C.issueNumber.substring(L - 4, L);
                            C.issue = w + "**" + z
                        }
                        if (C.blockTime) {
                            let I = T.split(" "),
                                x = C.blockTime.split(" ");
                            C.day = I[0].substring(8, 10) == x[0].substring(8, 10), C.time = x[1]
                        }
                        return C
                    }), m.value = $.totalPage
                }, b = y => {
                    let v = `https://tronscan.org/#/block/${y}`;
                    c.push({
                        name: "AllLotteryGames-WinTrxIframe",
                        query: {
                            url: v
                        }
                    })
                };
            return i({
                getData: _
            }), Ce(() => {
                _()
            }), (y, v) => {
                const $ = V("van-col"),
                    T = V("van-row"),
                    C = V("van-icon");
                return n(), a("div", bI, [t("div", _I, [N(T, null, {
                    default: D(() => [N($, {
                        span: "6"
                    }, {
                        default: D(() => [E(e(y.$t("betSerial")), 1)]),
                        _: 1
                    }), N($, {
                        span: "4"
                    }, {
                        default: D(() => [E(e(y.$t("winTrxDesc1")), 1)]),
                        _: 1
                    }), N($, {
                        span: "5"
                    }, {
                        default: D(() => [E(e(y.$t("winTrxDesc2")), 1)]),
                        _: 1
                    }), N($, {
                        span: "4"
                    }, {
                        default: D(() => [E(e(y.$t("winTrxDesc3")), 1)]),
                        _: 1
                    }), N($, {
                        span: "5"
                    }, {
                        default: D(() => [E(e(y.$t("winTrxDesc4")), 1)]),
                        _: 1
                    })]),
                    _: 1
                })]), t("div", vI, [u.value.length ? (n(!0), a(G, {
                    key: 0
                }, B(u.value, (h, k) => (n(), Q(T, {
                    key: k
                }, {
                    default: D(() => [N($, {
                        span: "6"
                    }, {
                        default: D(() => [E(e(h.issue), 1)]),
                        _: 2
                    }, 1024), N($, {
                        span: "4",
                        onClick: w => b(h.blockNumber)
                    }, {
                        default: D(() => [E(e(h.blockNumber) + " ", 1), et(t("div", hI, null, 512), [
                            [Vt, h.day]
                        ])]),
                        _: 2
                    }, 1032, ["onClick"]), N($, {
                        span: "5"
                    }, {
                        default: D(() => [E(e(h.time), 1)]),
                        _: 2
                    }, 1024), N($, {
                        span: "4"
                    }, {
                        default: D(() => [E(e(h.blockName), 1)]),
                        _: 2
                    }, 1024), N($, {
                        span: "5"
                    }, {
                        default: D(() => [t("div", kI, [t("div", {
                            class: M(["number", ["num" + h.number]])
                        }, e(h.number), 3), t("div", {
                            class: M([Number(h.number) > 4 ? "big" : "small"])
                        }, e(Number(h.number) > 4 ? "B" : "S"), 3)])]),
                        _: 2
                    }, 1024)]),
                    _: 2
                }, 1024))), 128)) : (n(), a("div", fI, [N(ve)]))]), u.value.length ? (n(), a("div", yI, [t("div", {
                    class: M(["GameRecord__C-foot-previous", {
                        disabled: d.value <= 1
                    }]),
                    onClick: p
                }, [N(C, {
                    name: "arrow-left",
                    class: "GameRecord__C-icon",
                    size: "20"
                })], 2), t("div", $I, e(d.value) + "/" + e(m.value), 1), t("div", {
                    class: M(["GameRecord__C-foot-next", {
                        disabled: d.value >= m.value
                    }]),
                    onClick: r
                }, [N(C, {
                    name: "arrow",
                    class: "GameRecord__C-icon",
                    size: "20"
                })], 2)])) : S("", !0)])
            }
        }
    });
const CI = H(TI, [
        ["__scopeId", "data-v-0a4daaed"]
    ]),
    wI = {
        class: "WinTrx__C"
    },
    LI = {
        class: "WinTrx__C-head-more"
    },
    NI = W({
        __name: "index",
        setup(l) {
            const o = ii().query.typeId,
                u = {
                    GameRecord: CI,
                    Trend: lo,
                    MyGameRecord: xn
                },
                m = f(),
                g = f(),
                d = f(),
                c = f(!1),
                p = f("GameRecord"),
                r = gt(),
                _ = Je(),
                b = _.getTrx,
                y = f(0),
                v = f(localStorage.getItem("volumeShow") || "1"),
                $ = f(!1),
                T = f(null),
                C = f(),
                h = f({
                    gameNo: "loading",
                    currentTime: "",
                    beginTime: "",
                    passTime: 180,
                    time1: 0,
                    time2: 0,
                    time3: 0,
                    time4: 0
                }),
                k = f(10),
                w = f(""),
                L = f(!1),
                z = f(null),
                I = U(() => b[y.value] || {});
            ht(() => {
                P()
            }), Ke(() => {
                clearInterval(T.value), Rt.value.forEach($t => {
                    clearInterval($t)
                }), Ht.value && clearTimeout(Ht.value)
            }), Ot(() => le().visibility, $t => {
                $t === 0 ? clearInterval(T.value) : (P(), K(y.value))
            });
            const x = () => {
                    sessionStorage.setItem("clickedGameType", "lottery"), r.push({
                        path: "/"
                    })
                },
                R = () => {
                    v.value == "1" ? v.value = "2" : v.value = "1", localStorage.setItem("volumeShow", v.value)
                },
                O = $t => {
                    r.push({
                        name: $t
                    })
                },
                P = () => {
                    const $t = b.findIndex(It => It.typeID == o);
                    K($t !== -1 ? $t : 0)
                },
                K = $t => {
                    _.getTrxData(), y.value = $t, z.value = b[$t].typeID, X(z.value), ie(() => {
                        m.value.getData(z.value)
                    })
                },
                X = async $t => {
                    const [It, St] = await ae(Ys({
                        typeId: $t
                    }));
                    h.value.gameNo = St.predraw.issueNumber, h.value.currentTime = St.predraw.serviceTime.replace(/-/g, "/"), h.value.beginTime = St.predraw.startTime.replace(/-/g, "/"), C.value = St.settled, at()
                }, at = () => {
                    if (!b.length) return;
                    var $t = new Date(h.value.currentTime).getTime(),
                        It = new Date(h.value.beginTime).getTime();
                    let St = ($t - It) / 1e3,
                        Ct = b[y.value];
                    if (St > Ct.intervalM * 60 && (St = Ct.intervalM * 60), h.value.passTime = Ct.intervalM * 60 - St, h.value.passTime < 0) {
                        w.value = "An error occurred, please contact customer service。The game time is " + Ct.intervalM + " minutes,start time is " + h.value.beginTime + ",current time is" + h.value.currentTime + "!", $.value = !0;
                        return
                    }
                    ct()
                }, ct = () => {
                    clearInterval(T.value), ot(!1), T.value = setInterval(function() {
                        ot()
                    }, 1e3)
                }, ot = ($t = !0) => {
                    if (h.value.passTime <= k.value && (L.value = !1), v.value == "1" && (h.value.passTime <= k.value && h.value.passTime > 1 ? J(1) : h.value.passTime == 1 && J(2)), h.value.passTime > 0) {
                        let It = h.value.passTime;
                        h.value.time2 = Math.floor(It / 60), h.value.time3 = Math.floor(It % 60 / 10), h.value.time4 = Math.floor(It % 10), h.value.passTime--
                    } else clearInterval(T.value), $t && Z()
                }, J = ($t = 1) => {
                    const It = document.getElementById(`voice${$t}`);
                    It && It.play()
                }, Z = () => {
                    X(z.value), d.value.getWinsUserAmount(!1), m.value.getData(!0)
                }, lt = f({}), Rt = f([]), Nt = $t => {
                    if (d.value.getWinsUserAmount(!1), m.value.getData(), lt.value[$t]) return;
                    lt.value[$t] = !0;
                    const {
                        time1: It,
                        time2: St,
                        time3: Ct,
                        time4: dt
                    } = h.value, tt = (It * 10 * 60 + St * 60 + Ct * 10 + dt) * 1e3;
                    Rt.value[I.value.intervalM] = setTimeout(() => {
                        Kt($t)
                    }, tt)
                }, _t = $t => {
                    c.value = $t
                }, Ht = f(null), Kt = async $t => {
                    const It = await rt(Zs({
                        issueNumber: [$t]
                    }));
                    if (It) {
                        const St = It.data.filter(Ct => Ct.state != 2);
                        if (!St.length) {
                            Ht.value = setTimeout(() => {
                                Kt($t)
                            }, 2e3);
                            return
                        }
                        g.value.showMark(St), delete lt.value[$t]
                    }
                };
            return ($t, It) => {
                const St = V("NavBar");
                return n(), a("div", wI, [N(St, {
                    "left-arrow": "",
                    onClickLeft: x,
                    "background-color": "#3F3F3F",
                    headLogo: !0
                }, {
                    right: D(() => [t("div", LI, [t("div", {
                        onClick: It[0] || (It[0] = Ct => O("CustomerService"))
                    }), t("div", {
                        class: M({
                            disableVoice: v.value == "2"
                        }),
                        onClick: R
                    }, null, 2)])]),
                    _: 1
                }), N(Wi, {
                    ref_key: "WallteRef",
                    ref: d
                }, null, 512), N(Fe, {
                    key: "winx"
                }), N(qi, {
                    gameList: s(b),
                    currentGameIndex: y.value,
                    onChangeGame: K
                }, null, 8, ["gameList", "currentGameIndex"]), N(mI, {
                    currentInfo: h.value,
                    gameName: I.value.typeName,
                    currentGame: I.value,
                    settled: C.value
                }, null, 8, ["currentInfo", "gameName", "currentGame", "settled"]), N(so, {
                    currentInfo: h.value,
                    ProhibitBuyTime: k.value,
                    currentGame: I.value,
                    VoiceType: v.value,
                    typeid: z.value,
                    onBetting: Nt,
                    onChangeBettingP: _t,
                    "betting-api-fun": s(tl)
                }, null, 8, ["currentInfo", "ProhibitBuyTime", "currentGame", "VoiceType", "typeid", "betting-api-fun"]), N(Hi, {
                    record: p.value,
                    onChangeC: It[1] || (It[1] = Ct => p.value = Ct)
                }, null, 8, ["record"]), (n(), Q(ni, null, [(n(), Q(me(u[p.value]), {
                    ref_key: "RecordComponent",
                    ref: m,
                    typeid: z.value,
                    ApiFun: s(yn),
                    listApi: s(Wa),
                    EmerdApi: s(Ga),
                    goPathName: "AllLotteryGames-BettingRecordWinTrx"
                }, null, 8, ["typeid", "ApiFun", "listApi", "EmerdApi"]))], 1024)), N(Me, {
                    show: $.value,
                    onConfirm: It[2] || (It[2] = Ct => O("/login"))
                }, {
                    content: D(() => [t("div", null, e(w.value), 1)]),
                    _: 1
                }, 8, ["show"]), N(co, {
                    ref_key: "WinningTipsRef",
                    ref: g
                }, null, 512), N(Fi)])
            }
        }
    });
const II = H(NI, [
        ["__scopeId", "data-v-8745b0cb"]
    ]),
    eP = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: II
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    zI = {
        class: "WinTrxIfram__C"
    },
    xI = ["src"],
    SI = W({
        __name: "index",
        setup(l) {
            const i = gt(),
                o = U(() => String(i.currentRoute.value.query.url)),
                u = () => {
                    i.go(-1)
                };
            return (m, g) => {
                const d = V("NavBar");
                return n(), a("div", zI, [N(d, {
                    "left-arrow": "",
                    onClickLeft: u,
                    backgroundColor: "linear-gradient(90deg,#cd0103,#f64841)",
                    title: "TRX"
                }), t("iframe", {
                    class: "iframe",
                    sandbox: "allow-same-origin allow-popups allow-scripts",
                    frameborder: "0",
                    marginwidth: "0",
                    marginheight: "0",
                    vspace: "0",
                    hspace: "0",
                    allowtransparency: "true",
                    allowfullscreen: !0,
                    ref: "iframe",
                    src: o.value
                }, null, 8, xI)])
            }
        }
    });
const RI = H(SI, [
        ["__scopeId", "data-v-7ae895b3"]
    ]),
    iP = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: RI
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    GI = {
        class: "Xoso"
    },
    MI = {
        style: {
            "background-color": "#292929"
        }
    },
    BI = {
        key: 1,
        class: "Xoso-page"
    },
    DI = {
        class: "title"
    },
    PI = {
        class: "list"
    },
    AI = ["onClick"],
    OI = {
        key: 0
    },
    WI = ["src"],
    qI = {
        key: 1,
        class: "info"
    },
    EI = {
        class: "issue"
    },
    HI = ["src"],
    FI = {
        class: "time"
    },
    VI = W({
        __name: "index",
        setup(l) {
            const {
                t: i
            } = pt(), o = gt();
            let u = o.currentRoute.value.query.id;
            const m = U(() => u == "5" ? "XOSO" : u == "6" ? i("fXosoTitle") : "XOSO"),
                {
                    setLoading: g
                } = Xe(),
                d = () => {
                    o.go(-1)
                },
                c = (v, $, T, C) => {
                    $.day = T, $.id = u, $.areId = C, o.push({
                        name: v,
                        query: $
                    })
                },
                p = f(null),
                r = f(0),
                _ = v => {
                    sessionStorage.setItem("xosoList", JSON.stringify(b.value[v.index]))
                },
                b = f([]);
            return (async () => {
                g(!0);
                let v;
                u == "5" ? v = await rt(Ba()) : u == "6" && (v = await rt(Da())), v && (b.value = v.data, sessionStorage.setItem("xosoList", JSON.stringify(v.data[0]))), g(!1)
            })(), (v, $) => {
                const T = V("NavBar"),
                    C = V("van-sticky");
                return n(), a("div", GI, [N(T, {
                    "left-arrow": "",
                    onClickLeft: d,
                    "background-color": "#3F3F3F",
                    title: m.value
                }, null, 8, ["title"]), s(u) == "5" ? (n(), Q(C, {
                    key: 0,
                    "offset-top": 46,
                    container: p.value,
                    class: "bet-container-sticky"
                }, {
                    default: D(() => [t("div", MI, [N(ei, {
                        list: b.value,
                        active: r.value,
                        "onUpdate:active": $[0] || ($[0] = h => r.value = h),
                        tabClassName: "tabs",
                        onOnClickTab: _,
                        activeClassName: "tab_active",
                        ref: "tabRefs",
                        tabItemClassName: "funtab_item"
                    }, {
                        default: D(({
                            item: h,
                            index: k
                        }) => [t("div", {
                            class: M(["tab_item", {
                                tab_active: k === r.value
                            }])
                        }, [t("span", null, e(v.$t(h.week)), 1), t("p", null, e(h.day), 1)], 2)]),
                        _: 1
                    }, 8, ["list", "active"])])]),
                    _: 1
                }, 8, ["container"])) : S("", !0), b.value[r.value] ? (n(), a("div", BI, [(n(!0), a(G, null, B(b.value[r.value].areInfos, (h, k) => (n(), a("div", {
                    class: "Xoso-page-box",
                    key: k
                }, [t("div", DI, e(v.$t("code" + h.areNameCode)), 1), t("div", PI, [(n(!0), a(G, null, B(h.areIssueNos, (w, L) => (n(), a("div", {
                    class: "item",
                    key: L,
                    onClick: z => c("AllLotteryGames-NewVietnam", w, b.value[r.value].day, h.areId)
                }, [w.status == 1 || w.status == 2 || w.status == 3 ? (n(), a("h4", OI, [E(e(v.$t("code" + w.nameCode)) + " ", 1), t("img", {
                    class: "img",
                    src: s(ut)("home/AllLotteryGames/NewVietnam", "xosoCity"),
                    alt: ""
                }, null, 8, WI)])) : S("", !0), w.status == 1 || w.status == 2 || w.status == 3 ? (n(), a("div", qI, [t("div", EI, [t("img", {
                    class: "img",
                    src: s(ut)("home/AllLotteryGames/NewVietnam", "ticketstar"),
                    alt: ""
                }, null, 8, HI), E(e(w.issueNo), 1)]), t("p", null, e(v.$t("xosoTxt72")), 1), t("div", FI, [(n(!0), a(G, null, B(b.value[r.value].day.split("-"), (z, I) => (n(), a("div", {
                    key: I
                }, e(z), 1))), 128))])])) : S("", !0)], 8, AI))), 128))])]))), 128))])) : S("", !0)])
            }
        }
    });
const jI = H(VI, [
        ["__scopeId", "data-v-878a74ce"]
    ]),
    nP = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: jI
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    UI = {
        class: "TeamReport__C"
    },
    KI = {
        class: "TeamReport__C-head"
    },
    XI = {
        class: "TeamReport__C-head-fixed"
    },
    JI = {
        class: "TeamReport__C-head-line1"
    },
    QI = {
        key: 0,
        class: "default"
    },
    YI = {
        key: 1,
        class: "default"
    },
    ZI = {
        class: "TeamReport__C-head-line2"
    },
    tz = {
        key: 0,
        class: "default"
    },
    ez = {
        key: 1,
        class: "default"
    },
    iz = {
        class: "TeamReport__C-list"
    },
    nz = W({
        __name: "index",
        setup(l) {
            const {
                t: i
            } = pt(), o = gt(), u = ii(), m = () => {
                o.go(-1)
            }, g = f([]), d = f([]), c = {
                text: "nameCode",
                value: "value"
            }, p = f(), r = f(!1), _ = f(!1), b = Et({
                bettingParentType: "",
                areId: "",
                startDate: "",
                endDate: ""
            }), y = f(), v = f(), $ = ({
                selectedOptions: L
            }) => {
                b.bettingParentType = Number(L[0].value), v.value = L[0].nameCode, y.value.getData(), r.value = !1
            }, T = f(), C = ({
                selectedOptions: L
            }) => {
                b.areId = Number(L[0].value), T.value = L[0].nameCode, y.value.getData(), _.value = !1
            };
            async function h() {
                let L = p.value.endDateValue !== "" ? `${p.value.endDateValue} 23:59:59` : "";
                b.startDate = `${de(p.value.startDateValue).format("YYYY-MM-DD")} 23:59:59`, b.endDate = `${de(L).format("YYYY-MM-DD")} 23:59:59`, y.value.getData()
            }
            const k = async () => {
                const L = Number(u.query.areId) | 0,
                    z = await rt(el({
                        areId: L
                    }));
                d.value = w(z.data.categorys), d.value.unshift({
                    value: "",
                    nameCode: i("all")
                }), g.value = w(z.data.ares), g.value.unshift({
                    value: "",
                    nameCode: i("all")
                })
            }, w = L => L.map(I => {
                let x = {
                    value: "",
                    nameCode: ""
                };
                return x.value = I.value, x.nameCode = i("code" + I.nameCode), x
            });
            return k(), (L, z) => {
                const I = V("NavBar"),
                    x = V("van-icon"),
                    R = V("van-picker"),
                    O = V("van-popup");
                return n(), a("div", UI, [N(I, {
                    "left-arrow": "",
                    onClickLeft: m,
                    "background-color": "linear-gradient(90deg, #F95959 0%, #FF9A8E 100%)",
                    title: L.$t("xosoTxt73")
                }, null, 8, ["title"]), t("div", KI, [t("div", XI, [t("div", JI, [t("div", {
                    onClick: z[0] || (z[0] = P => _.value = !0)
                }, [T.value ? (n(), a("span", QI, e(T.value), 1)) : (n(), a("span", YI, e(s(i)("all")), 1)), N(x, {
                    name: "arrow-down"
                })])]), t("div", ZI, [t("div", {
                    onClick: z[1] || (z[1] = P => r.value = !0)
                }, [v.value ? (n(), a("span", tz, e(v.value), 1)) : (n(), a("span", ez, e(s(i)("all")), 1)), N(x, {
                    name: "arrow-down"
                })]), t("div", null, [N(vr, {
                    ref_key: "calendar",
                    ref: p,
                    onConfirm: h
                }, null, 512)])])])]), t("div", iz, [(n(), Q(ni, null, [N(Rn, {
                    ref_key: "RecordComponent",
                    ref: y,
                    parmas: b,
                    ApiFun: s(Pa),
                    hasHead: !1,
                    gVSs: "1"
                }, null, 8, ["parmas", "ApiFun"])], 1024))]), N(O, {
                    show: r.value,
                    "onUpdate:show": z[3] || (z[3] = P => r.value = P),
                    round: "",
                    position: "bottom"
                }, {
                    default: D(() => [N(R, {
                        "columns-field-names": c,
                        columns: d.value,
                        onCancel: z[2] || (z[2] = P => r.value = !1),
                        onConfirm: $
                    }, null, 8, ["columns"])]),
                    _: 1
                }, 8, ["show"]), N(O, {
                    show: _.value,
                    "onUpdate:show": z[5] || (z[5] = P => _.value = P),
                    round: "",
                    position: "bottom"
                }, {
                    default: D(() => [N(R, {
                        "columns-field-names": c,
                        columns: g.value,
                        onCancel: z[4] || (z[4] = P => _.value = !1),
                        onConfirm: C
                    }, null, 8, ["columns"])]),
                    _: 1
                }, 8, ["show"])])
            }
        }
    });
const az = H(nz, [
        ["__scopeId", "data-v-9ee753e7"]
    ]),
    aP = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: az
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    oz = {
        class: "TeamReport__C"
    },
    sz = {
        style: {
            "background-color": "#f7f8ff"
        }
    },
    lz = {
        class: "TeamReport__C-list"
    },
    cz = W({
        __name: "index",
        setup(l) {
            const i = gt(),
                o = () => {
                    i.go(-1)
                },
                u = f(0),
                m = f([]),
                g = f();
            let d = i.currentRoute.value.query.areId,
                c = i.currentRoute.value.query.typeId;
            const p = Et({
                    bettingParentType: "",
                    startDate: "",
                    endDate: "",
                    areId: "",
                    typeId: ""
                }),
                r = b => {
                    p.areId = b.item.areId, p.typeId = Number(b.item.typeId), g.value.getData()
                };
            async function _() {
                let b = JSON.parse(sessionStorage.getItem("xosoList") || ""),
                    y = [];
                for (let v = 0; v < b.areInfos.length; v++)
                    for (let $ = 0; $ < b.areInfos[v].areIssueNos.length; $++) b.areInfos[v].areIssueNos[$].type == 2 && y.push({
                        areId: b.areInfos[v].areId,
                        typeId: b.areInfos[v].areIssueNos[$].code,
                        nameCode: b.areInfos[v].areIssueNos[$].nameCode
                    });
                m.value = y, m.value.length > 0 && (u.value = m.value.findIndex(v => v.areId == d && v.typeId == c))
            }
            return _(), (b, y) => {
                const v = V("NavBar"),
                    $ = V("van-sticky");
                return n(), a("div", oz, [N(v, {
                    "left-arrow": "",
                    onClickLeft: o,
                    "background-color": "#3F3F3F",
                    title: b.$t("fXosoTitle")
                }, null, 8, ["title"]), N($, {
                    "offset-top": 46,
                    class: "bet-container-sticky"
                }, {
                    default: D(() => [t("div", sz, [N(ei, {
                        list: m.value,
                        active: u.value,
                        "onUpdate:active": y[0] || (y[0] = T => u.value = T),
                        tabClassName: "tabs",
                        activeClassName: "tab_active",
                        ref: "tabRefs",
                        tabItemClassName: "funtab_item",
                        onOnClickTab: r
                    }, {
                        default: D(({
                            item: T,
                            index: C
                        }) => [t("div", {
                            class: M(["tab_item", {
                                tab_active: C === u.value
                            }])
                        }, [t("p", null, e(b.$t(`code${T.nameCode}`)), 1)], 2)]),
                        _: 1
                    }, 8, ["list", "active"])])]),
                    _: 1
                }), t("div", lz, [(n(), Q(ni, null, [N(Rn, {
                    ref_key: "RecordComponent",
                    ref: g,
                    parmas: p,
                    ApiFun: s(Aa),
                    hasHead: !1,
                    gVSs: "2"
                }, null, 8, ["parmas", "ApiFun"])], 1024))])])
            }
        }
    });
const rz = H(cz, [
        ["__scopeId", "data-v-61afe2c2"]
    ]),
    oP = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: rz
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    uz = {
        class: "messageDetail__container content"
    },
    dz = {
        class: "messageDetail__container-wrapper"
    },
    pz = {
        class: "messageDetail__container-title"
    },
    gz = {
        class: "messageDetail__container-content"
    },
    mz = W({
        __name: "index",
        setup(l) {
            const {
                t: i
            } = pt(), o = il(), u = gt(), m = f({}), g = be(() => _e(() => import("./messageIconNoDot-70e431b7.js"), ["assets/js/messageIconNoDot-70e431b7.js", "assets/js/page-activity-8d7959ff.js", "assets/js/modules-fbc96342.js", "assets/css/modules-66401e0a.css", "assets/js/native/index-08561a08.js", "assets/js/en-bab51ca4.js", "assets/js/rus-ecb14220.js", "assets/js/vi-82b0febd.js", "assets/js/id-16b6cb52.js", "assets/js/hd-c5b1d7e8.js", "assets/js/tha-330057b2.js", "assets/js/md-e8a5e3b0.js", "assets/js/bra-6692a9a5.js", "assets/js/my-32fb9d60.js", "assets/js/bdt-d8f19d0c.js", "assets/js/zh-7d334abd.js", "assets/js/pak-cdc12211.js", "assets/js/ar-1c9ff85b.js", "assets/css/page-activity-9df3b495.css"])), d = be(() => _e(() => import("./messageGarbage-a45e3411.js"), ["assets/js/messageGarbage-a45e3411.js", "assets/js/page-activity-8d7959ff.js", "assets/js/modules-fbc96342.js", "assets/css/modules-66401e0a.css", "assets/js/native/index-08561a08.js", "assets/js/en-bab51ca4.js", "assets/js/rus-ecb14220.js", "assets/js/vi-82b0febd.js", "assets/js/id-16b6cb52.js", "assets/js/hd-c5b1d7e8.js", "assets/js/tha-330057b2.js", "assets/js/md-e8a5e3b0.js", "assets/js/bra-6692a9a5.js", "assets/js/my-32fb9d60.js", "assets/js/bdt-d8f19d0c.js", "assets/js/zh-7d334abd.js", "assets/js/pak-cdc12211.js", "assets/js/ar-1c9ff85b.js", "assets/css/page-activity-9df3b495.css"]));

            function c() {
                u.back()
            }

            function p() {
                va({
                    title: i("warning"),
                    message: i("warningTxt1")
                }).then(() => {
                    mn({
                        messageID: m.value.messageID,
                        state: 2
                    }), u.back()
                })
            }
            return ht(async () => {
                m.value = o.getMessagesDetail, m.value.state !== 1 && (await mn({
                    messageID: m.value.messageID,
                    state: 1
                }), o.setMessageDetail({
                    ...m.value,
                    state: 1
                }))
            }), (r, _) => {
                const b = V("NavBar");
                return n(), a("div", uz, [N(b, {
                    "left-arrow": "",
                    onClickLeft: c,
                    title: s(i)("notificationDetails")
                }, null, 8, ["title"]), t("div", dz, [t("div", pz, [t("div", null, [t("div", null, [(n(), Q(me(s(g)))), t("span", null, e(m.value.title), 1)]), t("span", null, e(m.value.addTime), 1)]), (n(), Q(me(s(d)), {
                    onClick: p
                }))]), t("div", gz, e(m.value.messages), 1)])])
            }
        }
    });
const bz = H(mz, [
        ["__scopeId", "data-v-4c381eda"]
    ]),
    sP = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: bz
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    _z = {
        class: "dialog__container",
        role: "dialog",
        tabindex: "0"
    },
    vz = {
        class: "dialog__container-img"
    },
    hz = {
        alt: ""
    },
    kz = {
        class: "dialog__container-title"
    },
    fz = {
        class: "dialog__container-content"
    },
    yz = {
        class: "dialog__container-footer"
    },
    $z = W({
        __name: "HomeDialog",
        props: {
            show: {
                type: Boolean,
                default: !1
            },
            title: {
                type: String,
                default: ""
            },
            confirmText: {
                type: String,
                default: "comfirm"
            },
            showCancelBtn: {
                type: Boolean,
                default: !0
            },
            cancelText: {
                type: String,
                default: "cancel"
            },
            clickOutSide: {
                type: Boolean,
                default: !1
            },
            pathname: {
                type: String,
                default: "main/Laundry"
            },
            picname: {
                type: String,
                default: "superjackpotHome"
            }
        },
        emits: ["update:show", "confirm"],
        setup(l, {
            emit: i
        }) {
            const o = l,
                {
                    t: u
                } = pt();
            Ot(() => o.show, d => {
                d ? window.addEventListener("touchmove", g, {
                    passive: !1
                }) : window.removeEventListener("touchmove", g)
            });

            function m(d) {
                o.clickOutSide && i("update:show", !1)
            }
            const g = d => {
                o.show && d.preventDefault()
            };
            return (d, c) => {
                const p = zt("lazy");
                return n(), a("div", {
                    class: M(["dialog", {
                        active: l.show,
                        inactive: !l.show
                    }])
                }, [t("div", _z, [t("div", vz, [$e(d.$slots, "header", {}, () => [et(t("img", hz, null, 512), [
                    [p, s(ut)(l.pathname, l.picname)]
                ])], !0)]), t("div", kz, [$e(d.$slots, "title", {}, () => [t("h1", null, e(s(u)(l.title)), 1)], !0)]), t("div", fz, [$e(d.$slots, "content", {}, void 0, !0)]), t("div", yz, [$e(d.$slots, "footer", {}, () => [l.showCancelBtn ? (n(), a("button", {
                    key: 0,
                    onClick: c[0] || (c[0] = () => {
                        i("update:show", !1)
                    })
                }, e(d.$t(l.cancelText)), 1)) : S("", !0), t("button", {
                    onClick: c[1] || (c[1] = () => {
                        i("confirm")
                    })
                }, e(d.$t(l.confirmText)), 1)], !0)])]), t("div", {
                    class: "dialog__outside",
                    onClick: m
                })], 2)
            }
        }
    });
const yi = H($z, [
        ["__scopeId", "data-v-d6ad76e9"]
    ]),
    Tz = {
        class: "luckyWinners__container"
    },
    Cz = {
        class: "luckyWinners__container-wrapper"
    },
    wz = {
        class: "luckyWinners__container-wrapper__item-img"
    },
    Lz = {
        class: "luckyWinners__container-wrapper__item-info"
    },
    Nz = {
        class: "luckyWinners__container-wrapper__item-winType"
    },
    Iz = {
        class: "luckyWinners__container-wrapper__item-winAmount"
    },
    zz = W({
        __name: "index",
        setup(l) {
            const {
                homeState: i,
                getWinInfoDetail: o,
                getWinInfo: u
            } = jt(), m = f(null), g = f(null);
            return ht(async () => {
                await o(), fa(g.value), i.winInfoList.length > 0 && (m.value = setInterval(async () => {
                    i.winInfoList.unshift(i.winInfoList.pop())
                }, 3e3))
            }), Ii(() => {
                clearInterval(m.value)
            }), (d, c) => {
                const p = zt("lazy");
                return n(), a("div", Tz, [t("h1", null, e(d.$t("winningDetal")), 1), t("div", Cz, [t("div", {
                    ref_key: "wrapperRef",
                    ref: g
                }, [(n(!0), a(G, null, B(s(u).slice(0, 6), r => (n(), a("div", {
                    class: "luckyWinners__container-wrapper__item",
                    key: r
                }, [t("div", wz, [et(t("img", null, null, 512), [
                    [p, s(ut)("main/Avatar", r.userPhoto) || s(ut)("home", "avatar")]
                ])]), t("div", Lz, [t("h1", null, e(s(Ni)(r.nickName)), 1)]), t("div", Nz, [et(t("img", null, null, 512), [
                    [p, r.imgUrl]
                ])]), t("div", Iz, [t("h1", null, e(d.$t("titleGot")) + " " + e(s(xt)(r.amount || 0)), 1), t("span", null, e(d.$t("winningAmount")), 1)])]))), 128))], 512)])])
            }
        }
    });
const Ji = H(zz, [
        ["__scopeId", "data-v-62ffcd6a"]
    ]),
    xz = {
        class: "dailyProfitRank"
    },
    Sz = {
        class: "dailyProfitRank__content"
    },
    Rz = {
        class: "dailyProfitRank__content-topThree"
    },
    Gz = ["data-img"],
    Mz = ["data-img"],
    Bz = {
        class: "dailyProfitRank__content-list"
    },
    Dz = {
        class: "left-rank"
    },
    Pz = ["data-img"],
    Az = ["data-img"],
    Oz = {
        class: "middle-name"
    },
    Wz = {
        class: "right-box"
    },
    qz = W({
        __name: "index",
        setup(l) {
            const {
                t: i
            } = pt(), {
                homeState: o
            } = jt(), u = {
                nickName: i("noData"),
                userPhoto: "",
                price: 0,
                time: "",
                typeName: ""
            }, m = U(() => "bdgwin");
            Ot(() => o.rankList, c => {
                g.value.splice(0, c.length, ...c.sort((p, r) => r.price - p.price).slice(0, 3)), d.value.splice(0, c.length, ...c.sort((p, r) => r.price - p.price).slice(3, 10))
            });
            const g = f([u, u, u]),
                d = f([]);
            return (c, p) => {
                const r = zt("lazy");
                return n(), a("div", xz, [t("h1", null, e(c.$t("earningsRankingToday")), 1), t("div", Sz, [t("div", Rz, [(n(!0), a(G, null, B(g.value, (_, b) => (n(), a("div", {
                    class: "dailyProfitRank__content-topThree__item",
                    key: b,
                    style: Jt({
                        order: b === 0 ? 2 : b === 2 ? 3 : 1,
                        top: b === 0 ? "-45px" : "-20px"
                    })
                }, [t("div", {
                    style: Jt({
                        background: `url(${s(ut)("images/DailyProfitRank",`border${b+1}`)}) no-repeat center center / 100% 100%`
                    })
                }, [_.userPhoto.length > 2 ? et((n(), a("img", {
                    key: 0,
                    "data-img": s(ut)("home", m.value + "-avatar")
                }, null, 8, Gz)), [
                    [r, _.userPhoto]
                ]) : et((n(), a("img", {
                    key: 1,
                    "data-img": s(ut)("home", m.value + "-avatar")
                }, null, 8, Mz)), [
                    [r, s(ut)("main/Avatar", _.userPhoto)]
                ])], 4), t("div", null, [et(t("img", null, null, 512), [
                    [r, s(ut)("images/DailyProfitRank", `crown${b+1}`)]
                ]), et(t("img", null, null, 512), [
                    [r, s(ut)("images/DailyProfitRank", `place${b+1}`)]
                ])]), t("span", null, e(s(Ni)(_.nickName)), 1), t("span", null, e(s(xt)(_.price)), 1)], 4))), 128))]), t("div", Bz, [(n(!0), a(G, null, B(d.value, (_, b) => (n(), a("div", {
                    class: "dailyProfitRank__content-list__item",
                    key: b
                }, [t("span", Dz, e(b + 4), 1), _.userPhoto.length > 2 ? et((n(), a("img", {
                    key: 0,
                    "data-img": s(ut)("home", m.value + "-avatar")
                }, null, 8, Pz)), [
                    [r, _.userPhoto]
                ]) : et((n(), a("img", {
                    key: 1,
                    "data-img": s(ut)("home", m.value + "-avatar")
                }, null, 8, Az)), [
                    [r, s(ut)("main/Avatar", _.userPhoto)]
                ]), t("span", Oz, e(s(Ni)(_.nickName)), 1), t("span", Wz, e(s(xt)(_.price)), 1)]))), 128))])])])
            }
        }
    });
const Qi = H(qz, [
        ["__scopeId", "data-v-18ba3a7a"]
    ]),
    Ez = {
        class: "game_menu"
    },
    Hz = {
        class: "menu_box1"
    },
    Fz = {
        alt: ""
    },
    Vz = {
        alt: ""
    },
    jz = {
        alt: ""
    },
    Uz = {
        class: "menu_box2"
    },
    Kz = {
        alt: ""
    },
    Xz = {
        alt: ""
    },
    Jz = {
        alt: ""
    },
    Qz = {
        class: "menu_box3"
    },
    Yz = {
        alt: ""
    },
    Zz = {
        alt: ""
    },
    tx = W({
        __name: "gameMenu",
        props: {
            allGameList: {
                type: Array,
                default: () => []
            }
        },
        emits: ["clickMenu"],
        setup(l, {
            expose: i,
            emit: o
        }) {
            const u = l,
                m = U(() => {
                    let d = {};
                    return (u.allGameList || []).forEach((p, r) => {
                        d[p.gameType] = Object.assign(p, r)
                    }), d
                }),
                g = d => {
                    const c = m.value[d];
                    o("clickMenu", {
                        type: d,
                        gameMenu: c,
                        index: c.index
                    })
                };
            return i({
                handleClickMenu: g
            }), (d, c) => {
                var r, _, b, y, v, $, T, C;
                const p = zt("lazy");
                return n(), a("div", Ez, [t("div", Hz, [t("div", {
                    onClick: c[0] || (c[0] = h => g("lottery"))
                }, [et(t("img", Fz, null, 512), [
                    [p, (r = m.value.lottery) == null ? void 0 : r.img]
                ]), t("span", null, e(d.$t("lottery")), 1)]), t("div", {
                    onClick: c[1] || (c[1] = h => g("flash"))
                }, [et(t("img", Vz, null, 512), [
                    [p, (_ = m.value.flash) == null ? void 0 : _.img]
                ]), t("span", null, e(d.$t("miniGame")), 1)]), t("div", {
                    onClick: c[2] || (c[2] = h => g("slot"))
                }, [et(t("img", jz, null, 512), [
                    [p, (b = m.value.slot) == null ? void 0 : b.img]
                ]), t("span", null, e(d.$t("electronic")), 1)])]), t("div", Uz, [t("div", {
                    onClick: c[3] || (c[3] = h => g("sport"))
                }, [et(t("img", Kz, null, 512), [
                    [p, (y = m.value.sport) == null ? void 0 : y.img]
                ]), t("span", null, e(d.$t("sport")), 1)]), t("div", {
                    onClick: c[4] || (c[4] = h => g("popular")),
                    class: "live_menu"
                }, [et(t("img", Xz, null, 512), [
                    [p, (v = m.value.popular) == null ? void 0 : v.img]
                ]), t("span", null, e(d.$t("hot")), 1)]), t("div", {
                    onClick: c[5] || (c[5] = h => g("video"))
                }, [et(t("img", Jz, null, 512), [
                    [p, ($ = m.value.video) == null ? void 0 : $.img]
                ]), t("span", null, e(d.$t("live")), 1)])]), t("div", Qz, [t("div", {
                    onClick: c[6] || (c[6] = h => g("chess"))
                }, [et(t("img", Yz, null, 512), [
                    [p, (T = m.value.chess) == null ? void 0 : T.img]
                ]), t("span", null, e(d.$t("chess")), 1)]), t("div", {
                    onClick: c[7] || (c[7] = h => g("fish"))
                }, [et(t("img", Zz, null, 512), [
                    [p, (C = m.value.fish) == null ? void 0 : C.img]
                ]), t("span", null, e(d.$t("fishing")), 1)])])])
            }
        }
    });
const ex = H(tx, [
        ["__scopeId", "data-v-a755d2fc"]
    ]),
    ix = {
        key: 0,
        class: "title"
    },
    nx = {
        class: "list"
    },
    ax = ["onClick"],
    ox = {
        class: "item"
    },
    sx = ["src", "data-img"],
    lx = {
        key: 0,
        class: "win-odds"
    },
    cx = W({
        __name: "HotGameItem",
        props: {
            gameList: {},
            isAll: {
                type: Boolean
            }
        },
        emits: ["onItemClick"],
        setup(l, {
            emit: i
        }) {
            const o = be(() => _e(() => import("./noticeBarHot-ab6af50b.js"), ["assets/js/noticeBarHot-ab6af50b.js", "assets/js/page-activity-8d7959ff.js", "assets/js/modules-fbc96342.js", "assets/css/modules-66401e0a.css", "assets/js/native/index-08561a08.js", "assets/js/en-bab51ca4.js", "assets/js/rus-ecb14220.js", "assets/js/vi-82b0febd.js", "assets/js/id-16b6cb52.js", "assets/js/hd-c5b1d7e8.js", "assets/js/tha-330057b2.js", "assets/js/md-e8a5e3b0.js", "assets/js/bra-6692a9a5.js", "assets/js/my-32fb9d60.js", "assets/js/bdt-d8f19d0c.js", "assets/js/zh-7d334abd.js", "assets/js/pak-cdc12211.js", "assets/js/ar-1c9ff85b.js", "assets/css/page-activity-9df3b495.css"])),
                u = ne(),
                m = g => {
                    i("onItemClick", g)
                };
            return (g, d) => (n(), a("div", {
                class: M(["hot_container", {
                    hot_all: g.isAll
                }])
            }, [g.gameList.length > 0 ? (n(), a("div", {
                key: 0,
                class: M(["popular", {
                    pupularAll: g.isAll
                }])
            }, [g.isAll ? S("", !0) : (n(), a("div", ix, [N(s(o), {
                class: "hotGames"
            }), t("span", null, e(g.$t("hot")), 1)])), t("div", nx, [(n(!0), a(G, null, B(g.gameList, c => (n(), a("div", {
                key: c.vendorId,
                onClick: p => m(c)
            }, [t("div", ox, [t("img", {
                src: c.imgUrl,
                alt: "",
                "data-img": s(ut)("images", "avatar")
            }, null, 8, sx)]), s(u).isShowHotGameWinOdds ? (n(), a("div", lx, [t("span", null, e(g.$t("winOdds")), 1), t("span", null, e(c.winOdds) + "%", 1), t("div", {
                class: "win-p",
                style: Jt({
                    width: `${Math.min(c.winOdds,100)}%`
                })
            }, null, 4)])) : S("", !0)], 8, ax))), 128))])], 2)) : S("", !0)], 2))
        }
    });
const rx = H(cx, [
        ["__scopeId", "data-v-3720dc40"]
    ]),
    ux = ["onClick"],
    dx = W({
        __name: "OnlineGamesItem",
        props: {
            gameData: {},
            isAll: {
                type: Boolean
            },
            gameType: {}
        },
        emits: ["onItemClick"],
        setup(l, {
            emit: i
        }) {
            const o = l,
                u = U(() => o.isAll ? o.gameData.gameList : o.gameData.gameList.length > 8 ? o.gameData.gameList.slice(0, 8) : o.gameData.gameList),
                m = g => {
                    i("onItemClick", g)
                };
            return ht(() => {}), (g, d) => {
                const c = zt("lazy");
                return n(), a("div", {
                    class: M(["minGame_container", {
                        all_game: g.isAll
                    }])
                }, [(n(!0), a(G, null, B(u.value, p => (n(), a("div", {
                    class: "onlineGamesItem",
                    key: p.gameID,
                    onClick: r => m(p)
                }, [et((n(), a("img", {
                    class: M(g.gameType === "fish" ? "fish_img" : "min_game_img"),
                    key: p.gameID
                }, null, 2)), [
                    [c, p.img]
                ])], 8, ux))), 128))], 2)
            }
        }
    });
const px = H(dx, [
        ["__scopeId", "data-v-b4c2775a"]
    ]),
    gx = {
        class: "lottery_container"
    },
    mx = {
        class: "lottery_container-tab"
    },
    bx = {
        class: "lottery_container-tab-wrap"
    },
    _x = ["onClick"],
    vx = {
        class: "lottery_container-list"
    },
    hx = ["onClick"],
    kx = {
        class: "lotterySlotItem_img"
    },
    fx = W({
        __name: "LotterySlotItem",
        props: {
            gameData: {},
            isAll: {
                type: Boolean
            }
        },
        setup(l) {
            const i = l,
                {
                    t: o
                } = pt(),
                u = gt(),
                m = U(() => i.gameData.gameList.filter($ => $.state === 1)),
                g = U(() => m.value.map($ => $.categoryCode));

            function d($) {
                return $.reduce((T, C) => Array.isArray(C) ? T.concat(d(C)) : T.concat(C), [])
            }
            const c = $ => {
                    if ($) {
                        let T = $;
                        switch (T) {
                            case "Trx Win Go":
                                T = "Trx Win";
                                break;
                            case "FXOSO":
                                T = o("FXOSO");
                            default:
                                T = T
                        }
                        return T
                    }
                    return ""
                },
                p = U(() => {
                    const $ = {};
                    return i.gameData.gameList.forEach(T => {
                        $[T.categoryCode] = T.categoryImg
                    }), $
                }),
                r = f("all");
            let _ = Et({
                all: [],
                "4D": [{
                    categoryCode: "4D",
                    title: "4D",
                    path: "4D"
                }],
                Bingo18: [{
                    categoryCode: "Bingo18",
                    title: "Bingo18",
                    path: "Binguo"
                }],
                XOSO: [{
                    categoryCode: "XOSO",
                    title: "XOSO",
                    path: "XoSo"
                }],
                FXOSO: [{
                    categoryCode: "FXOSO",
                    title: "FXOSO",
                    path: "XoSo"
                }],
                "Win Go": [{
                    typeId: 1,
                    categoryCode: "Win Go",
                    title: "Win Go 1Min",
                    path: "WinGo"
                }, {
                    typeId: 2,
                    categoryCode: "Win Go",
                    title: "Win Go 3Min",
                    path: "WinGo"
                }, {
                    typeId: 3,
                    categoryCode: "Win Go",
                    title: "Win Go 5Min",
                    path: "WinGo"
                }, {
                    typeId: 4,
                    categoryCode: "Win Go",
                    title: "Win Go 10Min",
                    path: "WinGo"
                }],
                "5D": [{
                    typeId: 5,
                    categoryCode: "5D",
                    title: "5D 1Min",
                    path: "5D"
                }, {
                    typeId: 6,
                    categoryCode: "5D",
                    title: "5D 3Min",
                    path: "5D"
                }, {
                    typeId: 7,
                    categoryCode: "5D",
                    title: "5D 5Min",
                    path: "5D"
                }, {
                    typeId: 8,
                    categoryCode: "5D",
                    title: "5D 10Min",
                    path: "5D"
                }],
                K3: [{
                    typeId: 9,
                    categoryCode: "K3",
                    title: "K3 1Min",
                    path: "K3"
                }, {
                    typeId: 10,
                    categoryCode: "K3",
                    title: "K3 3Min",
                    path: "K3"
                }, {
                    typeId: 11,
                    categoryCode: "K3",
                    title: "K3 5Min",
                    path: "K3"
                }, {
                    typeId: 12,
                    categoryCode: "K3",
                    title: "K3 10Min",
                    path: "K3"
                }],
                "Trx Win Go": [{
                    typeId: 13,
                    categoryCode: "Trx Win Go",
                    title: "Trx Win Go 1Min",
                    path: "WinTrx"
                }, {
                    typeId: 14,
                    categoryCode: "Trx Win Go",
                    title: "Trx Win Go 3Min",
                    path: "WinTrx"
                }, {
                    typeId: 15,
                    categoryCode: "Trx Win Go",
                    title: "Trx Win Go 5Min",
                    path: "WinTrx"
                }, {
                    typeId: 16,
                    categoryCode: "Trx Win Go",
                    title: "Trx Win Go 10Min",
                    path: "WinTrx"
                }]
            });
            const b = U(() => _[r.value] || []),
                y = [{
                    value: 1,
                    path: "WinGo"
                }, {
                    value: 3,
                    path: "5D"
                }, {
                    value: 2,
                    path: "K3"
                }, {
                    value: 4,
                    path: "WinTrx"
                }, {
                    value: 5,
                    path: "XoSo"
                }, {
                    value: 6,
                    path: "XoSo"
                }, {
                    value: 7,
                    path: "Binguo"
                }, {
                    value: 8,
                    path: "4D"
                }],
                v = $ => {
                    var C;
                    let T = (C = y.find(h => h.path === $.path)) == null ? void 0 : C.value;
                    $.categoryCode == "FXOSO" && (T = 6), u.push({
                        name: "AllLotteryGames-" + $.path,
                        query: {
                            typeId: $.typeId || "",
                            id: T
                        }
                    })
                };
            return ht(() => {
                const $ = d(Object.values(_));
                _.all = $.filter(T => g.value.includes(T.categoryCode))
            }), ($, T) => {
                const C = zt("lazy");
                return n(), a("div", gx, [t("div", mx, [t("ul", bx, [t("li", {
                    class: M({
                        active: r.value === "all"
                    }),
                    onClick: T[0] || (T[0] = h => r.value = "all")
                }, e($.$t("all")), 3), (n(!0), a(G, null, B(m.value, h => (n(), a("li", {
                    onClick: k => r.value = h.categoryCode,
                    class: M({
                        active: h.categoryCode === r.value
                    })
                }, e(c(h.categoryCode)), 11, _x))), 256))])]), t("div", vx, [(n(!0), a(G, null, B(b.value, h => (n(), a("div", {
                    class: "lotterySlotItem",
                    key: h.id,
                    onClick: k => v(h)
                }, [t("div", kx, [et(t("img", null, null, 512), [
                    [C, p.value[h.categoryCode]]
                ])]), t("span", null, e(h.title), 1)], 8, hx))), 128))])])
            }
        }
    });
const yx = H(fx, [
        ["__scopeId", "data-v-a2c8d18e"]
    ]),
    $x = {
        class: "lotterySlotItem__container"
    },
    Tx = {
        class: "game_img"
    },
    Cx = {
        class: "game_text"
    },
    wx = W({
        __name: "OtherGameItem",
        props: {
            info: {},
            title: {}
        },
        setup(l) {
            return pt(), (i, o) => {
                const u = zt("lazy");
                return n(), a("div", $x, [et(t("img", Tx, null, 512), [
                    [u, i.info.vendorImg]
                ]), t("span", Cx, e(i.title), 1)])
            }
        }
    });
const Lx = H(wx, [
        ["__scopeId", "data-v-a9e483f8"]
    ]),
    Nx = ["onClick"],
    Ix = {
        class: "gameImg"
    },
    zx = W({
        __name: "ElectronicItem",
        props: {
            gameData: {
                type: Object,
                default: () => ({})
            },
            isAll: {
                type: Boolean,
                default: !1
            }
        },
        emits: ["onItemClick"],
        setup(l, {
            emit: i
        }) {
            const o = l,
                u = U(() => {
                    var g;
                    return o.isAll ? o.gameData.gameList : (g = o.gameData) == null ? void 0 : g.gameList.slice(0, 6)
                }),
                m = g => {
                    i("onItemClick", g, "slot")
                };
            return ht(() => {}), (g, d) => {
                const c = zt("lazy");
                return n(), a("div", {
                    class: M(["onlineGamesItem__container", {
                        allGame: l.isAll
                    }])
                }, [(n(!0), a(G, null, B(u.value, p => (n(), a("div", {
                    key: p.slotsTypeID,
                    class: "item",
                    onClick: r => m(p)
                }, [et(t("img", Ix, null, 512), [
                    [c, p.vendorImg]
                ])], 8, Nx))), 128))], 2)
            }
        }
    });
const xx = H(zx, [
        ["__scopeId", "data-v-2854e1dd"]
    ]),
    Sx = {
        alt: ""
    },
    Rx = W({
        __name: "ElectronicWinRate",
        setup(l) {
            const i = ne(),
                o = U(() => i.winRate.electronicWinRateImgUrl || ""),
                u = U(() => !!(i.winRate.isShowElectronicWinRateExternalLink && o.value)),
                m = () => {
                    i.winRate.electronicWinRateExternalLink && window.open(i.winRate.electronicWinRateExternalLink)
                };
            return (g, d) => {
                const c = zt("lazy");
                return u.value ? (n(), a("div", {
                    key: 0,
                    class: "WinRate",
                    onClick: m
                }, [et(t("img", Sx, null, 512), [
                    [c, o.value]
                ])])) : S("", !0)
            }
        }
    });
const Gx = H(Rx, [
        ["__scopeId", "data-v-f9d57657"]
    ]),
    Mx = ["src"],
    Bx = W({
        __name: "GameListGrid",
        props: {
            currentGame: {
                type: Object,
                default: () => {}
            },
            isAll: {
                type: Boolean,
                default: !1
            }
        },
        setup(l) {
            const i = l,
                {
                    onItemClick: o,
                    homeState: u
                } = jt(),
                m = U(() => u.allGameList),
                g = gt(),
                d = U(() => i.currentGame.gameType === "popular" ? 1 : ["sport", "chess", "video"].includes(i.currentGame.gameType) ? 2 : i.currentGame.gameType === "lottery" ? 3 : i.currentGame.gameType === "slot" ? 4 : i.currentGame.gameType === "flash" || i.currentGame.gameType === "fish" ? 5 : -1),
                c = () => {
                    sessionStorage.setItem("slotGamesList", JSON.stringify(i.currentGame.gameList)), sessionStorage.setItem("gameType", JSON.stringify(i.currentGame)), sessionStorage.setItem("clickedItem", JSON.stringify(i.currentGame.gameList[0])), g.push({
                        name: "AllGames",
                        query: {
                            type: i.currentGame.gameType
                        }
                    })
                },
                p = async (r, _) => {
                    ["chess", "slot"].includes(_) ? (sessionStorage.setItem("slotGamesList", JSON.stringify(m.value[i.currentGame.gameType])), sessionStorage.setItem("gameType", JSON.stringify(i.currentGame.gameType)), sessionStorage.setItem("clickedItem", JSON.stringify(r)), g.push({
                        name: "AllOnlineGames"
                    })) : o(r)
                };
            return ht(() => {}), (r, _) => (n(), a("div", {
                class: M(["gameListGrid__container", {
                    all_container: l.isAll
                }])
            }, [d.value === 1 ? (n(), Q(rx, {
                key: 0,
                gameList: l.currentGame.gameList,
                onOnItemClick: s(o),
                isAll: l.isAll
            }, null, 8, ["gameList", "onOnItemClick", "isAll"])) : S("", !0), d.value === 2 ? (n(), a("div", {
                key: 1,
                class: M(["otherGame", {
                    all_other: l.isAll
                }])
            }, [(n(!0), a(G, null, B(l.currentGame.gameList, (b, y) => (n(), Q(Lx, {
                key: y,
                info: b,
                title: l.currentGame.title,
                onClick: v => p(b, l.currentGame.gameType)
            }, null, 8, ["info", "title", "onClick"]))), 128))], 2)) : S("", !0), d.value === 4 ? (n(), Q(Gx, {
                key: 2
            })) : S("", !0), d.value === 4 ? (n(), Q(xx, {
                key: 3,
                gameData: l.currentGame,
                isAll: l.isAll,
                onOnItemClick: p
            }, null, 8, ["gameData", "isAll"])) : S("", !0), d.value === 3 ? (n(), Q(yx, {
                key: 4,
                gameData: l.currentGame,
                isAll: l.isAll
            }, null, 8, ["gameData", "isAll"])) : S("", !0), d.value === 5 ? (n(), Q(px, {
                key: 5,
                gameType: l.currentGame.gameType,
                gameData: l.currentGame,
                isAll: l.isAll,
                onOnItemClick: s(o)
            }, null, 8, ["gameType", "gameData", "isAll", "onOnItemClick"])) : S("", !0), l.isAll ? S("", !0) : (n(), a("button", {
                key: 6,
                onClick: c,
                class: "look_all"
            }, [t("img", {
                src: s(ut)("home", "all"),
                alt: ""
            }, null, 8, Mx), E(" " + e(r.$t("viewAll")), 1)]))], 2))
        }
    });
const Dx = H(Bx, [
        ["__scopeId", "data-v-f01fefd9"]
    ]),
    Px = {
        class: "gamesList__container",
        id: "gameList"
    },
    Ax = {
        key: 0,
        class: "gamesList__container-title"
    },
    Ox = W({
        __name: "GameList",
        props: {
            gameData: {}
        },
        setup(l) {
            return (i, o) => (n(), a("div", Px, [i.gameData.gameList.length > 0 && i.gameData.isShow ? (n(), a("div", Ax, e(i.gameData.title), 1)) : S("", !0), i.gameData.isShow ? (n(), Q(Dx, {
                key: 1,
                currentGame: i.gameData,
                isAll: !0
            }, null, 8, ["currentGame"])) : S("", !0)]))
        }
    });
const Wx = H(Ox, [
        ["__scopeId", "data-v-ab71fe42"]
    ]),
    ro = W({
        __name: "index",
        setup(l) {
            const {
                getGameType: i,
                homeState: o,
                getAllGame: u
            } = jt(), {
                t: m
            } = pt(), g = Et({
                allGameList: [],
                currentGame: void 0
            }), d = r => {
                const _ = document.querySelector("#gameList"),
                    b = (_ == null ? void 0 : _.offsetTop) || 0;
                sessionStorage.setItem("clickMenu", r.type), g.currentGame = r.gameMenu, window.scrollTo({
                    top: b - 100,
                    behavior: "smooth"
                })
            }, c = async () => {
                await i(), g.allGameList = o.gameTypeList.filter(r => r.categoryCode !== "BigAward").map(r => ({
                    isAll: !1,
                    img: r.categoryImg,
                    isShow: r.state === 1,
                    gameList: [],
                    gameType: r.categoryCode.toLocaleLowerCase(),
                    title: m("code" + r.typeNameCode)
                }))
            }, p = async () => {
                await c(), await u();
                const r = o.allGameList;
                g.allGameList = g.allGameList.map(b => (b.gameType === "popular" ? b.gameList = [...r[b.gameType].platformList, ...r[b.gameType].clicksTopList] : b.gameList = r[b.gameType], b.gameList || (b.isShow = !1), b));
                let _ = sessionStorage.getItem("clickMenu") || "";
                if (_) g.currentGame = g.allGameList.find(b => b.gameType === _);
                else {
                    let b = g.allGameList.find(y => y.gameType === "lottery");
                    b || (b = g.allGameList[0]), g.currentGame = b
                }
                sessionStorage.setItem("allGameList", JSON.stringify(g.allGameList))
            };
            return ht(() => {
                p()
            }), (r, _) => (n(), a(G, null, [N(ex, {
                "all-game-list": g.allGameList,
                onClickMenu: d
            }, null, 8, ["all-game-list"]), g.currentGame ? (n(), Q(Wx, {
                key: 0,
                gameData: g.currentGame
            }, null, 8, ["gameData"])) : S("", !0)], 64))
        }
    }),
    qx = ["onClick"],
    Ex = W({
        __name: "index",
        setup(l) {
            const {
                getBannerApi: i,
                getBanner: o
            } = jt(), u = [ss], m = c => {}, g = () => {}, d = c => {
                c && (window.location.href = c)
            };
            return ht(async () => {
                await i()
            }), (c, p) => {
                const r = zt("lazy");
                return n(), Q(s(os), {
                    class: "my-swipe",
                    "slides-per-view": 1,
                    "space-between": 20,
                    onSwiper: m,
                    onSlideChange: g,
                    autoplay: {
                        delay: 5e3,
                        disableOnInteraction: !1
                    },
                    modules: u,
                    loop: !0
                }, {
                    default: D(() => [(n(!0), a(G, null, B(s(o), (_, b) => (n(), Q(s(as), {
                        key: b
                    }, {
                        default: D(() => [et(t("img", {
                            onClick: y => d(_.url)
                        }, null, 8, qx), [
                            [r, _.bannerUrl]
                        ])]),
                        _: 2
                    }, 1024))), 128))]),
                    _: 1
                })
            }
        }
    });
const $i = H(Ex, [
        ["__scopeId", "data-v-263acf51"]
    ]),
    Ti = W({
        __name: "Turntable",
        setup(l) {
            const i = gt(),
                o = f(),
                u = ne();

            function m() {
                u.getBigTurntableLink && window.open(u.getBigTurntableLink)
            }
            return (g, d) => (n(), a(G, null, [s(u).getOpenTurntable ? (n(), a("div", {
                key: 0,
                class: M(["turntable-lottery", {
                    "lottery-bottom": s(u).getBigTurntableLink
                }]),
                onClick: d[0] || (d[0] = c => s(i).push({
                    name: "Turntable"
                }))
            }, null, 2)) : S("", !0), s(u).getBigTurntableLink ? (n(), a("div", {
                key: 1,
                class: "turntable",
                onClick: m,
                ref_key: "turntableId",
                ref: o
            }, null, 512)) : S("", !0)], 64))
        }
    });
const Hx = l => (wt("data-v-18acce94"), l = l(), Lt(), l),
    Fx = Hx(() => t("svg", {
        class: "line",
        width: "1",
        height: "60",
        viewBox: "0 0 1 60",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg"
    }, [t("line", {
        x1: "0.5",
        x2: "0.5",
        y2: "60",
        stroke: "#8F5206"
    })], -1)),
    Vx = ["src"],
    jx = {
        class: "text"
    },
    Ux = 1.1,
    Kx = W({
        __name: "DownloadPWA",
        setup(l) {
            const i = ls("show-pwa-download", !0);
            let o = null;
            const {
                t: u
            } = pt(), m = ne(), g = Et({
                canIUse: !1,
                download: null
            });
            window.addEventListener("beforeinstallprompt", r => {
                r.preventDefault(), o = r, g.canIUse = !0
            }, {
                once: !0
            }), g.download = function() {
                o.prompt().then(r => {
                    r.outcome === "accepted" && (g.canIUse = !1)
                })
            };
            let d = nl();
            d = d == null ? void 0 : d.toLowerCase(), /[\u4e00-\u9fa5]+/.test(d) && (d = "vxth");
            const c = document.querySelector("link[rel='manifest']");
            c == null || c.setAttribute("href", "/manifest/manifest." + d + ".json?version=" + Ux);
            async function p() {
                if (i.value)
                    if (g.canIUse) g.download && g.download();
                    else {
                        const r = await rt(al());
                        if (!r) return;
                        Tn(ol ? r.data.androidUrl : r.data.iosUrl)
                    }
            }
            return (r, _) => {
                const b = V("van-icon");
                return n(), a("div", {
                    class: "btn",
                    onClick: p
                }, [Fx, N(b, {
                    class: "close",
                    name: "close",
                    color: "#8F5206",
                    onClick: _[0] || (_[0] = y => i.value = !1)
                }), t("img", {
                    class: "icon",
                    src: s(m).getWebIco
                }, null, 8, Vx), t("div", jx, e(g.canIUse ? s(u)("addToDesktop") : s(u)("downloadAPP")), 1)])
            }
        }
    });
const Ci = H(Kx, [
        ["__scopeId", "data-v-18acce94"]
    ]),
    Ri = l => (wt("data-v-353d66ae"), l = l(), Lt(), l),
    Xx = {
        class: "content"
    },
    Jx = {
        class: "logo"
    },
    Qx = ["src"],
    Yx = {
        class: "languages"
    },
    Zx = {
        class: "languages-text"
    },
    tS = {
        class: "content__right"
    },
    eS = Ri(() => t("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "60",
        height: "60",
        viewBox: "0 0 60 60",
        fill: "none"
    }, [t("g", {
        "clip-path": "url(#clip0_243_123505)"
    }, [t("circle", {
        cx: "30",
        cy: "30",
        r: "28.5",
        stroke: "#3F3F3F",
        "stroke-width": "3"
    }), t("path", {
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        d: "M29.9999 36.25L16.25 22.5543H25.4166V10H34.5833V22.5543H43.75L29.9999 36.25Z",
        fill: "#3F3F3F",
        stroke: "#3F3F3F",
        "stroke-width": "2",
        "stroke-linecap": "round",
        "stroke-linejoin": "round"
    }), t("path", {
        d: "M50 41H10",
        stroke: "#3F3F3F",
        "stroke-width": "3",
        "stroke-linecap": "round"
    }), t("path", {
        d: "M41.25 48.5H18.75",
        stroke: "#3F3F3F",
        "stroke-width": "3",
        "stroke-linecap": "round"
    })]), t("defs", null, [t("clipPath", {
        id: "clip0_243_123505"
    }, [t("rect", {
        width: "60",
        height: "60",
        fill: "white"
    })])])], -1)),
    iS = Ri(() => t("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "60",
        height: "60",
        viewBox: "0 0 60 60",
        fill: "none"
    }, [t("path", {
        d: "M54.3525 27.2813C54.1013 13.8694 43.7044 3.03564 30.9375 3.03564H29.0625C16.2956 3.03564 5.89875 13.8694 5.6475 27.2794C3.405 28.5788 1.875 30.9769 1.875 33.75V37.5C1.875 41.6363 5.23875 45 9.375 45C13.5113 45 16.875 41.6363 16.875 37.5V33.75C16.8721 31.7748 16.0906 29.8803 14.6998 28.4777C13.3091 27.075 11.4214 26.2773 9.44625 26.2575C10.1794 15.3919 18.6863 6.78564 29.0625 6.78564H30.9375C41.3156 6.78564 49.8206 15.3919 50.5537 26.2575C48.5786 26.2773 46.6909 27.075 45.3002 28.4777C43.9094 29.8803 43.1279 31.7748 43.125 33.75V37.5C43.125 40.8863 45.3938 43.7213 48.48 44.6494C45.6947 48.3157 41.7173 50.8953 37.2337 51.9431C36.9242 51.0148 36.3309 50.2072 35.5376 49.6343C34.7443 49.0613 33.7911 48.752 32.8125 48.75C31.5693 48.75 30.377 49.2439 29.4979 50.123C28.6189 51.002 28.125 52.1943 28.125 53.4375C28.125 54.6807 28.6189 55.873 29.4979 56.7521C30.377 57.6312 31.5693 58.125 32.8125 58.125C33.611 58.124 34.3959 57.9181 35.0922 57.5271C35.7884 57.1362 36.3728 56.5732 36.7894 55.8919C40.1684 55.3008 43.3778 53.9795 46.1935 52.0202C49.0093 50.061 51.3637 47.511 53.0925 44.5481C56.0137 43.5244 58.125 40.7681 58.125 37.5V33.75C58.125 30.9769 56.595 28.5788 54.3525 27.2813ZM13.125 33.75V37.5C13.125 39.5681 11.4431 41.25 9.375 41.25C7.30687 41.25 5.625 39.5681 5.625 37.5V33.75C5.625 31.6819 7.30687 30 9.375 30C11.4431 30 13.125 31.6819 13.125 33.75ZM54.375 37.5C54.375 39.51 52.7812 41.1431 50.7938 41.2331L50.6475 41.1638C50.6344 41.1938 50.6138 41.2181 50.6006 41.2463C49.6109 41.2398 48.6639 40.8424 47.966 40.1407C47.2681 39.4389 46.876 38.4897 46.875 37.5V33.75C46.875 31.6819 48.5569 30 50.625 30C52.6931 30 54.375 31.6819 54.375 33.75V37.5Z",
        fill: "#3F3F3F"
    })], -1)),
    nS = {
        key: 0,
        class: "balance"
    },
    aS = Ri(() => t("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "40",
        height: "40",
        viewBox: "0 0 40 40",
        fill: "none"
    }, [t("path", {
        d: "M20 19.8182C15.0509 19.8182 11.04 15.8292 11.04 10.9071C11.04 5.98507 15.0509 2 20 2C24.9491 2 28.96 5.98903 28.96 10.9071C28.96 15.8252 24.9491 19.8182 20 19.8182Z",
        fill: "#292929"
    }), t("path", {
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        d: "M20.3788 27.0402C20.1757 27.2624 19.8243 27.2624 19.6212 27.0402L14.3176 21.2395C8.47124 22.1545 4 27.1864 4 33.2567C4 35.3241 5.68552 37 7.76471 37H32.2353C34.3145 37 36 35.3241 36 33.2567C36 27.1864 31.5288 22.1545 25.6824 21.2395L20.3788 27.0402Z",
        fill: "#292929"
    })], -1)),
    oS = Ri(() => t("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "32",
        height: "32",
        viewBox: "0 0 32 32",
        fill: "none"
    }, [t("path", {
        d: "M4.31322 9.3733C4.56545 9.37359 4.81243 9.44542 5.02548 9.58046C5.23852 9.71549 5.4089 9.90818 5.51681 10.1362C5.62473 10.3642 5.66577 10.6181 5.63516 10.8684C5.60455 11.1188 5.50355 11.3554 5.34388 11.5506L5.34922 11.552C4.55792 12.7353 4.09671 14.1084 4.01317 15.5294C3.92963 16.9505 4.22679 18.3682 4.87399 19.6361C5.52119 20.904 6.49499 21.9762 7.69489 22.7422C8.8948 23.5081 10.2773 23.94 11.6999 23.9933L11.9999 24L18.6665 23.9986V21.4946C18.6664 21.3766 18.6924 21.2601 18.7425 21.1533L18.8012 21.0506C18.919 20.8742 19.102 20.7518 19.3101 20.7103C19.5181 20.6688 19.7341 20.7116 19.9106 20.8293L25.6666 24.6666C25.776 24.7397 25.8657 24.8387 25.9278 24.9547C25.9899 25.0708 26.0223 25.2004 26.0223 25.332C26.0223 25.4636 25.9899 25.5931 25.9278 25.7092C25.8657 25.8253 25.776 25.9242 25.6666 25.9973L19.9092 29.8373C19.7887 29.9177 19.6485 29.9639 19.5038 29.9709C19.359 29.9779 19.2151 29.9454 19.0873 29.8769C18.9596 29.8085 18.8529 29.7066 18.7785 29.5822C18.7042 29.4578 18.665 29.3156 18.6652 29.1706V26.664L11.9999 26.6666C10.055 26.6668 8.14709 26.1352 6.4825 25.1294C4.8179 24.1236 3.45999 22.6818 2.55562 20.9599C1.65126 19.2381 1.23486 17.3018 1.35147 15.3604C1.46808 13.419 2.11325 11.5465 3.21722 9.9453C3.34 9.76831 3.50384 9.6237 3.69471 9.52385C3.88558 9.42401 4.0978 9.37189 4.31322 9.37197V9.3733ZM13.1985 2.38397C13.2863 2.51541 13.3332 2.66991 13.3332 2.82797V5.3333H19.9999C21.9298 5.33301 23.8236 5.85631 25.4796 6.84745C27.1355 7.83859 28.4915 9.26042 29.4031 10.9614C30.3148 12.6625 30.7478 14.579 30.6561 16.5067C30.5644 18.4344 29.9515 20.3011 28.8826 21.908L28.8559 21.948C28.8314 21.9847 28.8065 22.0211 28.7812 22.0573C28.5306 22.3506 28.1612 22.5373 27.7479 22.5373C27.4891 22.5373 27.2358 22.462 27.0191 22.3206C26.8023 22.1791 26.6314 21.9776 26.5272 21.7407C26.423 21.5037 26.3901 21.2416 26.4323 20.9863C26.4746 20.7309 26.5902 20.4934 26.7652 20.3026L26.7519 20.292C27.5073 19.1038 27.9358 17.7372 27.994 16.3304C28.0522 14.9236 27.738 13.5263 27.0833 12.2798C26.4286 11.0333 25.4565 9.98161 24.2652 9.23107C23.0739 8.48053 21.7056 8.0577 20.2985 8.0053L19.9999 7.99997L13.3332 7.99863V10.5053C13.3334 10.6502 13.2943 10.7925 13.2199 10.9169C13.1456 11.0413 13.0388 11.1432 12.9111 11.2116C12.7834 11.2801 12.6394 11.3125 12.4947 11.3056C12.3499 11.2986 12.2098 11.2524 12.0892 11.172L6.33322 7.33063C6.22376 7.25755 6.13403 7.1586 6.07197 7.04254C6.0099 6.92648 5.97744 6.79691 5.97744 6.6653C5.97744 6.53369 6.0099 6.40411 6.07197 6.28806C6.13403 6.172 6.22376 6.07304 6.33322 5.99997L12.0905 2.15997C12.178 2.10174 12.2761 2.06131 12.3792 2.04099C12.4822 2.02066 12.5883 2.02085 12.6913 2.04152C12.7944 2.0622 12.8923 2.10297 12.9795 2.16149C13.0668 2.22002 13.1417 2.29517 13.1999 2.38263L13.1985 2.38397Z",
        fill: "#775B3E"
    })], -1)),
    sS = [oS],
    lS = Ri(() => t("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "48",
        height: "48",
        viewBox: "0 0 48 48",
        fill: "none"
    }, [t("path", {
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        d: "M14 41H34C40 41 44 38 44 31V17C44 10 40 7 34 7H14C8 7 4 10 4 17V31C4 38 8 41 14 41ZM19.3181 24.164C20.6181 25.224 22.3181 25.744 23.9981 25.744C25.6781 25.744 27.3781 25.224 28.6581 24.164L34.9181 19.164C35.5781 18.664 35.6781 17.704 35.1581 17.064C34.6581 16.404 33.6981 16.304 33.0581 16.824L26.7981 21.824C25.2781 23.044 22.6981 23.044 21.1781 21.824L14.9181 16.824C14.6062 16.5974 14.2189 16.5 13.8369 16.5521C13.4549 16.6042 13.1078 16.8017 12.8679 17.1035C12.628 17.4053 12.5139 17.788 12.5493 18.1719C12.5848 18.5558 12.767 18.9112 13.0581 19.164L19.3181 24.164Z",
        fill: "#292929"
    })], -1)),
    cS = [lS],
    rS = {
        class: "promptHeader"
    },
    uS = ["innerHTML"],
    dS = {
        class: "Laundry-Con"
    },
    pS = {
        class: "Laundry-Con_tip"
    },
    gS = {
        class: "Landty-Con-tips"
    },
    mS = W({
        __name: "blackGoldHome",
        setup(l) {
            const {
                t: i
            } = pt(), o = gt(), u = qa(), {
                setLoading: m
            } = Xe(), g = U(() => ne().getProjectName), {
                closeLaundry: d,
                closePrompt: c,
                store: p,
                promptContent: r
            } = _i();

            function _() {
                o.push({
                    name: "CustomerService"
                })
            }
            const {
                onDown: b,
                isAppDownload: y,
                isAppDownloadIcon: v,
                showChanglong: $,
                projectIcon: T,
                getMessagesData: C,
                showPWA: h
            } = jt(), k = U(() => ({}).VITE_SITE || "Game");
            m(!1);
            const w = () => {
                d(), o.push({
                    name: "SuperJackpot"
                })
            };
            async function L() {
                u.resetData(!1, !0)
            }
            const z = le();
            return ht(() => {
                C(), m(!1)
            }), (I, x) => {
                const R = V("NavBar"),
                    O = V("van-dialog");
                return n(), a("div", Xx, [N(R, null, {
                    left: D(() => [t("div", Jx, [t("img", {
                        src: s(T),
                        alt: ""
                    }, null, 8, Qx)]), t("div", Yx, [N(ja), t("span", Zx, e(g.value || k.value), 1)])]),
                    right: D(() => [t("div", tS, [s(y) ? (n(), a("div", {
                        key: 0,
                        class: "btn",
                        onClick: x[0] || (x[0] = (...P) => s(b) && s(b)(...P))
                    }, [eS, t("span", null, e(s(i)("downloadAPP")), 1)])) : S("", !0), t("div", {
                        class: "btn",
                        onClick: _
                    }, [iS, t("span", null, e(s(i)("customerServiceTitle")), 1)])])]),
                    _: 1
                }), N($i), N(Fe, {
                    key: "home"
                }), s(z).token ? (n(), a("div", nS, [aS, t("span", null, e(s(z).getUserInfo.nickName) + "-", 1), t("span", null, e(s(xt)(s(u).getAmount)), 1), t("span", {
                    onClick: L,
                    class: "balance-refresh"
                }, sS), t("span", {
                    class: "balance-msg",
                    onClick: x[1] || (x[1] = P => s(o).push({
                        name: "Messages"
                    }))
                }, cS)])) : S("", !0), N(ro), N(Ji), N(Qi), s($) ? (n(), Q(Qe, {
                    key: 1
                })) : S("", !0), s(h) && s(v) ? (n(), Q(Ci, {
                    key: 2
                })) : S("", !0), N(Ti), N(O, {
                    show: s(p).prompt,
                    "onUpdate:show": x[2] || (x[2] = P => s(p).prompt = P),
                    "confirm-button-text": s(i)("confirm"),
                    onConfirm: s(c)
                }, {
                    default: D(() => [t("div", rS, e(s(i)("prompt")), 1), t("div", {
                        class: "promptContent",
                        innerHTML: s(r)
                    }, null, 8, uS)]),
                    _: 1
                }, 8, ["show", "confirm-button-text", "onConfirm"]), N(yi, {
                    show: s(p).laundry,
                    "onUpdate:show": x[3] || (x[3] = P => s(p).laundry = P),
                    onConfirm: w,
                    "show-cancel-btn": !1,
                    confirmText: "OK",
                    title: s(i)("congratulations")
                }, {
                    content: D(() => [t("div", dS, [t("div", pS, e(s(i)("getSuper")), 1), t("div", gS, e(s(i)("getRewards")), 1)])]),
                    _: 1
                }, 8, ["show", "title"])])
            }
        }
    });
const bS = H(mS, [
        ["__scopeId", "data-v-353d66ae"]
    ]),
    lP = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: bS
    }, Symbol.toStringTag, {
        value: "Module"
    }));
const _S = {},
    vS = {
        class: "point point-flicker"
    };

function hS(l, i) {
    return n(), a("div", vS)
}
const Mn = H(_S, [
        ["render", hS],
        ["__scopeId", "data-v-d6fe61e8"]
    ]),
    kS = {
        key: 0,
        class: "platform"
    },
    fS = {
        class: "title"
    },
    yS = {
        class: "list"
    },
    $S = ["onClick"],
    TS = ["src", "data-img"],
    CS = {
        class: "title"
    },
    wS = {
        key: 0,
        class: "title"
    },
    LS = {
        class: "list"
    },
    NS = ["onClick"],
    IS = {
        class: "item"
    },
    zS = ["src", "data-img"],
    xS = {
        key: 0,
        class: "win-odds"
    },
    SS = W({
        __name: "HotGameItem",
        props: {
            platformList: {},
            clicksTopList: {},
            isAll: {
                type: Boolean
            }
        },
        emits: ["onItemClick"],
        setup(l, {
            emit: i
        }) {
            const o = be(() => _e(() => import("./noticeBarHot-ab6af50b.js"), ["assets/js/noticeBarHot-ab6af50b.js", "assets/js/page-activity-8d7959ff.js", "assets/js/modules-fbc96342.js", "assets/css/modules-66401e0a.css", "assets/js/native/index-08561a08.js", "assets/js/en-bab51ca4.js", "assets/js/rus-ecb14220.js", "assets/js/vi-82b0febd.js", "assets/js/id-16b6cb52.js", "assets/js/hd-c5b1d7e8.js", "assets/js/tha-330057b2.js", "assets/js/md-e8a5e3b0.js", "assets/js/bra-6692a9a5.js", "assets/js/my-32fb9d60.js", "assets/js/bdt-d8f19d0c.js", "assets/js/zh-7d334abd.js", "assets/js/pak-cdc12211.js", "assets/js/ar-1c9ff85b.js", "assets/css/page-activity-9df3b495.css"])),
                u = ne(),
                m = g => {
                    i("onItemClick", g)
                };
            return (g, d) => (n(), a("div", {
                class: M(["hot_container", {
                    hot_all: g.isAll
                }])
            }, [g.platformList.length > 0 ? (n(), a("div", kS, [t("div", fS, [t("span", null, e(g.$t("platRecom")), 1)]), t("div", yS, [(n(!0), a(G, null, B(g.platformList, c => (n(), a("div", {
                class: "item",
                key: c.vendorId,
                onClick: p => m(c)
            }, [t("img", {
                src: c.imgUrl,
                alt: "",
                "data-img": s(ut)("images", "avatar")
            }, null, 8, TS)], 8, $S))), 128))])])) : S("", !0), t("div", CS, e(g.$t("hot")), 1), g.platformList.length > 0 ? (n(), a("div", {
                key: 1,
                class: M(["popular", {
                    pupularAll: g.isAll
                }])
            }, [g.isAll ? S("", !0) : (n(), a("div", wS, [N(s(o), {
                class: "hotGames"
            }), t("span", null, e(g.$t("hot")), 1)])), t("div", LS, [(n(!0), a(G, null, B(g.clicksTopList, c => (n(), a("div", {
                key: c.vendorId,
                onClick: p => m(c)
            }, [t("div", IS, [t("img", {
                src: c.imgUrl,
                alt: "",
                "data-img": s(ut)("images", "avatar")
            }, null, 8, zS)]), s(u).isShowHotGameWinOdds ? (n(), a("div", xS, [t("span", null, e(g.$t("winOdds")), 1), t("span", null, e(c.winOdds) + "%", 1), t("div", {
                class: "win-p",
                style: Jt({
                    width: `${Math.min(c.winOdds,100)}%`
                })
            }, null, 4)])) : S("", !0)], 8, NS))), 128))])], 2)) : S("", !0)], 2))
        }
    });
const RS = H(SS, [
        ["__scopeId", "data-v-eddc69d8"]
    ]),
    GS = ["onClick"],
    MS = W({
        __name: "OnlineGamesItem",
        props: {
            gameData: {},
            isAll: {
                type: Boolean
            }
        },
        emits: ["onItemClick"],
        setup(l, {
            emit: i
        }) {
            const o = l,
                u = U(() => o.isAll ? o.gameData.gameList : o.gameData.gameList.length > 8 ? o.gameData.gameList.slice(0, 8) : o.gameData.gameList),
                m = g => {
                    i("onItemClick", g)
                };
            return ht(() => {}), (g, d) => {
                const c = zt("lazy");
                return n(), a("div", {
                    class: M(["minGame_container", {
                        all_game: g.isAll
                    }])
                }, [(n(!0), a(G, null, B(u.value, p => (n(), a("div", {
                    class: "onlineGamesItem",
                    key: p.gameID,
                    onClick: r => m(p)
                }, [et((n(), a("img", {
                    class: M(g.gameData.gameType === "fish" ? "fish_img" : "min_game_img"),
                    key: p.gameID
                }, null, 2)), [
                    [c, p.img]
                ])], 8, GS))), 128))], 2)
            }
        }
    });
const BS = H(MS, [
        ["__scopeId", "data-v-43798c0a"]
    ]),
    DS = ["onClick"],
    PS = W({
        __name: "LotterySlotItem",
        props: {
            gameData: {},
            isAll: {
                type: Boolean
            }
        },
        setup(l) {
            const {
                t: i
            } = pt(), o = gt(), u = c => {
                if (c) {
                    let p = c;
                    switch (p) {
                        case "Trx Win Go":
                            p = "Trx Win";
                            break;
                        case "FXOSO":
                            p = i("FXOSO");
                        default:
                            p = p
                    }
                    return p
                }
                return ""
            }, m = c => {
                if (c) {
                    let p = [];
                    switch (c) {
                        case "Win Go":
                        case "Trx Win Go":
                            p = [i("lotteryHintStr1"), i("lotteryHintStr2")];
                            break;
                        case "5D":
                        case "K3":
                            p = [i("lotteryHintStr3"), i("lotteryHintStr4")];
                            break;
                        case "XOSO":
                        case "FXOSO":
                            p = [i("lotteryHintStr5"), i("lotteryHintStr6")];
                            break;
                        case "Bingo18":
                            p = [i("lotteryHintStr5"), i("lotteryHintStr6")];
                            break;
                        case "4D":
                            p = [i("lotteryHintStr7"), i("lotteryHintStr6")];
                            break;
                        default:
                            p = []
                    }
                    return p
                }
                return ""
            }, g = [{
                value: 1,
                path: "WinGo"
            }, {
                value: 3,
                path: "5D"
            }, {
                value: 2,
                path: "K3"
            }, {
                value: 4,
                path: "WinTrx"
            }, {
                value: 5,
                path: "XoSo"
            }, {
                value: 6,
                path: "XoSo"
            }, {
                value: 7,
                path: "Binguo"
            }, {
                value: 8,
                path: "4D"
            }], d = c => {
                o.push({
                    name: "AllLotteryGames-" + g[g.findIndex(p => p.value === c.id)].path,
                    query: {
                        id: c.id
                    }
                })
            };
            return (c, p) => {
                const r = zt("lazy");
                return n(), a("div", {
                    class: M(["lottery_container", {
                        all_lottery: c.isAll
                    }])
                }, [(n(!0), a(G, null, B(c.gameData.gameList, _ => (n(), a("div", {
                    class: "lotterySlotItem",
                    key: _.id,
                    onClick: b => d(_)
                }, [et(t("img", null, null, 512), [
                    [r, _.categoryImg]
                ]), t("span", null, e(u(_.categoryCode)), 1), t("h4", null, [t("div", null, e(m(_.categoryCode)[0]), 1), t("div", null, e(m(_.categoryCode)[1]), 1)])], 8, DS))), 128))], 2)
            }
        }
    });
const AS = H(PS, [
        ["__scopeId", "data-v-19ec5c42"]
    ]),
    OS = {
        class: "lotterySlotItem__container"
    },
    WS = {
        class: "title"
    },
    qS = {
        class: "tit"
    },
    ES = {
        class: "desc"
    },
    HS = {
        class: "game_img"
    },
    FS = W({
        __name: "OtherGameItem",
        props: {
            info: {},
            isAll: {
                type: Boolean
            },
            gameType: {}
        },
        setup(l) {
            const i = l,
                {
                    t: o
                } = pt(),
                u = {
                    sport: o("sport"),
                    video: o("live"),
                    chess: o("chess")
                },
                m = U(() => i.info.slotsName.indexOf("_") === -1 ? i.info.slotsName.toUpperCase() : i.info.slotsName.split("_")[0].toUpperCase());
            return (g, d) => {
                const c = zt("lazy");
                return n(), a("div", OS, [t("div", WS, [g.info.slotsTypeID ? (n(), Q(gl, {
                    key: 0,
                    name: m.value
                }, null, 8, ["name"])) : S("", !0), t("div", qS, e(u[g.gameType]), 1), t("div", ES, e(s(sl)(s(ll).gameAllName, g.info.slotsTypeID)), 1)]), et(t("img", HS, null, 512), [
                    [c, g.info.vendorImg || g.info.categoryImg]
                ])])
            }
        }
    });
const VS = H(FS, [
        ["__scopeId", "data-v-a1941651"]
    ]),
    jS = ["onClick"],
    US = {
        class: "gameImg"
    },
    KS = W({
        __name: "ElectronicItem",
        props: {
            gameData: {
                type: Object,
                default: () => ({})
            },
            isAll: {
                type: Boolean,
                default: !1
            }
        },
        emits: ["onItemClick"],
        setup(l, {
            emit: i
        }) {
            const o = l,
                u = U(() => o.isAll ? o.gameData.gameList : o.gameData.gameList.slice(0, 6)),
                m = g => {
                    i("onItemClick", g, o.gameData.gameType)
                };
            return ht(() => {}), (g, d) => {
                const c = zt("lazy");
                return n(), a("div", {
                    class: M(["onlineGamesItem__container", {
                        allGame: l.isAll
                    }])
                }, [(n(!0), a(G, null, B(u.value, p => (n(), a("div", {
                    key: p.slotsTypeID,
                    class: "item",
                    onClick: r => m(p)
                }, [et(t("img", US, null, 512), [
                    [c, p.vendorImg]
                ])], 8, jS))), 128))], 2)
            }
        }
    });
const XS = H(KS, [
        ["__scopeId", "data-v-4f65bec2"]
    ]),
    JS = {
        alt: ""
    },
    QS = W({
        __name: "ElectronicWinRate",
        setup(l) {
            const i = ne(),
                o = U(() => i.winRate.electronicWinRateImgUrl || ""),
                u = U(() => !!(i.winRate.isShowElectronicWinRateExternalLink && o.value)),
                m = () => {
                    i.winRate.electronicWinRateExternalLink && window.open(i.winRate.electronicWinRateExternalLink)
                };
            return (g, d) => {
                const c = zt("lazy");
                return u.value ? (n(), a("div", {
                    key: 0,
                    class: "WinRate",
                    onClick: m
                }, [et(t("img", JS, null, 512), [
                    [c, o.value]
                ])])) : S("", !0)
            }
        }
    });
const YS = H(QS, [
        ["__scopeId", "data-v-bd3f10ed"]
    ]),
    ZS = ["src"],
    tR = W({
        __name: "GameListGrid",
        props: {
            currentGame: {
                type: Object,
                default: () => {}
            },
            isAll: {
                type: Boolean,
                default: !1
            }
        },
        setup(l) {
            const i = l,
                o = gt(),
                {
                    onItemClick: u,
                    homeState: m
                } = jt(),
                g = U(() => m.allGameList),
                d = U(() => i.currentGame.gameType === "popular" ? 1 : ["sport", "chess", "video"].includes(i.currentGame.gameType) ? 2 : i.currentGame.gameType === "lottery" ? 3 : i.currentGame.gameType === "slot" ? 4 : i.currentGame.gameType === "flash" || i.currentGame.gameType === "fish" ? 5 : -1),
                c = () => {
                    sessionStorage.setItem("slotGamesList", JSON.stringify(i.currentGame.gameList)), sessionStorage.setItem("gameType", JSON.stringify(i.currentGame)), sessionStorage.setItem("clickedItem", JSON.stringify(i.currentGame.gameList[0])), o.push({
                        name: "AllGames",
                        query: {
                            type: i.currentGame.gameType
                        }
                    })
                },
                p = U(() => i.currentGame.gameList.length < 1 ? [] : i.currentGame.gameList[1].length > 9 && !i.isAll ? i.currentGame.gameList[1].slice(0, 9) : i.currentGame.gameList[1]),
                r = async (_, b) => {
                    ["chess", "slot"].includes(b) ? (sessionStorage.setItem("slotGamesList", JSON.stringify(g.value[i.currentGame.gameType])), sessionStorage.setItem("gameType", JSON.stringify(i.currentGame.gameType)), sessionStorage.setItem("clickedItem", JSON.stringify(_)), o.push({
                        name: "AllOnlineGames"
                    })) : u(_)
                };
            return ht(() => {}), (_, b) => (n(), a("div", {
                class: M(["gameListGrid__container", {
                    all_container: l.isAll
                }])
            }, [d.value === 1 ? (n(), Q(RS, {
                key: 0,
                platformList: l.currentGame.gameList[0],
                clicksTopList: p.value,
                onOnItemClick: s(u),
                isAll: l.isAll
            }, null, 8, ["platformList", "clicksTopList", "onOnItemClick", "isAll"])) : S("", !0), d.value === 2 ? (n(), a("div", {
                key: 1,
                class: M(["otherGame", {
                    all_other: l.isAll
                }])
            }, [(n(!0), a(G, null, B(l.currentGame.gameList, (y, v) => (n(), Q(VS, {
                key: v,
                info: y,
                gameType: l.currentGame.gameType,
                isAll: l.isAll,
                onClick: $ => r(y, l.currentGame.gameType)
            }, null, 8, ["info", "gameType", "isAll", "onClick"]))), 128))], 2)) : S("", !0), d.value === 4 ? (n(), Q(YS, {
                key: 2
            })) : S("", !0), d.value === 4 ? (n(), Q(XS, {
                key: 3,
                gameData: l.currentGame,
                isAll: l.isAll,
                onOnItemClick: r
            }, null, 8, ["gameData", "isAll"])) : S("", !0), d.value === 3 ? (n(), Q(AS, {
                key: 4,
                gameData: l.currentGame,
                isAll: l.isAll
            }, null, 8, ["gameData", "isAll"])) : S("", !0), d.value === 5 ? (n(), Q(BS, {
                key: 5,
                gameData: l.currentGame,
                isAll: l.isAll,
                onOnItemClick: s(u)
            }, null, 8, ["gameData", "isAll", "onOnItemClick"])) : S("", !0), l.isAll ? S("", !0) : (n(), a("button", {
                key: 6,
                onClick: c,
                class: "look_all"
            }, [t("img", {
                src: s(ut)("home", "all"),
                alt: ""
            }, null, 8, ZS), E(" " + e(_.$t("viewAll")), 1)]))], 2))
        }
    });
const eR = H(tR, [
        ["__scopeId", "data-v-5b2dcc8f"]
    ]),
    iR = {
        class: "gamesList__container"
    },
    nR = {
        key: 0,
        class: "gamesList__container-title"
    },
    aR = W({
        __name: "GameList",
        props: {
            gameData: {}
        },
        setup(l) {
            return (i, o) => (n(), a("div", iR, [i.gameData.gameList.length > 0 && i.gameData.isShow && i.gameData.gameType !== "popular" ? (n(), a("div", nR, e(i.gameData.title), 1)) : S("", !0), i.gameData.isShow ? (n(), Q(eR, {
                key: 1,
                currentGame: i.gameData,
                isAll: !0
            }, null, 8, ["currentGame"])) : S("", !0)]))
        }
    });
const oR = H(aR, [
        ["__scopeId", "data-v-9dade0cb"]
    ]),
    sR = {
        class: "game_menu"
    },
    lR = {
        class: "menu_box1"
    },
    cR = {
        alt: ""
    },
    rR = {
        alt: ""
    },
    uR = {
        alt: ""
    },
    dR = {
        class: "menu_box2"
    },
    pR = {
        alt: ""
    },
    gR = {
        alt: ""
    },
    mR = {
        alt: ""
    },
    bR = {
        class: "menu_box3"
    },
    _R = {
        alt: ""
    },
    vR = {
        alt: ""
    },
    hR = W({
        __name: "index",
        props: {
            allGameList: {}
        },
        emits: ["clickMenu"],
        setup(l, {
            expose: i,
            emit: o
        }) {
            const u = l,
                m = U(() => {
                    let d = {};
                    return (u.allGameList || []).forEach(p => {
                        d[p.gameType] = p
                    }), d
                }),
                g = d => {
                    o("clickMenu", {
                        type: d,
                        gameMenu: m.value[d]
                    })
                };
            return i({
                handleClickMenu: g
            }), (d, c) => {
                var r, _, b, y, v, $, T, C;
                const p = zt("lazy");
                return n(), a("div", sR, [t("div", lR, [t("div", {
                    onClick: c[0] || (c[0] = h => g("popular"))
                }, [et(t("img", cR, null, 512), [
                    [p, (r = m.value.popular) == null ? void 0 : r.img]
                ]), t("span", null, e(d.$t("hot")), 1)]), t("div", {
                    onClick: c[1] || (c[1] = h => g("lottery"))
                }, [et(t("img", rR, null, 512), [
                    [p, (_ = m.value.lottery) == null ? void 0 : _.img]
                ]), t("span", null, e(d.$t("lottery")), 1)]), t("div", {
                    onClick: c[2] || (c[2] = h => g("lottery"))
                }, [et(t("img", uR, null, 512), [
                    [p, (b = m.value.slot) == null ? void 0 : b.img]
                ]), t("span", null, e(d.$t("electronic")), 1)])]), t("div", dR, [t("div", {
                    onClick: c[3] || (c[3] = h => g("lottery"))
                }, [et(t("img", pR, null, 512), [
                    [p, (y = m.value.sport) == null ? void 0 : y.img]
                ]), t("span", null, e(d.$t("sport")), 1)]), t("div", {
                    onClick: c[4] || (c[4] = h => g("lottery")),
                    class: "live_menu"
                }, [et(t("img", gR, null, 512), [
                    [p, (v = m.value.video) == null ? void 0 : v.img]
                ]), t("span", null, e(d.$t("live")), 1)]), t("div", {
                    onClick: c[5] || (c[5] = h => g("lottery"))
                }, [et(t("img", mR, null, 512), [
                    [p, ($ = m.value.chess) == null ? void 0 : $.img]
                ]), t("span", null, e(d.$t("chess")), 1)])]), t("div", bR, [t("div", {
                    onClick: c[6] || (c[6] = h => g("lottery"))
                }, [et(t("img", _R, null, 512), [
                    [p, (T = m.value.fish) == null ? void 0 : T.img]
                ]), t("span", null, e(d.$t("fishing")), 1)]), t("div", {
                    onClick: c[7] || (c[7] = h => g("lottery"))
                }, [et(t("img", vR, null, 512), [
                    [p, (C = m.value.flash) == null ? void 0 : C.img]
                ]), t("span", null, e(d.$t("miniGame")), 1)])])])
            }
        }
    });
const kR = H(hR, [
        ["__scopeId", "data-v-745833ba"]
    ]),
    Bn = l => (wt("data-v-a14c3598"), l = l(), Lt(), l),
    fR = {
        class: "content"
    },
    yR = ["src"],
    $R = {
        class: "content__right"
    },
    TR = Bn(() => t("path", {
        d: "M6 24.0083V42H42V24",
        stroke: "#D9AC4F",
        "stroke-width": "3",
        "stroke-linecap": "round",
        "stroke-linejoin": "round"
    }, null, -1)),
    CR = Bn(() => t("path", {
        d: "M33 23L24 32L15 23",
        stroke: "#D9AC4F",
        "stroke-width": "3",
        "stroke-linecap": "round",
        "stroke-linejoin": "round"
    }, null, -1)),
    wR = Bn(() => t("path", {
        d: "M23.9917 6V32",
        stroke: "#D9AC4F",
        "stroke-width": "3",
        "stroke-linecap": "round",
        "stroke-linejoin": "round"
    }, null, -1)),
    LR = [TR, CR, wR],
    NR = {
        class: "promptHeader"
    },
    IR = ["innerHTML"],
    zR = {
        class: "Laundry-Con"
    },
    xR = {
        class: "Laundry-Con_tip"
    },
    SR = {
        class: "Landty-Con-tips"
    },
    RR = W({
        __name: "blueHome",
        setup(l) {
            const {
                t: i
            } = pt(), o = gt(), {
                setLoading: u
            } = Xe(), {
                closeLaundry: m,
                closePrompt: g,
                store: d,
                promptContent: c
            } = _i();
            u(!0);
            const p = f(""),
                r = f(),
                _ = Et([]),
                b = be(() => _e(() => import("./messageIcon-0e70db7e.js"), ["assets/js/messageIcon-0e70db7e.js", "assets/js/page-activity-8d7959ff.js", "assets/js/modules-fbc96342.js", "assets/css/modules-66401e0a.css", "assets/js/native/index-08561a08.js", "assets/js/en-bab51ca4.js", "assets/js/rus-ecb14220.js", "assets/js/vi-82b0febd.js", "assets/js/id-16b6cb52.js", "assets/js/hd-c5b1d7e8.js", "assets/js/tha-330057b2.js", "assets/js/md-e8a5e3b0.js", "assets/js/bra-6692a9a5.js", "assets/js/my-32fb9d60.js", "assets/js/bdt-d8f19d0c.js", "assets/js/zh-7d334abd.js", "assets/js/pak-cdc12211.js", "assets/js/ar-1c9ff85b.js", "assets/css/page-activity-9df3b495.css"])),
                y = f();

            function v() {
                o.push({
                    name: "Messages"
                })
            }
            const {
                onDown: $,
                isAppDownload: T,
                isAppDownloadIcon: C,
                showChanglong: h,
                projectIcon: k,
                isRead: w,
                getMessagesData: L,
                showPWA: z,
                getGameType: I,
                homeState: x,
                getAllGame: R
            } = jt(), O = () => {
                m(), o.push({
                    name: "SuperJackpot"
                })
            }, P = ct => {
                let ot = document.getElementById("banner"),
                    J = document.getElementById("noticeBar"),
                    Z = ot == null ? void 0 : ot.offsetHeight,
                    lt = J == null ? void 0 : J.offsetHeight;
                K(Z + lt + 20), sessionStorage.setItem("clickMenu", ct.type), y.value = _.find(Rt => Rt.gameType === ct.type)
            };

            function K(ct) {
                window.scrollTo({
                    top: ct,
                    behavior: "smooth"
                })
            }
            const X = async () => {
                await at(), await R();
                const ct = xi(x.allGameList);
                _.forEach(J => {
                    J.gameType !== "bigaward" && (J.gameType === "popular" ? J.gameList = [ct[J.gameType].platformList, ct[J.gameType].clicksTopList] : J.gameList = ct[J.gameType], J.gameList.length < 1 && (J.isShow = !1))
                });
                let ot = sessionStorage.getItem("clickMenu") || "";
                ot ? (p.value = ot, y.value = _.find(J => J.gameType === ot)) : (p.value = _[1].gameType, y.value = _[1]), sessionStorage.setItem("allGameList", JSON.stringify(_))
            }, at = async () => {
                await I(), x.gameTypeList.forEach(ct => {
                    ct.categoryCode !== "BigAward" && _.push({
                        isAll: !1,
                        img: ct.categoryImg,
                        isShow: ct.state === 1,
                        gameList: [],
                        gameType: ct.categoryCode.toLocaleLowerCase(),
                        title: i("code" + ct.typeNameCode)
                    })
                })
            };
            return X(), L(), ht(() => {
                u(!1)
            }), (ct, ot) => {
                const J = V("NavBar"),
                    Z = V("van-dialog");
                return n(), a("div", fR, [N(J, {
                    backgroundColor: "#292929"
                }, {
                    left: D(() => [t("img", {
                        src: s(k),
                        alt: ""
                    }, null, 8, yR)]),
                    right: D(() => [t("div", $R, [t("div", {
                        class: "message",
                        onClick: v
                    }, [(n(), Q(me(s(b)))), et(N(Mn, {
                        class: "point"
                    }, null, 512), [
                        [Vt, !s(w)]
                    ])]), s(T) ? (n(), a("svg", {
                        key: 0,
                        onClick: ot[0] || (ot[0] = se((...lt) => s($) && s($)(...lt), ["stop"])),
                        name: "down",
                        class: "down",
                        xmlns: "http://www.w3.org/2000/svg",
                        width: "48",
                        height: "48",
                        viewBox: "0 0 48 48",
                        fill: "none"
                    }, LR)) : S("", !0)])]),
                    _: 1
                }), N($i), N(Fe, {
                    key: "home",
                    color: "blue"
                }), N(kR, {
                    onClickMenu: P,
                    ref_key: "gameMenuRef",
                    ref: r,
                    allGameList: _
                }, null, 8, ["allGameList"]), y.value ? (n(), Q(oR, {
                    key: 0,
                    gameData: y.value
                }, null, 8, ["gameData"])) : S("", !0), N(Ji), N(Qi), s(h) ? (n(), Q(Qe, {
                    key: 1
                })) : S("", !0), s(z) && s(C) ? (n(), Q(Ci, {
                    key: 2
                })) : S("", !0), N(Ti), N(Z, {
                    show: s(d).prompt,
                    "onUpdate:show": ot[1] || (ot[1] = lt => s(d).prompt = lt),
                    "confirm-button-text": s(i)("confirm"),
                    onConfirm: s(g)
                }, {
                    default: D(() => [t("div", NR, e(s(i)("prompt")), 1), t("div", {
                        class: "promptContent",
                        innerHTML: s(c)
                    }, null, 8, IR)]),
                    _: 1
                }, 8, ["show", "confirm-button-text", "onConfirm"]), N(yi, {
                    show: s(d).laundry,
                    "onUpdate:show": ot[2] || (ot[2] = lt => s(d).laundry = lt),
                    onConfirm: O,
                    "show-cancel-btn": !1,
                    confirmText: "OK",
                    title: s(i)("congratulations")
                }, {
                    content: D(() => [t("div", zR, [t("div", xR, e(s(i)("getSuper")), 1), t("div", SR, e(s(i)("getRewards")), 1)])]),
                    _: 1
                }, 8, ["show", "title"])])
            }
        }
    });
const GR = H(RR, [
        ["__scopeId", "data-v-a14c3598"]
    ]),
    cP = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: GR
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    Gi = l => (wt("data-v-9dfff170"), l = l(), Lt(), l),
    MR = {
        id: "home",
        class: "content"
    },
    BR = {
        class: "logo"
    },
    DR = ["src"],
    PR = {
        class: "languages"
    },
    AR = {
        class: "languages-text"
    },
    OR = {
        class: "content__right"
    },
    WR = Gi(() => t("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "60",
        height: "60",
        viewBox: "0 0 60 60",
        fill: "none"
    }, [t("g", {
        "clip-path": "url(#clip0_243_123505)"
    }, [t("circle", {
        cx: "30",
        cy: "30",
        r: "28.5",
        stroke: "#3F3F3F",
        "stroke-width": "3"
    }), t("path", {
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        d: "M29.9999 36.25L16.25 22.5543H25.4166V10H34.5833V22.5543H43.75L29.9999 36.25Z",
        fill: "#3F3F3F",
        stroke: "#3F3F3F",
        "stroke-width": "2",
        "stroke-linecap": "round",
        "stroke-linejoin": "round"
    }), t("path", {
        d: "M50 41H10",
        stroke: "#3F3F3F",
        "stroke-width": "3",
        "stroke-linecap": "round"
    }), t("path", {
        d: "M41.25 48.5H18.75",
        stroke: "#3F3F3F",
        "stroke-width": "3",
        "stroke-linecap": "round"
    })]), t("defs", null, [t("clipPath", {
        id: "clip0_243_123505"
    }, [t("rect", {
        width: "60",
        height: "60",
        fill: "white"
    })])])], -1)),
    qR = Gi(() => t("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "60",
        height: "60",
        viewBox: "0 0 60 60",
        fill: "none"
    }, [t("path", {
        d: "M54.3525 27.2813C54.1013 13.8694 43.7044 3.03564 30.9375 3.03564H29.0625C16.2956 3.03564 5.89875 13.8694 5.6475 27.2794C3.405 28.5788 1.875 30.9769 1.875 33.75V37.5C1.875 41.6363 5.23875 45 9.375 45C13.5113 45 16.875 41.6363 16.875 37.5V33.75C16.8721 31.7748 16.0906 29.8803 14.6998 28.4777C13.3091 27.075 11.4214 26.2773 9.44625 26.2575C10.1794 15.3919 18.6863 6.78564 29.0625 6.78564H30.9375C41.3156 6.78564 49.8206 15.3919 50.5537 26.2575C48.5786 26.2773 46.6909 27.075 45.3002 28.4777C43.9094 29.8803 43.1279 31.7748 43.125 33.75V37.5C43.125 40.8863 45.3938 43.7213 48.48 44.6494C45.6947 48.3157 41.7173 50.8953 37.2337 51.9431C36.9242 51.0148 36.3309 50.2072 35.5376 49.6343C34.7443 49.0613 33.7911 48.752 32.8125 48.75C31.5693 48.75 30.377 49.2439 29.4979 50.123C28.6189 51.002 28.125 52.1943 28.125 53.4375C28.125 54.6807 28.6189 55.873 29.4979 56.7521C30.377 57.6312 31.5693 58.125 32.8125 58.125C33.611 58.124 34.3959 57.9181 35.0922 57.5271C35.7884 57.1362 36.3728 56.5732 36.7894 55.8919C40.1684 55.3008 43.3778 53.9795 46.1935 52.0202C49.0093 50.061 51.3637 47.511 53.0925 44.5481C56.0137 43.5244 58.125 40.7681 58.125 37.5V33.75C58.125 30.9769 56.595 28.5788 54.3525 27.2813ZM13.125 33.75V37.5C13.125 39.5681 11.4431 41.25 9.375 41.25C7.30687 41.25 5.625 39.5681 5.625 37.5V33.75C5.625 31.6819 7.30687 30 9.375 30C11.4431 30 13.125 31.6819 13.125 33.75ZM54.375 37.5C54.375 39.51 52.7812 41.1431 50.7938 41.2331L50.6475 41.1638C50.6344 41.1938 50.6138 41.2181 50.6006 41.2463C49.6109 41.2398 48.6639 40.8424 47.966 40.1407C47.2681 39.4389 46.876 38.4897 46.875 37.5V33.75C46.875 31.6819 48.5569 30 50.625 30C52.6931 30 54.375 31.6819 54.375 33.75V37.5Z",
        fill: "#3F3F3F"
    })], -1)),
    ER = {
        key: 0,
        class: "balance"
    },
    HR = Gi(() => t("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "40",
        height: "40",
        viewBox: "0 0 40 40",
        fill: "none"
    }, [t("path", {
        d: "M20 19.8182C15.0509 19.8182 11.04 15.8292 11.04 10.9071C11.04 5.98507 15.0509 2 20 2C24.9491 2 28.96 5.98903 28.96 10.9071C28.96 15.8252 24.9491 19.8182 20 19.8182Z",
        fill: "#292929"
    }), t("path", {
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        d: "M20.3788 27.0402C20.1757 27.2624 19.8243 27.2624 19.6212 27.0402L14.3176 21.2395C8.47124 22.1545 4 27.1864 4 33.2567C4 35.3241 5.68552 37 7.76471 37H32.2353C34.3145 37 36 35.3241 36 33.2567C36 27.1864 31.5288 22.1545 25.6824 21.2395L20.3788 27.0402Z",
        fill: "#292929"
    })], -1)),
    FR = Gi(() => t("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "32",
        height: "32",
        viewBox: "0 0 32 32",
        fill: "none"
    }, [t("path", {
        d: "M4.31322 9.3733C4.56545 9.37359 4.81243 9.44542 5.02548 9.58046C5.23852 9.71549 5.4089 9.90818 5.51681 10.1362C5.62473 10.3642 5.66577 10.6181 5.63516 10.8684C5.60455 11.1188 5.50355 11.3554 5.34388 11.5506L5.34922 11.552C4.55792 12.7353 4.09671 14.1084 4.01317 15.5294C3.92963 16.9505 4.22679 18.3682 4.87399 19.6361C5.52119 20.904 6.49499 21.9762 7.69489 22.7422C8.8948 23.5081 10.2773 23.94 11.6999 23.9933L11.9999 24L18.6665 23.9986V21.4946C18.6664 21.3766 18.6924 21.2601 18.7425 21.1533L18.8012 21.0506C18.919 20.8742 19.102 20.7518 19.3101 20.7103C19.5181 20.6688 19.7341 20.7116 19.9106 20.8293L25.6666 24.6666C25.776 24.7397 25.8657 24.8387 25.9278 24.9547C25.9899 25.0708 26.0223 25.2004 26.0223 25.332C26.0223 25.4636 25.9899 25.5931 25.9278 25.7092C25.8657 25.8253 25.776 25.9242 25.6666 25.9973L19.9092 29.8373C19.7887 29.9177 19.6485 29.9639 19.5038 29.9709C19.359 29.9779 19.2151 29.9454 19.0873 29.8769C18.9596 29.8085 18.8529 29.7066 18.7785 29.5822C18.7042 29.4578 18.665 29.3156 18.6652 29.1706V26.664L11.9999 26.6666C10.055 26.6668 8.14709 26.1352 6.4825 25.1294C4.8179 24.1236 3.45999 22.6818 2.55562 20.9599C1.65126 19.2381 1.23486 17.3018 1.35147 15.3604C1.46808 13.419 2.11325 11.5465 3.21722 9.9453C3.34 9.76831 3.50384 9.6237 3.69471 9.52385C3.88558 9.42401 4.0978 9.37189 4.31322 9.37197V9.3733ZM13.1985 2.38397C13.2863 2.51541 13.3332 2.66991 13.3332 2.82797V5.3333H19.9999C21.9298 5.33301 23.8236 5.85631 25.4796 6.84745C27.1355 7.83859 28.4915 9.26042 29.4031 10.9614C30.3148 12.6625 30.7478 14.579 30.6561 16.5067C30.5644 18.4344 29.9515 20.3011 28.8826 21.908L28.8559 21.948C28.8314 21.9847 28.8065 22.0211 28.7812 22.0573C28.5306 22.3506 28.1612 22.5373 27.7479 22.5373C27.4891 22.5373 27.2358 22.462 27.0191 22.3206C26.8023 22.1791 26.6314 21.9776 26.5272 21.7407C26.423 21.5037 26.3901 21.2416 26.4323 20.9863C26.4746 20.7309 26.5902 20.4934 26.7652 20.3026L26.7519 20.292C27.5073 19.1038 27.9358 17.7372 27.994 16.3304C28.0522 14.9236 27.738 13.5263 27.0833 12.2798C26.4286 11.0333 25.4565 9.98161 24.2652 9.23107C23.0739 8.48053 21.7056 8.0577 20.2985 8.0053L19.9999 7.99997L13.3332 7.99863V10.5053C13.3334 10.6502 13.2943 10.7925 13.2199 10.9169C13.1456 11.0413 13.0388 11.1432 12.9111 11.2116C12.7834 11.2801 12.6394 11.3125 12.4947 11.3056C12.3499 11.2986 12.2098 11.2524 12.0892 11.172L6.33322 7.33063C6.22376 7.25755 6.13403 7.1586 6.07197 7.04254C6.0099 6.92648 5.97744 6.79691 5.97744 6.6653C5.97744 6.53369 6.0099 6.40411 6.07197 6.28806C6.13403 6.172 6.22376 6.07304 6.33322 5.99997L12.0905 2.15997C12.178 2.10174 12.2761 2.06131 12.3792 2.04099C12.4822 2.02066 12.5883 2.02085 12.6913 2.04152C12.7944 2.0622 12.8923 2.10297 12.9795 2.16149C13.0668 2.22002 13.1417 2.29517 13.1999 2.38263L13.1985 2.38397Z",
        fill: "#775B3E"
    })], -1)),
    VR = [FR],
    jR = Gi(() => t("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "48",
        height: "48",
        viewBox: "0 0 48 48",
        fill: "none"
    }, [t("path", {
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        d: "M14 41H34C40 41 44 38 44 31V17C44 10 40 7 34 7H14C8 7 4 10 4 17V31C4 38 8 41 14 41ZM19.3181 24.164C20.6181 25.224 22.3181 25.744 23.9981 25.744C25.6781 25.744 27.3781 25.224 28.6581 24.164L34.9181 19.164C35.5781 18.664 35.6781 17.704 35.1581 17.064C34.6581 16.404 33.6981 16.304 33.0581 16.824L26.7981 21.824C25.2781 23.044 22.6981 23.044 21.1781 21.824L14.9181 16.824C14.6062 16.5974 14.2189 16.5 13.8369 16.5521C13.4549 16.6042 13.1078 16.8017 12.8679 17.1035C12.628 17.4053 12.5139 17.788 12.5493 18.1719C12.5848 18.5558 12.767 18.9112 13.0581 19.164L19.3181 24.164Z",
        fill: "#292929"
    })], -1)),
    UR = [jR],
    KR = {
        class: "promptHeader"
    },
    XR = ["innerHTML"],
    JR = {
        class: "Laundry-Con"
    },
    QR = {
        class: "Laundry-Con_tip"
    },
    YR = {
        class: "Landty-Con-tips"
    },
    ZR = W({
        __name: "damanHome",
        setup(l) {
            const {
                t: i
            } = pt(), o = gt(), u = qa(), m = le(), {
                setLoading: g
            } = Xe(), {
                onDown: d,
                isAppDownload: c,
                isAppDownloadIcon: p,
                showChanglong: r,
                projectIcon: _,
                isRead: b,
                getMessagesData: y,
                showPWA: v
            } = jt(), {
                closeLaundry: $,
                closePrompt: T,
                store: C,
                promptContent: h
            } = _i();
            be(() => _e(() => import("./messageIcon-0e70db7e.js"), ["assets/js/messageIcon-0e70db7e.js", "assets/js/page-activity-8d7959ff.js", "assets/js/modules-fbc96342.js", "assets/css/modules-66401e0a.css", "assets/js/native/index-08561a08.js", "assets/js/en-bab51ca4.js", "assets/js/rus-ecb14220.js", "assets/js/vi-82b0febd.js", "assets/js/id-16b6cb52.js", "assets/js/hd-c5b1d7e8.js", "assets/js/tha-330057b2.js", "assets/js/md-e8a5e3b0.js", "assets/js/bra-6692a9a5.js", "assets/js/my-32fb9d60.js", "assets/js/bdt-d8f19d0c.js", "assets/js/zh-7d334abd.js", "assets/js/pak-cdc12211.js", "assets/js/ar-1c9ff85b.js", "assets/css/page-activity-9df3b495.css"]));

            function k() {
                o.push({
                    name: "CustomerService"
                })
            }
            g(!1);
            const w = () => {
                $(), o.push({
                    name: "SuperJackpot"
                })
            };
            return f(), ht(() => {
                y(), g(!1)
            }), (L, z) => {
                const I = V("NavBar"),
                    x = V("van-dialog");
                return n(), a("div", MR, [N(I, null, {
                    left: D(() => [t("div", BR, [t("img", {
                        src: s(_),
                        alt: ""
                    }, null, 8, DR)]), t("div", PR, [N(ja), t("span", AR, "Welcome to BDG " + e(L.siteName), 1)])]),
                    right: D(() => [t("div", OR, [s(c) ? (n(), a("div", {
                        key: 0,
                        class: "btn",
                        onClick: z[0] || (z[0] = (...R) => s(d) && s(d)(...R))
                    }, [WR, t("span", null, e(s(i)("downloadAPP")), 1)])) : S("", !0), t("div", {
                        class: "btn",
                        onClick: k
                    }, [qR, t("span", null, e(s(i)("customerServiceTitle")), 1)])])]),
                    _: 1
                }), N($i), N(Fe, {
                    key: "home"
                }), s(m).token ? (n(), a("div", ER, [HR, t("span", null, e(s(m).getUserInfo.nickName) + "-", 1), t("span", null, e(s(xt)(s(u).getAmount)), 1), t("span", {
                    onClick: z[1] || (z[1] = (...R) => L.onGetWallet && L.onGetWallet(...R)),
                    class: "balance-refresh"
                }, VR), t("span", {
                    class: "balance-msg",
                    onClick: z[2] || (z[2] = R => s(o).push({
                        name: "Messages"
                    }))
                }, UR)])) : S("", !0), N(ro), N(Ji), N(Qi), s(r) ? (n(), Q(Qe, {
                    key: 1
                })) : S("", !0), s(v) && s(p) ? (n(), Q(Ci, {
                    key: 2
                })) : S("", !0), N(Ti), N(x, {
                    show: s(C).prompt,
                    "onUpdate:show": z[3] || (z[3] = R => s(C).prompt = R),
                    "confirm-button-text": s(i)("confirm"),
                    onConfirm: s(T)
                }, {
                    default: D(() => [t("div", KR, e(s(i)("prompt")), 1), t("div", {
                        class: "promptContent",
                        innerHTML: s(h)
                    }, null, 8, XR)]),
                    _: 1
                }, 8, ["show", "confirm-button-text", "onConfirm"]), N(yi, {
                    show: s(C).laundry,
                    "onUpdate:show": z[4] || (z[4] = R => s(C).laundry = R),
                    onConfirm: w,
                    "show-cancel-btn": !1,
                    confirmText: "OK",
                    title: s(i)("congratulations")
                }, {
                    content: D(() => [t("div", JR, [t("div", QR, e(s(i)("getSuper")), 1), t("div", YR, e(s(i)("getRewards")), 1)])]),
                    _: 1
                }, 8, ["show", "title"])])
            }
        }
    });
const tG = H(ZR, [
        ["__scopeId", "data-v-9dfff170"]
    ]),
    rP = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: tG
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    eG = {
        key: 0,
        alt: ""
    },
    iG = W({
        __name: "index",
        props: {
            tabList: {},
            visibileAll: {
                type: Boolean,
                default: !0
            },
            currentMenu: {},
            isShowIcon: {
                type: Boolean,
                default: !0
            },
            isBg: {
                type: Boolean,
                default: !0
            }
        },
        emits: ["tabChange", "update:currentMenu"],
        setup(l, {
            expose: i,
            emit: o
        }) {
            const u = l,
                m = f(),
                g = _ => _.img.includes("http") ? _.img : ut("electronic", _.img, "png"),
                d = f(0),
                c = U(() => {
                    let _ = xi(u.tabList);
                    return _.length === 1 ? [] : _
                }),
                p = _ => {
                    let {
                        item: b,
                        index: y
                    } = _;
                    o("tabChange", {
                        item: b,
                        index: y
                    }), o("update:currentMenu", d.value)
                },
                r = U(() => u.tabList[d.value]);
            return Ot(() => u.currentMenu, _ => {
                d.value = _
            }, {
                immediate: !0
            }), i({
                currentTab: d,
                currentMenu: r,
                tabRef: m
            }), (_, b) => {
                const y = zt("lazy");
                return n(), Q(ei, {
                    list: c.value,
                    active: d.value,
                    "onUpdate:active": b[0] || (b[0] = v => d.value = v),
                    tabClassName: "tabs",
                    onOnClickTab: p,
                    activeClassName: "tab_active",
                    ref: "tabRefs",
                    tabItemClassName: "funtab_item"
                }, {
                    default: D(({
                        item: v,
                        index: $
                    }) => [t("div", {
                        class: M(["tab_item", {
                            tab_active: $ === d.value,
                            allGame: !_.isShowIcon
                        }])
                    }, [_.isShowIcon ? et((n(), a("img", eG, null, 512)), [
                        [y, g(v)]
                    ]) : S("", !0), t("span", null, e(v.title), 1)], 2)]),
                    _: 1
                }, 8, ["list", "active"])
            }
        }
    });
const nG = H(iG, [
        ["__scopeId", "data-v-a6e25d2d"]
    ]),
    aG = l => (wt("data-v-16138e48"), l = l(), Lt(), l),
    oG = {
        key: 1
    },
    sG = {
        key: 2,
        class: "win-odds"
    },
    lG = ["onClick"],
    cG = {
        key: 0,
        class: "big_prize"
    },
    rG = {
        class: "info"
    },
    uG = {
        class: "text"
    },
    dG = {
        class: "title"
    },
    pG = {
        class: "award"
    },
    gG = aG(() => t("div", null, null, -1)),
    mG = {
        class: "multiple"
    },
    bG = W({
        __name: "index",
        props: {
            type: {},
            gameItem: {},
            gameType: {},
            isWidth: {
                type: Boolean,
                default: !1
            },
            isElec: {
                type: Boolean,
                default: !1
            }
        },
        setup(l) {
            const i = l;
            vn(v => ({
                "7eb42444": c.value
            }));
            const {
                t: o
            } = pt(), {
                homeState: u,
                onItemClick: m
            } = jt(), g = ne(), d = {
                sport: o("sport"),
                video: o("live"),
                chess: o("chess")
            }, c = U(() => {
                let v = Cn() === 0;
                return i.isWidth ? (v ? 248 / 2 : 218 / 2) + "px" : "100%"
            }), p = U(() => {
                let v = i.gameItem;
                return v.imgUrl || v.img || v.vendorImg || v.categoryImg
            }), r = U(() => i.gameType === "lottery" ? `url(${i.gameItem.categoryImg})` : `url(${i.gameItem.vendorImg})`), _ = v => {
                var T, C;
                if (!le().token) {
                    Li.push({
                        name: "login"
                    });
                    return
                }
                if (i.type === "1")
                    if (!["slot"].includes(i.gameType)) m(v);
                    else {
                        if (i.isElec) {
                            m(v);
                            return
                        }
                        sessionStorage.setItem("slotGamesList", JSON.stringify((T = u.allGameList) == null ? void 0 : T.slot)), sessionStorage.setItem("gameType", JSON.stringify("slot")), sessionStorage.setItem("clickedItem", JSON.stringify(i.gameItem)), Li.push({
                            name: "AllOnlineGames"
                        })
                    }
                else if (i.gameType === "lottery" && b(), (i.gameType === "video" || i.gameType === "sport") && m(v), i.gameType === "chess") {
                    if (i.isElec) {
                        m(v);
                        return
                    }
                    sessionStorage.setItem("slotGamesList", JSON.stringify((C = u.allGameList) == null ? void 0 : C.chess)), sessionStorage.setItem("gameType", JSON.stringify("chess")), sessionStorage.setItem("clickedItem", JSON.stringify(i.gameItem)), Li.push({
                        name: "AllOnlineGames"
                    })
                }
            }, b = () => {
                Li.push({
                    name: "AllLotteryGames-" + y(i.gameItem.categoryCode, !0)
                })
            }, y = (v, $) => {
                if (v) {
                    let T = v;
                    switch (v) {
                        case "5D":
                            if ($) return "5D";
                            T = T.toLocaleUpperCase() + "";
                            break;
                        case "K3":
                            if ($) return "K3";
                            break;
                        case "Trx Win Go":
                            if ($) return "WinTrx";
                            T = "Trx Hash";
                            break;
                        case "XOSO":
                            if ($) return "XoSo";
                            T = "XoSo";
                            break;
                        default:
                            if ($) return "WinGo";
                            T = T
                    }
                    return T
                }
                return ""
            };
            return (v, $) => {
                const T = zt("lazy");
                return ["1", "2"].includes(v.type) && v.gameType !== "bigaward" ? (n(), a("div", {
                    key: 0,
                    class: M(["gameItem1", {
                        elec: v.gameType === "slot"
                    }]),
                    onClick: $[0] || ($[0] = se(C => _(v.gameItem), ["stop"]))
                }, [v.gameType === "slot" ? (n(), a("div", {
                    key: 0,
                    class: "slot_bg",
                    style: Jt({
                        backgroundImage: `url(${p.value})`
                    })
                }, null, 4)) : et((n(), a("img", oG, null, 512)), [
                    [T, p.value]
                ]), ["clicksTopList", "platformList"].includes(v.gameType) && s(g).isShowHotGameWinOdds ? (n(), a("div", sG, [t("span", null, e(v.$t("winOdds")), 1), t("span", null, e(v.gameItem.winOdds) + "%", 1), t("div", {
                    class: "win-p",
                    style: Jt({
                        width: `${Math.min(v.gameItem.winOdds,100)}%`
                    })
                }, null, 4)])) : S("", !0)], 2)) : (n(), a("div", {
                    key: 1,
                    class: "gameImte2",
                    onClick: se(_, ["stop"])
                }, [v.gameType === "bigaward" ? (n(), a("div", cG, [t("div", {
                    class: "bg",
                    style: Jt({
                        backgroundImage: `url(${v.gameItem.imgUrl})`
                    })
                }, null, 4), t("div", rG, [t("div", uG, [t("div", dG, e(v.gameItem.gameName), 1), t("div", pG, e(s(xt)(v.gameItem.bonusAmount)), 1), gG]), t("div", mG, e(v.gameItem.multiple) + "X", 1)])])) : (n(), a("div", {
                    key: 1,
                    class: "other_style",
                    style: Jt({
                        backgroundImage: r.value
                    })
                }, [t("div", null, e(d[v.gameType]), 1)], 4))], 8, lG))
            }
        }
    });
const _G = H(bG, [
        ["__scopeId", "data-v-16138e48"]
    ]),
    uo = l => (wt("data-v-c1566e3b"), l = l(), Lt(), l),
    vG = {
        class: "aloneGame"
    },
    hG = {
        class: "header"
    },
    kG = {
        key: 0,
        class: "title"
    },
    fG = ["src"],
    yG = uo(() => t("span", {
        class: "all"
    }, "ALL", -1)),
    $G = {
        class: "len"
    },
    TG = {
        key: 1,
        class: "right_btn"
    },
    CG = {
        key: 0,
        class: "flash_desc"
    },
    wG = {
        key: 1,
        class: "flash_desc awar_desc"
    },
    LG = uo(() => t("br", null, null, -1)),
    NG = {
        class: "amount"
    },
    IG = W({
        __name: "index",
        props: {
            title: {},
            isAll: {
                type: Boolean,
                default: !1
            },
            gameType: {},
            gameList: {},
            isShowMore: {
                type: Boolean,
                default: !1
            },
            currentMenuType: {},
            isShowBtn: {
                type: Boolean,
                default: !1
            },
            isShowTitle: {
                type: Boolean,
                default: !0
            }
        },
        emits: ["goAll"],
        setup(l, {
            emit: i
        }) {
            const o = l;
            vn(w => ({
                "33e034c4": w.swipeHeight
            }));
            const {
                homeState: u
            } = jt(), {
                t: m
            } = pt(), g = cl(), d = gt(), c = f(), p = ne();
            U(() => u.allGameList);
            const r = (w, L) => {
                    switch (o.gameType) {
                        case "lottery":
                            return w.name + "" + L;
                        case "all":
                        case "clicksTopList":
                        case "platformList":
                        case "fish":
                        case "flash":
                            return w.vendorId + "" + L;
                        default:
                            return w.slotsTypeID + "" + L
                    }
                },
                _ = U(() => p.getJackportMaxReswadAmount),
                b = U(() => {
                    const w = o.gameType;
                    return w === "flash" || w === "slot" || w === "fish" || w === "clicksTopList" || w === "platformList" ? "1" : "2"
                }),
                y = (w, L) => {
                    const z = [];
                    for (let I = 0; I < Math.ceil(w.length / L); I++) {
                        const x = I * L,
                            R = x + L;
                        z.push(w.slice(x, R))
                    }
                    return z
                },
                v = U(() => {
                    if (o.isAll) return y(o.gameList, o.gameList.length);
                    if (o.currentMenuType === 0 && (o.gameType === "clicksTopList" || o.gameType === "platformList")) {
                        let w = o.gameList;
                        return w.length > 6 ? y(w, 6) : y(o.gameList, w.length)
                    } else if (o.currentMenuType === 0 && o.gameType === "slot") return y(o.gameList, o.gameList.length);
                    return o.currentMenuType === 0 && o.gameType === "bigaward" ? y(o.gameList.slice(0, 6), 6) : y(o.gameList, 3)
                }),
                $ = w => {
                    var L, z;
                    w === "left" ? (L = c.value) == null || L.prev() : (z = c.value) == null || z.next()
                },
                T = () => {
                    d.push({
                        path: "/main/SuperJackpot"
                    })
                },
                C = f(0),
                h = w => {
                    C.value = w
                },
                k = () => {
                    if (g.emit("changeKeepAliveKey"), o.gameType === "clicksTopList" || o.gameType === "platformList") {
                        i("goAll", "popular");
                        return
                    }
                    i("goAll", o.gameType)
                };
            return (w, L) => {
                const z = V("van-icon");
                return n(), a("div", vG, [t("div", hG, [w.isShowTitle ? (n(), a("div", kG, [t("img", {
                    src: s(ut)("electronic", w.gameType),
                    alt: "",
                    class: "icons"
                }, null, 8, fG), E(" " + e(w.title) + " ", 1), w.gameType !== "bigaward" ? (n(), a("div", {
                    key: 0,
                    onClick: k
                }, [yG, t("span", $G, e(w.gameList.length), 1)])) : S("", !0)])) : S("", !0), w.isShowBtn ? (n(), a("div", TG, [N(z, {
                    name: "arrow-left",
                    class: M({
                        active: C.value == 0
                    }),
                    onClick: L[0] || (L[0] = I => $("left"))
                }, null, 8, ["class"]), N(z, {
                    name: "arrow",
                    class: M({
                        active: C.value === v.value.length - 1
                    }),
                    onClick: L[1] || (L[1] = I => $("right"))
                }, null, 8, ["class"])])) : S("", !0)]), w.gameType === "flash" ? (n(), a("div", CG, e(w.$t("flashDesc", [s(p).getProjectName])), 1)) : S("", !0), w.gameType === "bigaward" ? (n(), a("div", wG, [E(e(w.$t("awarDesc1")), 1), LG, E(" " + e(w.$t("awarDesc2")) + " ", 1), t("span", NG, e(s(xt)(_.value)), 1)])) : S("", !0), N(s($a), {
                    class: "my-swipe",
                    ref_key: "swipeRef",
                    ref: c,
                    autoplay: w.gameType !== "flash" ? "-" : 3e3,
                    onChange: h,
                    "lazy-render": !1,
                    "show-indicators": !1
                }, {
                    default: D(() => [(n(!0), a(G, null, B(v.value, (I, x) => (n(), Q(s(ya), {
                        key: w.gameType + x,
                        class: M({
                            isShowAll: w.isAll,
                            gys: w.gameType === "slot" && w.isAll && w.currentMenuType === 0
                        })
                    }, {
                        default: D(() => [(n(!0), a(G, null, B(I, (R, O) => (n(), Q(_G, {
                            class: "item_two",
                            "game-type": w.gameType,
                            "game-item": R,
                            key: r(R, O),
                            type: b.value,
                            "is-width": w.isAll
                        }, null, 8, ["game-type", "game-item", "type", "is-width"]))), 128))]),
                        _: 2
                    }, 1032, ["class"]))), 128))]),
                    _: 1
                }, 8, ["autoplay"]), w.isShowMore && w.gameList.length > 9 ? (n(), a("div", {
                    key: 2,
                    class: "look_all",
                    onClick: k
                }, e(s(m)("viewAll")), 1)) : S("", !0), w.gameType === "bigaward" ? (n(), a("div", {
                    key: 3,
                    class: "look_all look_awar",
                    onClick: T
                }, e(w.$t("lookBigAward")), 1)) : S("", !0), w.gameType === "lottery" ? (n(), a("div", {
                    key: 4,
                    class: "ChangLong",
                    onClick: L[2] || (L[2] = I => s(d).push({
                        name: "AllLotteryGames-ChangLong"
                    }))
                })) : S("", !0)])
            }
        }
    });
const zG = H(IG, [
        ["__scopeId", "data-v-c1566e3b"]
    ]),
    po = l => (wt("data-v-d84a604c"), l = l(), Lt(), l),
    xG = {
        class: "winning"
    },
    SG = {
        class: "title"
    },
    RG = {
        class: "wrapper"
    },
    GG = {
        class: "avatar"
    },
    MG = po(() => t("div", {
        class: "avatar_outbg"
    }, null, -1)),
    BG = ["data-img"],
    DG = po(() => t("div", {
        class: "level"
    }, "V1", -1)),
    PG = {
        class: "info"
    },
    AG = {
        class: "name"
    },
    OG = {
        class: "winning_icon",
        alt: ""
    },
    WG = {
        class: "winning"
    },
    qG = W({
        __name: "index",
        setup(l) {
            const {
                homeState: i,
                getWinInfoDetail: o,
                getWinInfo: u
            } = jt(), m = f(null), g = f(null), d = c => {
                if (c.length >= 7) return c.substring(0, 3) + "***" + c.substring(c.length - 3, c.length);
                {
                    const p = "***",
                        r = 7 - c.length,
                        _ = "*".repeat(r);
                    return c.substring(0, Math.ceil((7 - r) / 2)) + p + _ + c.substring(Math.ceil((7 - r) / 2))
                }
            };
            return ht(async () => {
                await o(), fa(m.value), i.winInfoList.length > 0 && (g.value = setInterval(async () => {
                    i.winInfoList.unshift(i.winInfoList.pop())
                }, 3e3))
            }), Ii(() => {
                clearInterval(g.value)
            }), (c, p) => {
                const r = zt("lazy");
                return n(), a("div", xG, [t("div", SG, e(c.$t("winningDetal")), 1), t("div", RG, [t("div", {
                    ref_key: "wrapperRef",
                    ref: m
                }, [(n(!0), a(G, null, B(s(u).slice(0, 6), _ => (n(), a("div", {
                    class: "win_item",
                    key: _
                }, [t("div", GG, [MG, et(t("img", {
                    "data-img": s(ut)("home", "avatar")
                }, null, 8, BG), [
                    [r, s(ut)("main/Avatar", _.userPhoto) || s(ut)("home", "avatar")]
                ]), DG]), t("div", PG, [t("div", AG, e(d(_ == null ? void 0 : _.nickName)), 1)]), et(t("img", OG, null, 512), [
                    [r, _.imgUrl]
                ]), t("div", WG, [t("div", null, e(s(xt)(_.amount || 0)), 1), t("div", null, e(c.$t("winningAmount")), 1)])]))), 128))], 512)])])
            }
        }
    });
const EG = H(qG, [
        ["__scopeId", "data-v-d84a604c"]
    ]),
    HG = {
        class: "profit"
    },
    FG = {
        class: "title"
    },
    VG = {
        class: "profit__list"
    },
    jG = ["data-img"],
    UG = {
        class: "profit__list-item__info"
    },
    KG = {
        class: "rank"
    },
    XG = {
        class: "name"
    },
    JG = {
        class: "rank_num"
    },
    QG = ["src"],
    YG = {
        class: "price"
    },
    ZG = W({
        __name: "index",
        setup(l) {
            const {
                homeState: i
            } = jt(), o = u => {
                if (u.length >= 7) return u.substring(0, 3) + "***" + u.substring(u.length - 3, u.length);
                {
                    const m = "***",
                        g = 7 - u.length,
                        d = "*".repeat(g);
                    return u.substring(0, Math.ceil((7 - g) / 2)) + m + d + u.substring(Math.ceil((7 - g) / 2))
                }
            };
            return (u, m) => {
                const g = zt("lazy");
                return n(), a("div", HG, [t("div", FG, e(u.$t("earningsRankingToday")), 1), t("div", VG, [(n(!0), a(G, null, B(s(i).rankList, (d, c) => (n(), a("div", {
                    key: c,
                    class: "profit__list-item"
                }, [et(t("img", {
                    class: "usePhoto",
                    "data-img": s(ut)("home", "avatar")
                }, null, 8, jG), [
                    [g, d.userPhoto]
                ]), t("div", UG, [t("div", KG, [t("div", XG, e(o(d.nickName)), 1), t("div", JG, [c < 3 ? (n(), a("img", {
                    key: 0,
                    class: "rank_img",
                    src: s(ut)("electronic", "no" + (c + 1)),
                    alt: ""
                }, null, 8, QG)) : S("", !0), t("span", {
                    class: M(`no${c+1}`)
                }, "NO" + e(c + 1), 3)])]), t("div", YG, e(s(xt)(d.price)), 1)])]))), 128))])])
            }
        }
    });
const tM = H(ZG, [
        ["__scopeId", "data-v-893c1838"]
    ]),
    go = l => (wt("data-v-a02e7239"), l = l(), Lt(), l),
    eM = {
        class: "instructions"
    },
    iM = {
        class: "instructions_img"
    },
    nM = ["src"],
    aM = ["src"],
    oM = {
        class: "desc"
    },
    sM = go(() => t("br", null, null, -1)),
    lM = go(() => t("br", null, null, -1)),
    cM = W({
        __name: "index",
        setup(l) {
            const i = ne(),
                o = U(() => i.getHeadLogo);
            return (u, m) => (n(), a("div", eM, [t("div", iM, [t("img", {
                src: s(ut)("home", "u18"),
                alt: "",
                class: "u18"
            }, null, 8, nM), t("img", {
                src: o.value,
                class: "logo"
            }, null, 8, aM)]), t("div", oM, [E(e(u.$t("instructions", [s(i).getProjectName])), 1), sM, E(" " + e(u.$t("instructions2")) + " ", 1), lM, E(" " + e(u.$t("instructions3", [s(i).getProjectName])), 1)])]))
        }
    });
const rM = H(cM, [
        ["__scopeId", "data-v-a02e7239"]
    ]),
    uM = {
        class: "slot_list"
    },
    dM = {
        class: "slot_title"
    },
    pM = ["src"],
    gM = {
        class: "slot_img_box"
    },
    mM = ["onClick"],
    bM = ["onClick"],
    _M = W({
        __name: "index",
        setup(l) {
            const {
                start: i,
                end: o,
                flag: u
            } = wn(), m = gt(), {
                t: g
            } = pt(), {
                getSlotList: d,
                homeState: c
            } = jt(), p = b => b.indexOf("_") === -1 ? b : b.split("_")[0], r = b => {
                const y = c.allGameList.slot.find(v => v.slotsName === b.vendorCode);
                sessionStorage.setItem("slotGamesList", JSON.stringify(c.allGameList.slot)), sessionStorage.setItem("gameType", JSON.stringify("slot")), sessionStorage.setItem("clickedItem", JSON.stringify(y)), m.push({
                    name: "AllOnlineGames"
                })
            };

            function _(b) {
                Ai({
                    title: g("tips"),
                    message: g("tipsPlayGame"),
                    cancelButtonText: g("cancel"),
                    showCancelButton: !0
                }).then(async () => {
                    var v;
                    i(() => {
                        Ai({
                            title: "",
                            message: g("gameLoadTimeOut")
                        }).then(() => {
                            m.push({
                                path: "/"
                            })
                        })
                    });
                    const y = await rt(Ea({
                        vendorCode: Number(b.vendorId),
                        gameCode: b.gameID,
                        phonetype: Cn()
                    }));
                    if (y && !u.value) {
                        if (!u.value && o(!0), ["5"].includes(`${b.vendorId}`)) return m.push({
                            name: "game",
                            query: {
                                url: rl((v = y == null ? void 0 : y.data) == null ? void 0 : v.url)
                            }
                        });
                        Ha() ? Fa("game", {
                            ...y == null ? void 0 : y.data,
                            gameName: b.gameNameEn
                        }) : Tn(y == null ? void 0 : y.data, 1)
                    } else {
                        !u.value && o(!0);
                        return
                    }!u.value && o()
                })
            }
            return d(), (b, y) => {
                const v = zt("lazy");
                return n(), a("div", uM, [N(Ua), (n(!0), a(G, null, B(s(c).slotsGame, $ => (n(), a("div", {
                    class: "slot_item",
                    key: $.vendorCode
                }, [t("div", dM, [t("img", {
                    src: s(ut)("home/slots", $.vendorCode),
                    alt: ""
                }, null, 8, pM), E(" " + e(p($.vendorCode)) + e(b.$t("electric")), 1)]), t("div", gM, [(n(!0), a(G, null, B($.childList.slice(0, 6), T => et((n(), a("img", {
                    key: T.gameID + $.vendorCode,
                    onClick: C => _(T)
                }, null, 8, mM)), [
                    [v, T.img]
                ])), 128))]), t("div", {
                    class: "all_slot",
                    onClick: () => r($)
                }, e(b.$t("allGame")), 9, bM)]))), 128))])
            }
        }
    });
const vM = H(_M, [
        ["__scopeId", "data-v-75f449cc"]
    ]),
    hM = {
        class: "video_list"
    },
    kM = {
        class: "video_title"
    },
    fM = ["src"],
    yM = {
        class: "video_img_box"
    },
    $M = ["onClick"],
    TM = ["onClick"],
    CM = W({
        __name: "index",
        setup(l) {
            wn();
            const i = f([]),
                o = gt();
            pt();
            const {
                onItemClick: u,
                getAllGame: m,
                homeState: g
            } = jt(), d = async () => {
                const r = await rt(ul());
                r && (i.value = r.data)
            }, c = r => r.indexOf("_") === -1 ? r : r.split("_")[0], p = r => {
                const _ = g.allGameList.video.find(b => b.slotsName === r.vendorCode);
                sessionStorage.setItem("slotGamesList", JSON.stringify(g.allGameList.video)), sessionStorage.setItem("gameType", JSON.stringify("video")), sessionStorage.setItem("clickedItem", JSON.stringify(_)), o.push({
                    name: "AllOnlineGames",
                    query: {
                        gameType: "video",
                        currentId: r.childList[0].vendorId
                    }
                })
            };
            return d(), (r, _) => {
                const b = zt("lazy");
                return n(), a("div", hM, [(n(!0), a(G, null, B(i.value, y => (n(), a("div", {
                    class: "video_item",
                    key: y.vendorCode
                }, [t("div", kM, [t("img", {
                    src: s(ut)("home/slots", y.vendorCode),
                    alt: ""
                }, null, 8, fM), t("span", null, e(c(y.vendorCode)) + e(r.$t("code9306")), 1)]), t("div", yM, [(n(!0), a(G, null, B(y.childList.slice(0, 6), v => et((n(), a("img", {
                    key: v.gameID + y.vendorCode,
                    onClick: $ => s(u)(v)
                }, null, 8, $M)), [
                    [b, v.img]
                ])), 128))]), t("div", {
                    class: "all_slot",
                    onClick: () => p(y)
                }, e(r.$t("allGame")), 9, TM)]))), 128))])
            }
        }
    });
const wM = H(CM, [
        ["__scopeId", "data-v-eaa5c86e"]
    ]),
    LM = l => (wt("data-v-6ec0f2e1"), l = l(), Lt(), l),
    NM = {
        id: "home"
    },
    IM = ["src"],
    zM = {
        class: "content__right"
    },
    xM = {
        class: "content"
    },
    SM = LM(() => t("div", {
        id: "game_content"
    }, null, -1)),
    RM = {
        class: "TimeLeft__C-PreSale"
    },
    GM = {
        class: "TimeLeft__C-PreSale-head"
    },
    MM = {
        class: "TimeLeft__C-PreSale-body"
    },
    BM = ["innerHTML"],
    DM = {
        class: "TimeLeft__C-PreSale-foot"
    },
    PM = {
        class: "Laundry-Con"
    },
    AM = {
        class: "Laundry-Con_tip"
    },
    OM = {
        class: "Laundry-Con_tips"
    },
    WM = W({
        __name: "electronic",
        setup(l) {
            const {
                onDown: i,
                isAppDownload: o,
                isAppDownloadIcon: u,
                getMessagesData: m,
                showPWA: g,
                homeState: d,
                getAllGame: c,
                getGameType: p,
                projectIcon: r
            } = jt(), {
                t: _
            } = pt(), {
                closeLaundry: b,
                closePrompt: y,
                store: v,
                promptContent: $
            } = _i(), T = gt(), C = f([]), h = f(), k = Et([]), w = f(0), L = J => w.value === 0 && J.gameType !== "slot" && J.gameType !== "bigaward", z = J => J === "popular" && w.value === 0 || J === "slot" && w.value === 0 ? !0 : w.value !== 0, I = () => {
                b(), T.push({
                    name: "SuperJackpot"
                })
            }, x = U(() => {
                let J = k.findIndex(Z => Z.gameType === at[w.value].type);
                return J < 0 ? -1 : J
            }), R = J => {
                var Z;
                return J.gameType === "bigaward" && x.value === -1 ? J.isShow : (w.value === 0 || ((Z = k[x.value]) == null ? void 0 : Z.gameType) === J.gameType) && J.gameList.length > 0
            }, O = J => {
                let {
                    item: Z
                } = J;
                sessionStorage.setItem("currentMenu", Z.type)
            };

            function P() {
                T.push({
                    name: "CustomerService"
                })
            }
            const K = async () => {
                await ct();
                let J = sessionStorage.getItem("currentMenu");
                w.value = J ? at.findIndex(lt => lt.type === J) : 0, await c();
                const Z = xi(d.allGameList);
                k.forEach(lt => {
                    lt.gameType === "clicksTopList" ? lt.gameList = Z.popular.clicksTopList : lt.gameType === "platformList" ? lt.gameList = Z.popular.platformList : lt.gameType === "bigaward" ? lt.gameList = Z.awardRecordList || [] : lt.gameType === "video" ? lt.gameList = Z.popular.clicksVideoTopList || [] : lt.gameList = Z[lt.gameType], lt.gameList || (lt.isShow = !1)
                }), sessionStorage.setItem("allGameList", JSON.stringify(k)), sessionStorage.setItem("gameData", JSON.stringify(d.allGameList))
            }, X = J => {
                T.push({
                    name: "AllGames",
                    query: {
                        type: J
                    }
                })
            }, at = Et([{
                title: _("all"),
                type: "all",
                img: "all",
                isShow: !0
            }]), ct = async () => {
                await p(), d.gameTypeList.forEach(J => {
                    at.push({
                        title: _("code" + J.typeNameCode + J.categoryCode),
                        type: J.categoryCode.toLocaleLowerCase(),
                        isShow: J.state === 1 && J.categoryCode.toLocaleLowerCase() !== "popular" && J.categoryCode.toLocaleLowerCase() !== "bigaward",
                        img: J.categoryImg
                    }), k.push({
                        isAll: !1,
                        img: J.categoryImg,
                        isShow: J.state === 1,
                        gameList: [],
                        gameType: J.categoryCode.toLocaleLowerCase() === "popular" ? "clicksTopList" : J.categoryCode.toLocaleLowerCase(),
                        title: _("code" + J.typeNameCode),
                        showTitle: _("code" + J.typeNameCode + J.categoryCode)
                    }), J.categoryCode.toLocaleLowerCase() === "popular" && k.push({
                        isAll: !1,
                        img: J.categoryImg,
                        isShow: !0,
                        gameList: [],
                        gameType: "platformList",
                        title: _("characteristical"),
                        showTitle: _("characteristical")
                    })
                })
            };
            return (async () => {
                await K(), await m()
            })(), ht(async () => {
                const J = await rt(kn({
                    pageNo: 1,
                    pageSize: 5
                }));
                J && (C.value = J.data.list)
            }), (J, Z) => {
                const lt = V("NavBar"),
                    Rt = V("van-popup");
                return n(), a("div", NM, [N(lt, null, {
                    left: D(() => [t("img", {
                        style: {
                            height: "40px"
                        },
                        src: s(r),
                        alt: ""
                    }, null, 8, IM)]),
                    right: D(() => [t("div", zM, [s(o) ? (n(), a("div", {
                        key: 0,
                        class: "homeIcon down",
                        onClick: Z[0] || (Z[0] = (...Nt) => s(i) && s(i)(...Nt))
                    })) : S("", !0), t("div", {
                        class: "homeIcon customerIcon",
                        onClick: P
                    })])]),
                    _: 1
                }), t("div", xM, [N($i), N(Fe, {
                    key: "home",
                    isHome: !0
                }), N(nG, {
                    onTabChange: O,
                    ref_key: "tabsRef",
                    ref: h,
                    "tab-list": at,
                    "current-menu": w.value,
                    "onUpdate:currentMenu": Z[1] || (Z[1] = Nt => w.value = Nt)
                }, null, 8, ["tab-list", "current-menu"]), et(N(vM, {
                    key: "slots"
                }, null, 512), [
                    [Vt, at[w.value].type === "slot"]
                ]), et(N(wM, {
                    key: "video"
                }, null, 512), [
                    [Vt, at[w.value].type === "video"]
                ]), SM, et(t("div", null, [(n(!0), a(G, null, B(k, Nt => (n(), a("div", {
                    key: Nt.gameType + w.value
                }, [et((n(), Q(zG, {
                    onGoAll: X,
                    title: Nt.showTitle,
                    "game-type": Nt.gameType,
                    "game-list": Nt.gameList,
                    key: Nt.gameType,
                    "is-all": z(Nt.gameType),
                    "is-show-more": w.value !== 0,
                    currentMenuType: w.value,
                    isShowBtn: L(Nt)
                }, null, 8, ["title", "game-type", "game-list", "is-all", "is-show-more", "currentMenuType", "isShowBtn"])), [
                    [Vt, R(Nt)]
                ])]))), 128))], 512), [
                    [Vt, !["slot", "video"].includes(at[w.value].type)]
                ]), N(EG), N(tM), N(rM), s(g) && s(u) ? (n(), Q(Ci, {
                    key: 0
                })) : S("", !0), N(Ti), N(Rt, {
                    show: s(v).prompt,
                    "onUpdate:show": Z[3] || (Z[3] = Nt => s(v).prompt = Nt),
                    round: "",
                    "confirm-button-text": J.$t("confirm")
                }, {
                    default: D(() => [t("div", RM, [t("div", GM, e(J.$t("prompt")), 1), t("div", MM, [t("div", {
                        innerHTML: s($)
                    }, null, 8, BM)]), t("div", DM, [t("div", {
                        class: "TimeLeft__C-PreSale-foot-btn",
                        onClick: Z[2] || (Z[2] = Nt => s(y)())
                    }, e(J.$t("winTrxClose")), 1)])])]),
                    _: 1
                }, 8, ["show", "confirm-button-text"]), N(yi, {
                    show: s(v).laundry,
                    "onUpdate:show": Z[4] || (Z[4] = Nt => s(v).laundry = Nt),
                    onConfirm: I,
                    "show-cancel-btn": !1,
                    confirmText: "OK",
                    title: J.$t("congratulations")
                }, {
                    content: D(() => [t("div", PM, [t("div", AM, e(J.$t("getSuper")), 1), t("div", OM, e(J.$t("getRewards")), 1)])]),
                    _: 1
                }, 8, ["show", "title"])])])
            }
        }
    });
const qM = H(WM, [
        ["__scopeId", "data-v-6ec0f2e1"]
    ]),
    uP = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: qM
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    EM = l => (wt("data-v-cb37f029"), l = l(), Lt(), l),
    HM = {
        class: "gameList"
    },
    FM = EM(() => t("div", {
        class: "slidebar_ske"
    }, [t("div"), t("div"), t("div"), t("div"), t("div"), t("div"), t("div"), t("div"), t("div")], -1)),
    VM = W({
        __name: "index",
        setup(l) {
            const {
                t: i
            } = pt(), o = f(0), u = f(!1), m = Et([]), g = U(() => {
                var b, y;
                return (b = m[o.value]) != null && b.key ? (y = m[o.value]) == null ? void 0 : y.key : ""
            }), {
                getGameType: d,
                homeState: c
            } = jt(), p = async () => {
                await d(), c.gameTypeList.length > 0 && (c.gameTypeList.forEach(b => {
                    b.state === 1 && m.push({
                        isShow: b.state === 1,
                        title: i("code" + b.typeNameCode),
                        img: b.categoryImg,
                        key: b.categoryCode.toLocaleLowerCase()
                    })
                }), sessionStorage.setItem("gameMenu", JSON.stringify(m)))
            }, r = b => {
                sessionStorage.setItem("clickedGameType", m[b].key)
            };
            return (async () => {
                u.value = !0, await p();
                const b = sessionStorage.getItem("clickedGameType");
                if (b !== null) {
                    const y = m.findIndex(v => v.key === b);
                    y >= 0 && (o.value = y, ie(() => {
                        r(y);
                        const v = document.getElementById("gameType-" + b);
                        setTimeout(() => {
                            v && v.scrollIntoView({
                                behavior: "smooth",
                                block: "center",
                                inline: "center"
                            })
                        }, 0)
                    }))
                }
                u.value = !1
            })(), (b, y) => {
                const v = V("van-sidebar-item"),
                    $ = V("van-sidebar"),
                    T = V("van-skeleton");
                return n(), a("div", HM, [N(T, {
                    loading: u.value
                }, {
                    template: D(() => [FM]),
                    default: D(() => [N($, {
                        modelValue: o.value,
                        "onUpdate:modelValue": y[0] || (y[0] = C => o.value = C),
                        class: "mySideBar",
                        onChange: r
                    }, {
                        default: D(() => [(n(!0), a(G, null, B(m, (C, h) => (n(), Q(v, {
                            key: h,
                            id: "gameType-" + C.key
                        }, {
                            title: D(() => [C.isShow ? (n(), a("div", {
                                key: 0,
                                class: M({
                                    whiteColor: h === o.value
                                })
                            }, [t("div", {
                                style: Jt({
                                    backgroundImage: `url(${C.img})`
                                })
                            }, null, 4), E(" " + e(C.title), 1)], 2)) : S("", !0)]),
                            _: 2
                        }, 1032, ["id"]))), 128))]),
                        _: 1
                    }, 8, ["modelValue"])]),
                    _: 1
                }, 8, ["loading"]), et(N(Ka, {
                    currentGame: g.value,
                    ref: "gameListGridRef"
                }, null, 8, ["currentGame"]), [
                    [Vt, m[o.value]]
                ])])
            }
        }
    });
const jM = H(VM, [
        ["__scopeId", "data-v-cb37f029"]
    ]),
    UM = {
        id: "home",
        class: "content"
    },
    KM = ["src"],
    XM = {
        class: "content__right"
    },
    JM = {
        class: "promptHeader"
    },
    QM = ["innerHTML"],
    YM = {
        class: "Laundry-Con"
    },
    ZM = {
        class: "Laundry-Con_tip"
    },
    tB = {
        class: "Landty-Con-tips"
    },
    eB = W({
        __name: "redHome",
        setup(l) {
            const {
                t: i
            } = pt(), o = gt(), {
                setLoading: u
            } = Xe(), {
                onDown: m,
                isAppDownload: g,
                isAppDownloadIcon: d,
                showChanglong: c,
                projectIcon: p,
                isRead: r,
                getMessagesData: _,
                showPWA: b
            } = jt(), {
                closeLaundry: y,
                closePrompt: v,
                store: $,
                promptContent: T
            } = _i(), C = be(() => _e(() => import("./messageIcon-0e70db7e.js"), ["assets/js/messageIcon-0e70db7e.js", "assets/js/page-activity-8d7959ff.js", "assets/js/modules-fbc96342.js", "assets/css/modules-66401e0a.css", "assets/js/native/index-08561a08.js", "assets/js/en-bab51ca4.js", "assets/js/rus-ecb14220.js", "assets/js/vi-82b0febd.js", "assets/js/id-16b6cb52.js", "assets/js/hd-c5b1d7e8.js", "assets/js/tha-330057b2.js", "assets/js/md-e8a5e3b0.js", "assets/js/bra-6692a9a5.js", "assets/js/my-32fb9d60.js", "assets/js/bdt-d8f19d0c.js", "assets/js/zh-7d334abd.js", "assets/js/pak-cdc12211.js", "assets/js/ar-1c9ff85b.js", "assets/css/page-activity-9df3b495.css"]));

            function h() {
                o.push({
                    name: "Messages"
                })
            }
            u(!1);
            const k = () => {
                    y(), o.push({
                        name: "SuperJackpot"
                    })
                },
                w = f();
            return ht(() => {
                _(), u(!1)
            }), (L, z) => {
                const I = V("svg-icon"),
                    x = V("NavBar"),
                    R = V("van-dialog");
                return n(), a("div", UM, [N(x, null, {
                    left: D(() => [t("img", {
                        src: s(p),
                        alt: ""
                    }, null, 8, KM)]),
                    right: D(() => [t("div", XM, [t("div", {
                        class: "message",
                        onClick: h
                    }, [(n(), Q(me(s(C)))), et(N(Mn, {
                        class: "point"
                    }, null, 512), [
                        [Vt, !s(r)]
                    ])]), s(g) ? (n(), Q(I, {
                        key: 0,
                        onClick: se(s(m), ["stop"]),
                        name: "down",
                        color: "#FB5755",
                        class: "down"
                    }, null, 8, ["onClick"])) : S("", !0)])]),
                    _: 1
                }), N($i), N(Fe, {
                    key: "home",
                    color: "red"
                }), N(jM, {
                    ref_key: "gameListRef",
                    ref: w
                }, null, 512), N(Ji), N(Qi), s(c) ? (n(), Q(Qe, {
                    key: 0
                })) : S("", !0), s(b) && s(d) ? (n(), Q(Ci, {
                    key: 1
                })) : S("", !0), N(Ti), N(R, {
                    show: s($).prompt,
                    "onUpdate:show": z[0] || (z[0] = O => s($).prompt = O),
                    "confirm-button-text": s(i)("confirm"),
                    onConfirm: s(v)
                }, {
                    default: D(() => [t("div", JM, e(s(i)("prompt")), 1), t("div", {
                        class: "promptContent",
                        innerHTML: s(T)
                    }, null, 8, QM)]),
                    _: 1
                }, 8, ["show", "confirm-button-text", "onConfirm"]), N(yi, {
                    show: s($).laundry,
                    "onUpdate:show": z[1] || (z[1] = O => s($).laundry = O),
                    onConfirm: k,
                    "show-cancel-btn": !1,
                    confirmText: "OK",
                    title: s(i)("congratulations")
                }, {
                    content: D(() => [t("div", YM, [t("div", ZM, e(s(i)("getSuper")), 1), t("div", tB, e(s(i)("getRewards")), 1)])]),
                    _: 1
                }, 8, ["show", "title"])])
            }
        }
    });
const iB = H(eB, [
        ["__scopeId", "data-v-d59d9e77"]
    ]),
    dP = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: iB
    }, Symbol.toStringTag, {
        value: "Module"
    })),
    nB = l => (wt("data-v-776283ad"), l = l(), Lt(), l),
    aB = {
        class: "dailyProfitRank"
    },
    oB = {
        class: "title"
    },
    sB = nB(() => t("div", {
        class: "driver"
    }, null, -1)),
    lB = {
        class: "rank_list"
    },
    cB = {
        class: "left"
    },
    rB = ["data-img"],
    uB = ["data-img"],
    dB = {
        class: "info"
    },
    pB = {
        class: "tit"
    },
    gB = {
        class: "amount"
    },
    mB = W({
        __name: "index",
        setup(l) {
            const {
                homeState: i
            } = jt(), o = U(() => i.rankList);
            return (u, m) => {
                const g = zt("lazy");
                return n(), a("div", aB, [t("div", oB, e(u.$t("earningsRankingToday")), 1), sB, t("div", lB, [(n(!0), a(G, null, B(o.value, (d, c) => (n(), a("div", {
                    class: "daily_item",
                    key: d.nickName
                }, [t("div", cB, [t("div", {
                    class: M(["avatar_img", c < 3 ? `avatar_img${c+1}` : ""])
                }, [d.userPhoto.length > 2 ? et((n(), a("img", {
                    key: 0,
                    "data-img": s(ut)("home", "avatar")
                }, null, 8, rB)), [
                    [g, d.userPhoto]
                ]) : et((n(), a("img", {
                    key: 1,
                    "data-img": s(ut)("home", "avatar")
                }, null, 8, uB)), [
                    [g, s(ut)("main/Avatar", d.userPhoto)]
                ])], 2), t("div", dB, [t("div", pB, e(s(Ni)(d.nickName)), 1), t("div", {
                    class: M(["ranking", c < 3 ? `ranking${c+1}` : ""])
                }, "NO." + e(c + 1), 3)])]), t("div", gB, e(s(xt)(d.price)), 1)]))), 128))])])
            }
        }
    });
const bB = H(mB, [
        ["__scopeId", "data-v-776283ad"]
    ]),
    Dn = l => (wt("data-v-e7db8255"), l = l(), Lt(), l),
    _B = {
        class: "luckyWinners__container"
    },
    vB = {
        class: "title"
    },
    hB = Dn(() => t("div", {
        class: "driver"
    }, null, -1)),
    kB = {
        class: "info_item"
    },
    fB = Dn(() => t("div", {
        class: "item_bg"
    }, null, -1)),
    yB = ["data-img"],
    $B = {
        class: "nick_name"
    },
    TB = Dn(() => t("div", {
        class: "fenge"
    }, null, -1)),
    CB = {
        class: "amount"
    },
    wB = {
        class: "tip"
    },
    LB = W({
        __name: "index",
        setup(l) {
            const {
                getWinInfoDetail: i,
                homeState: o
            } = jt(), u = f(null);

            function m(c, p) {
                const r = [];
                for (let _ = 0; _ < c.length; _ += p) r.push(c.slice(_, _ + p));
                return r
            }
            const g = f([]);
            async function d() {
                await i(), g.value = m(o.winInfoList || [], 3)
            }
            return ht(async () => {
                await d()
            }), Ii(() => {
                clearInterval(u.value)
            }), (c, p) => {
                const r = zt("lazy");
                return n(), a("div", _B, [t("div", vB, e(c.$t("winningDetal")), 1), hB, N(s($a), {
                    class: "my-swipe",
                    ref: "swipeRef",
                    autoplay: "3000",
                    "show-indicators": !1
                }, {
                    default: D(() => [(n(!0), a(G, null, B(g.value, (_, b) => (n(), Q(s(ya), {
                        key: b
                    }, {
                        default: D(() => [(n(!0), a(G, null, B(_, y => (n(), a("div", kB, [fB, et(t("img", {
                            class: "avatar_img",
                            "data-img": s(ut)("home", "avatar")
                        }, null, 8, yB), [
                            [r, _.userPhoto]
                        ]), t("div", $B, e(s(Ni)(y.nickName)), 1), TB, t("div", CB, e(s(xt)(y.amount || 0)), 1), t("div", wB, e(c.$t("winningAmount")), 1)]))), 256))]),
                        _: 2
                    }, 1024))), 128))]),
                    _: 1
                }, 512)])
            }
        }
    });
const NB = H(LB, [
        ["__scopeId", "data-v-e7db8255"]
    ]),
    IB = {
        class: "noticeBar__container",
        id: "noticeBar"
    },
    zB = {
        class: "noticeBar__container-body"
    },
    xB = {
        key: 0,
        class: "noticeBar__container-body-text"
    },
    SB = W({
        __name: "index",
        setup(l) {
            const i = gt(),
                o = le(),
                u = f(null),
                m = be(() => _e(() => import("./noticeBarSpeaker-5d712521.js"), ["assets/js/noticeBarSpeaker-5d712521.js", "assets/js/page-activity-8d7959ff.js", "assets/js/modules-fbc96342.js", "assets/css/modules-66401e0a.css", "assets/js/native/index-08561a08.js", "assets/js/en-bab51ca4.js", "assets/js/rus-ecb14220.js", "assets/js/vi-82b0febd.js", "assets/js/id-16b6cb52.js", "assets/js/hd-c5b1d7e8.js", "assets/js/tha-330057b2.js", "assets/js/md-e8a5e3b0.js", "assets/js/bra-6692a9a5.js", "assets/js/my-32fb9d60.js", "assets/js/bdt-d8f19d0c.js", "assets/js/zh-7d334abd.js", "assets/js/pak-cdc12211.js", "assets/js/ar-1c9ff85b.js", "assets/css/page-activity-9df3b495.css"])),
                g = f(o.messageList),
                d = async () => {
                    const c = await rt(kn({
                        pageNo: 1,
                        pageSize: 5
                    }));
                    if (c) {
                        if (o.setMessage(c.data.list), g.value = c.data.list, !g.value.length) return;
                        u.value && clearInterval(u.value), u.value = setInterval(() => {
                            g.value.push(g.value.shift())
                        }, 7e3)
                    }
                };
            return ht(() => {
                g.value || setTimeout(() => {
                    d()
                }, 1e3)
            }), (c, p) => {
                var r;
                return n(), a("div", IB, [(n(), Q(me(s(m)))), t("div", zB, [g.value && g.value[0] && g.value[0].siteMessage ? (n(), a("div", xB, e((r = g.value[0]) == null ? void 0 : r.siteMessage), 1)) : S("", !0)]), t("button", {
                    onClick: p[0] || (p[0] = _ => s(i).push({
                        name: "Notification"
                    }))
                }, e(c.$t("more")), 1)])
            }
        }
    });
const RB = H(SB, [
        ["__scopeId", "data-v-9d65fccf"]
    ]),
    GB = {
        class: "game_menu"
    },
    MB = {
        class: "slidebar_ske"
    },
    BB = {
        class: "game_menu_list"
    },
    DB = ["onClick"],
    PB = W({
        __name: "index",
        setup(l) {
            const i = le(),
                o = Oi(),
                {
                    t: u
                } = pt(),
                m = f([]),
                g = f(!1),
                d = U(() => o.currentMenu),
                c = U(() => !i.getToken),
                {
                    getGameType: p,
                    homeState: r
                } = jt(),
                _ = async () => {
                    g.value = !0, await p(), r.gameTypeList.forEach(v => {
                        v.categoryCode === "BigAward" || v.state !== 1 || m.value.push({
                            isShow: v.state === 1,
                            title: u("code" + v.typeNameCode),
                            img: v.categoryImg,
                            key: v.categoryCode.toLocaleLowerCase()
                        })
                    }), sessionStorage.setItem("gameMenu", JSON.stringify(m.value)), g.value = !1
                }, b = v => {
                    let $ = c.value ? 0 : 100;
                    y(400 - $), sessionStorage.setItem("clickedGameType", v.key), o.setCurrentMenu(v.key), o.setCurrentTitle(v.title)
                };

            function y(v) {
                window.scrollTo({
                    top: v,
                    behavior: "smooth"
                })
            }
            return ht(async () => {
                var $;
                await _();
                let v = sessionStorage.getItem("clickedGameType");
                v ? (o.setCurrentMenu(v), o.setCurrentTitle(($ = m.value.find(T => T.key === v)) == null ? void 0 : $.title)) : d.value || (o.setCurrentMenu(m.value[0].key), o.setCurrentTitle(m.value[0].title), g.value = !1)
            }), (v, $) => {
                const T = V("van-skeleton");
                return n(), a("div", GB, [N(T, {
                    loading: g.value
                }, {
                    template: D(() => [t("div", MB, [(n(), a(G, null, B(8, () => t("div")), 64))])]),
                    default: D(() => [t("div", BB, [(n(!0), a(G, null, B(m.value, C => (n(), a("div", {
                        class: M(["gamen_item", {
                            active: d.value === C.key
                        }]),
                        style: Jt({
                            backgroundImage: `url(${C.img})`
                        }),
                        onClick: h => b(C)
                    }, [t("span", null, e(C.title), 1)], 14, DB))), 256))])]),
                    _: 1
                }, 8, ["loading"])])
            }
        }
    });
const AB = H(PB, [
        ["__scopeId", "data-v-94538964"]
    ]),
    OB = {
        class: "other_box"
    },
    WB = ["onClick"],
    qB = W({
        __name: "OtherGameItem",
        props: {
            gameType: {},
            gameList: {}
        },
        emits: ["onItemClick"],
        setup(l, {
            emit: i
        }) {
            const o = l,
                u = m => {
                    i("onItemClick", {
                        item: m,
                        key: o.gameType
                    })
                };
            return (m, g) => {
                const d = zt("lazy");
                return n(), a("div", OB, [(n(!0), a(G, null, B(m.gameList, c => (n(), a("div", {
                    class: "other_item",
                    key: c.slotsTypeID
                }, [et(t("img", {
                    onClick: p => u(c)
                }, null, 8, WB), [
                    [d, c.vendorImg]
                ])]))), 128))])
            }
        }
    });
const EB = H(qB, [
        ["__scopeId", "data-v-84574887"]
    ]),
    HB = {
        class: "hot_container"
    },
    FB = {
        class: "hot_container-item"
    },
    VB = ["onClick"],
    jB = {
        key: 0,
        class: "win-odds"
    },
    UB = W({
        __name: "HotGameItem",
        props: {
            gameList: {},
            gameType: {}
        },
        emits: ["onItemClick"],
        setup(l, {
            emit: i
        }) {
            const o = l,
                u = ne(),
                m = g => {
                    i("onItemClick", {
                        item: g,
                        gameType: o.gameType
                    })
                };
            return (g, d) => {
                const c = zt("lazy");
                return n(), a("div", HB, [(n(!0), a(G, null, B(g.gameList, p => (n(), a("div", FB, [et(t("img", {
                    onClick: r => m(p)
                }, null, 8, VB), [
                    [c, p.imgUrl || p.img]
                ]), ["popular"].includes(g.gameType) && s(u).isShowHotGameWinOdds ? (n(), a("div", jB, [t("span", null, e(g.$t("winOdds")), 1), t("span", null, e(p.winOdds) + "%", 1), t("div", {
                    class: "win-p",
                    style: Jt({
                        width: `${Math.min(p.winOdds||0,100)}%`
                    })
                }, null, 4)])) : S("", !0)]))), 256))])
            }
        }
    });
const KB = H(UB, [
        ["__scopeId", "data-v-0b713c5e"]
    ]),
    XB = {
        class: "lottery_container"
    },
    JB = ["onClick"],
    QB = ["src"],
    YB = W({
        __name: "LotterySlotItem",
        props: {
            currentLottery: {}
        },
        setup(l) {
            const i = gt();

            function o(d) {
                return d.reduce((c, p) => Array.isArray(p) ? c.concat(o(p)) : c.concat(p), [])
            }
            let u = Et({
                All: [],
                XOSO: [],
                "Win Go": [{
                    typeId: 1,
                    class: "wingo",
                    title: "Win Go 1Min",
                    path: "WinGo"
                }, {
                    typeId: 2,
                    class: "wingo",
                    title: "Win Go 3Min",
                    path: "WinGo"
                }, {
                    typeId: 3,
                    class: "wingo",
                    title: "Win Go 5Min",
                    path: "WinGo"
                }, {
                    typeId: 4,
                    class: "wingo",
                    title: "Win Go 10Min",
                    path: "WinGo"
                }],
                "5D": [{
                    typeId: 5,
                    class: "d5",
                    title: "5D 1Min",
                    path: "5D"
                }, {
                    typeId: 6,
                    class: "d5",
                    title: "5D 3Min",
                    path: "5D"
                }, {
                    typeId: 7,
                    class: "d5",
                    title: "5D 5Min",
                    path: "5D"
                }, {
                    typeId: 8,
                    class: "d5",
                    title: "5D 10Min",
                    path: "5D"
                }],
                K3: [{
                    typeId: 9,
                    class: "k3",
                    title: "K3 1Min",
                    path: "K3"
                }, {
                    typeId: 10,
                    class: "k3",
                    title: "K3 3Min",
                    path: "K3"
                }, {
                    typeId: 11,
                    class: "k3",
                    title: "K3 5Min",
                    path: "K3"
                }, {
                    typeId: 12,
                    class: "k3",
                    title: "K3 10Min",
                    path: "K3"
                }],
                "Trx Win Go": [{
                    typeId: 13,
                    class: "trx",
                    title: "Trx Win Go 1Min",
                    path: "WinTrx"
                }, {
                    typeId: 14,
                    class: "trx",
                    title: "Trx Win Go 3Min",
                    path: "WinTrx"
                }, {
                    typeId: 15,
                    class: "trx",
                    title: "Trx Win Go 5Min",
                    path: "WinTrx"
                }, {
                    typeId: 16,
                    class: "trx",
                    title: "Trx Win Go 10Min",
                    path: "WinTrx"
                }]
            });
            const m = o(Object.values(u));
            u.All = m;
            const g = d => {
                i.push({
                    name: "AllLotteryGames-" + d.path,
                    query: {
                        typeId: d.typeId,
                        id: d.id
                    }
                })
            };
            return (d, c) => (n(), a("div", XB, [(n(!0), a(G, null, B(s(u)[d.currentLottery], p => (n(), a("div", {
                class: M(["lotterySlotItem", p.class]),
                key: p.typeId,
                onClick: r => g(p)
            }, [t("img", {
                src: s(ut)("home/lottery", `${p.class}${p.typeId}`),
                alt: ""
            }, null, 8, QB), t("div", null, e(p.title), 1)], 10, JB))), 128))]))
        }
    });
const ZB = H(YB, [
        ["__scopeId", "data-v-39c6bd1a"]
    ]),
    tD = {
        alt: ""
    },
    eD = W({
        __name: "ElectronicWinRate",
        setup(l) {
            const i = ne(),
                o = U(() => i.winRate.electronicWinRateImgUrl || ""),
                u = U(() => !!(i.winRate.isShowElectronicWinRateExternalLink && o.value)),
                m = () => {
                    i.winRate.electronicWinRateExternalLink && window.open(i.winRate.electronicWinRateExternalLink)
                };
            return (g, d) => {
                const c = zt("lazy");
                return u.value ? (n(), a("div", {
                    key: 0,
                    class: "WinRate",
                    onClick: m
                }, [et(t("img", tD, null, 512), [
                    [c, o.value]
                ])])) : S("", !0)
            }
        }
    });
const iD = H(eD, [
        ["__scopeId", "data-v-ba84584e"]
    ]),
    mo = l => (wt("data-v-8c355d6f"), l = l(), Lt(), l),
    nD = {
        class: "game_container"
    },
    aD = mo(() => t("div", {
        class: "slidebar_title"
    }, [t("div")], -1)),
    oD = {
        class: "game_title"
    },
    sD = mo(() => t("div", {
        class: "driver"
    }, null, -1)),
    lD = {
        class: "slidebar_other"
    },
    cD = {
        class: "slidebar_hot"
    },
    rD = {
        class: "slidebar_lottery"
    },
    uD = W({
        __name: "index",
        setup(l) {
            const {
                t: i
            } = pt(), o = Oi(), u = f(!1), m = U(() => o.getCurrentTitle), g = U(() => o.getCurrentMenu), d = Et({}), c = gt(), p = f(0), {
                start: r,
                end: _,
                flag: b
            } = wn(), y = U(() => ["popular", "flash", "fish"].includes(g.value) ? 1 : ["sport", "chess", "video", "slot"].includes(g.value) ? 2 : g.value === "lottery" ? 3 : -1), v = async () => {
                u.value = !0;
                const T = await rt(dl()),
                    C = ["slot", "video", "chess", "sport", "lottery"];
                if (T) {
                    const h = xi(T.data);
                    for (const [k, w] of Object.entries(h)) {
                        let L = k.toLocaleLowerCase();
                        C.includes(L) ? d[L] = w.filter(z => z.state === 1) : L === "popular" ? d[L] = [...h[L].platformList, ...h[L].clicksTopList] : d[L] = w
                    }
                    d.lottery.unshift({
                        categoryCode: "All"
                    }), sessionStorage.setItem("gameData", JSON.stringify(d))
                }
                u.value = !1
            }, $ = T => {
                if (!le().token) {
                    c.push({
                        name: "login"
                    });
                    return
                }
                let {
                    item: h,
                    key: k
                } = T;
                ["chess", "slot"].includes(k) ? (sessionStorage.setItem("slotGamesList", JSON.stringify(d[k])), sessionStorage.setItem("gameType", JSON.stringify(g.value)), sessionStorage.setItem("clickedItem", JSON.stringify(h)), c.push({
                    name: "AllOnlineGames"
                })) : Ai({
                    title: i("tips"),
                    message: i("tipsPlayGame"),
                    cancelButtonText: i("cancel"),
                    showCancelButton: !0
                }).then(async () => {
                    r(() => {
                        Ai({
                            title: "",
                            message: i("gameLoadTimeOut")
                        }).then(() => {
                            c.push({
                                path: "/"
                            })
                        })
                    });
                    let L = {
                        gameCode: h.gameCode || h.gameID,
                        vendorCode: Number(h.vendorId) || Number(h.slotsTypeID)
                    };
                    const z = await rt(Ea({
                        ...L,
                        phonetype: Cn()
                    }));
                    if (z && !b.value) Ha() ? Fa("game", {
                        ...(z == null ? void 0 : z.data) || {},
                        gameName: T.item.slotsName || T.item.gameNameEn || ""
                    }) : Tn(z == null ? void 0 : z.data, 1);
                    else {
                        !b.value && _(!0);
                        return
                    }!b.value && _()
                })
            };
            return v(), (T, C) => {
                const h = V("van-skeleton"),
                    k = V("van-tab"),
                    w = V("van-tabs");
                return n(), a("div", nD, [N(h, {
                    loading: u.value
                }, {
                    template: D(() => [aD]),
                    default: D(() => [t("div", oD, e(m.value), 1)]),
                    _: 1
                }, 8, ["loading"]), y.value === 3 ? (n(), Q(w, {
                    key: 0,
                    "swipe-threshold": 4,
                    class: "lottery_tabbar",
                    active: p.value,
                    "onUpdate:active": C[0] || (C[0] = L => p.value = L),
                    type: "card",
                    background: "transparent",
                    ref: "tabsRef"
                }, {
                    default: D(() => [(n(!0), a(G, null, B(d.lottery, (L, z) => (n(), Q(k, {
                        key: z
                    }, {
                        title: D(() => [t("span", null, e(L.categoryCode), 1)]),
                        _: 2
                    }, 1024))), 128))]),
                    _: 1
                }, 8, ["active"])) : S("", !0), sD, y.value === 2 ? (n(), Q(h, {
                    key: 1,
                    loading: u.value
                }, {
                    template: D(() => [t("div", lD, [(n(), a(G, null, B(4, () => t("div")), 64))])]),
                    default: D(() => [
                        ["slot"].includes(g.value) ? (n(), Q(iD, {
                            key: 0
                        })) : S("", !0), N(EB, {
                            gameList: d[g.value],
                            "game-type": g.value,
                            onOnItemClick: $
                        }, null, 8, ["gameList", "game-type"])
                    ]),
                    _: 1
                }, 8, ["loading"])) : S("", !0), y.value === 1 ? (n(), Q(h, {
                    key: 2,
                    loading: u.value
                }, {
                    template: D(() => [t("div", cD, [(n(), a(G, null, B(9, () => t("div")), 64))])]),
                    default: D(() => [N(KB, {
                        gameList: d[g.value],
                        "game-type": g.value,
                        onOnItemClick: $
                    }, null, 8, ["gameList", "game-type"])]),
                    _: 1
                }, 8, ["loading"])) : S("", !0), y.value === 3 ? (n(), Q(h, {
                    key: 3,
                    loading: u.value
                }, {
                    template: D(() => [t("div", rD, [(n(), a(G, null, B(6, () => t("div")), 64))])]),
                    default: D(() => [N(ZB, {
                        "current-lottery": d[g.value][p.value].categoryCode,
                        onOnItemClick: $
                    }, null, 8, ["current-lottery"])]),
                    _: 1
                }, 8, ["loading"])) : S("", !0)])
            }
        }
    });
const dD = H(uD, [
        ["__scopeId", "data-v-8c355d6f"]
    ]),
    pD = {
        class: "login_tip"
    },
    gD = {
        class: "tip"
    },
    mD = {
        class: "btn_box"
    },
    bD = W({
        __name: "index",
        setup(l) {
            const i = gt(),
                o = ne(),
                u = () => {
                    i.push("/login")
                },
                m = () => {
                    i.push("/register")
                };
            return (g, d) => (n(), a("div", pD, [t("div", gD, [t("div", null, e(g.$t("homeLoginTxt1", [s(o).getProjectName])), 1), t("div", null, e(g.$t("homeLoginTxt2")), 1)]), t("div", mD, [t("div", {
                class: "login",
                onClick: u
            }, e(g.$t("login")), 1), t("div", {
                class: "register",
                onClick: m
            }, e(g.$t("register")), 1)])]))
        }
    });
const _D = H(bD, [
        ["__scopeId", "data-v-12bb3811"]
    ]),
    vD = l => (wt("data-v-d2e2401d"), l = l(), Lt(), l),
    hD = {
        class: "content"
    },
    kD = ["src"],
    fD = {
        class: "content__right"
    },
    yD = vD(() => t("div", {
        class: "message_icon"
    }, null, -1)),
    $D = {
        class: "box1"
    },
    TD = {
        class: "promptHeader"
    },
    CD = ["innerHTML"],
    wD = {
        class: "Laundry-Con"
    },
    LD = {
        class: "Laundry-Con_tip"
    },
    ND = {
        class: "Landty-Con-tips"
    },
    ID = W({
        __name: "whiteGoldHome",
        setup(l) {
            const {
                onDown: i,
                isAppDownload: o,
                isAppDownloadIcon: u,
                showChanglong: m,
                projectIcon: g,
                isRead: d,
                getMessagesData: c,
                showPWA: p
            } = jt(), r = le(), {
                t: _
            } = pt(), b = gt(), {
                setLoading: y
            } = Xe(), {
                closeLaundry: v,
                closePrompt: $,
                store: T,
                promptContent: C
            } = _i();

            function h() {
                b.push({
                    name: "Messages"
                })
            }
            const k = U(() => !r.getToken);
            y(!1);
            const w = () => {
                v(), b.push({
                    name: "SuperJackpot"
                })
            };
            return ht(() => {
                c(), y(!1)
            }), (L, z) => {
                const I = V("svg-icon"),
                    x = V("NavBar"),
                    R = V("van-dialog");
                return n(), a("div", hD, [N(x, {
                    backgroundColor: "#fff"
                }, {
                    left: D(() => [t("img", {
                        src: s(g),
                        alt: ""
                    }, null, 8, kD)]),
                    right: D(() => [t("div", fD, [t("div", {
                        class: "message",
                        onClick: h
                    }, [yD, et(N(Mn, {
                        class: "point"
                    }, null, 512), [
                        [Vt, !s(d)]
                    ])]), s(o) ? (n(), Q(I, {
                        key: 0,
                        onClick: se(s(i), ["stop"]),
                        name: "down",
                        class: "down"
                    }, null, 8, ["onClick"])) : S("", !0)])]),
                    _: 1
                }), k.value ? (n(), Q(_D, {
                    key: 0
                })) : S("", !0), N($i), t("div", $D, [N(RB, {
                    key: "home"
                }), N(AB), N(dD), N(NB), N(bB)]), s(m) ? (n(), Q(Qe, {
                    key: 1
                })) : S("", !0), s(p) && s(u) ? (n(), Q(Ci, {
                    key: 2
                })) : S("", !0), N(Ti), N(R, {
                    show: s(T).prompt,
                    "onUpdate:show": z[0] || (z[0] = O => s(T).prompt = O),
                    "confirm-button-text": s(_)("confirm"),
                    onConfirm: s($)
                }, {
                    default: D(() => [t("div", TD, e(s(_)("prompt")), 1), t("div", {
                        class: "promptContent",
                        innerHTML: s(C)
                    }, null, 8, CD)]),
                    _: 1
                }, 8, ["show", "confirm-button-text", "onConfirm"]), N(yi, {
                    show: s(T).laundry,
                    "onUpdate:show": z[1] || (z[1] = O => s(T).laundry = O),
                    onConfirm: w,
                    "show-cancel-btn": !1,
                    confirmText: "OK",
                    title: s(_)("congratulations")
                }, {
                    content: D(() => [t("div", wD, [t("div", LD, e(s(_)("getSuper")), 1), t("div", ND, e(s(_)("getRewards")), 1)])]),
                    _: 1
                }, 8, ["show", "title"])])
            }
        }
    });
const zD = H(ID, [
        ["__scopeId", "data-v-d2e2401d"]
    ]),
    pP = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: zD
    }, Symbol.toStringTag, {
        value: "Module"
    }));
export {
    JD as A, QD as B, YD as C, yi as D, ZD as E, tr as F, tP as G, eP as H, iP as I, nP as J, er as K, ja as L, aP as M, oP as N, sP as O, lP as P, cP as Q, rP as R, uP as S, dP as T, pP as U, ei as _, wl as a, Zc as b, fl as c, vr as d, gl as e, GD as f, MD as g, BD as h, RD as i, DD as j, PD as k, AD as l, OD as m, WD as n, qD as o, ED as p, HD as q, FD as r, VD as s, jD as t, ai as u, Cl as v, ir as w, UD as x, KD as y, XD as z
};